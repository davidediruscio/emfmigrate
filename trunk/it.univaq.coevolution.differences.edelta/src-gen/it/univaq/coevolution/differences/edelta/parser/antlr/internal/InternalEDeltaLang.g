/*
* generated by Xtext
*/
grammar InternalEDeltaLang;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package it.univaq.coevolution.differences.edelta.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package it.univaq.coevolution.differences.edelta.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import it.univaq.coevolution.differences.edelta.services.EDeltaLangGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private EDeltaLangGrammarAccess grammarAccess;
 	
    public InternalEDeltaLangParser(TokenStream input, EDeltaLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EDeltaLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPackagesEPackageOperationParserRuleCall_0_0()); 
	    }
		lv_packages_0_1=ruleEPackageOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_0_1, 
        		"EPackageOperation");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPackagesComplexOperatorDefParserRuleCall_0_1()); 
	    }
		lv_packages_0_2=ruleComplexOperatorDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_0_2, 
        		"ComplexOperatorDef");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*
;





// Entry rule entryRuleEPackageOperation
entryRuleEPackageOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEPackageOperationRule()); }
	 iv_ruleEPackageOperation=ruleEPackageOperation 
	 { $current=$iv_ruleEPackageOperation.current; } 
	 EOF 
;

// Rule EPackageOperation
ruleEPackageOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEPackageOperationAccess().getPackageKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getVarPackageParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEPackageOperationAccess().getEqualsSignKeyword_0_2());
    }
)?(((
(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getOpChangePackageParserRuleCall_1_0_0_0_0()); 
	    }
		lv_op_3_1=ruleChangePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_1, 
        		"ChangePackage");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getOpAddPackageParserRuleCall_1_0_0_0_1()); 
	    }
		lv_op_3_2=ruleAddPackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_2, 
        		"AddPackage");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getOpDeletePackageParserRuleCall_1_0_0_0_2()); 
	    }
		lv_op_3_3=ruleDeletePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_3, 
        		"DeletePackage");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEPackageOperationAccess().getLeftCurlyBracketKeyword_1_0_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getSettersSetterParserRuleCall_1_0_2_0_0()); 
	    }
		lv_setters_5_0=rulesetter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_5_0, 
        		"setter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getClassesEClassOperationParserRuleCall_1_0_2_1_0()); 
	    }
		lv_classes_6_0=ruleEClassOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_6_0, 
        		"EClassOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEPackageOperationAccess().getRightCurlyBracketKeyword_1_0_3());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEPackageOperationAccess().getComplexComplexOperatorParserRuleCall_1_1_0()); 
	    }
		lv_complex_8_0=ruleComplexOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEPackageOperationRule());
	        }
       		add(
       			$current, 
       			"complex",
        		lv_complex_8_0, 
        		"ComplexOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDeletePackage
entryRuleDeletePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeletePackageRule()); }
	 iv_ruleDeletePackage=ruleDeletePackage 
	 { $current=$iv_ruleDeletePackage.current; } 
	 EOF 
;

// Rule DeletePackage
ruleDeletePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deletePackage' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeletePackageAccess().getDeletePackageKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeletePackageAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeletePackageRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDeletePackageAccess().getRefEPackageCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeletePackageAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAddPackage
entryRuleAddPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddPackageRule()); }
	 iv_ruleAddPackage=ruleAddPackage 
	 { $current=$iv_ruleAddPackage.current; } 
	 EOF 
;

// Rule AddPackage
ruleAddPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='addPackage' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddPackageAccess().getAddPackageKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddPackageAccess().getLeftParenthesisKeyword_1());
    }
((
(
		lv_new_2_0=RULE_STRING
		{
			newLeafNode(lv_new_2_0, grammarAccess.getAddPackageAccess().getNewSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPackageRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAddPackageAccess().getRefSTRINGCrossReference_2_1_0()); 
	}

)
))	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAddPackageAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleChangePackage
entryRuleChangePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangePackageRule()); }
	 iv_ruleChangePackage=ruleChangePackage 
	 { $current=$iv_ruleChangePackage.current; } 
	 EOF 
;

// Rule ChangePackage
ruleChangePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='changePackage' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChangePackageAccess().getChangePackageKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChangePackageAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangePackageRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getChangePackageAccess().getRefEPackageCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChangePackageAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPackageAccess().getPackageAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEClassOperation
entryRuleEClassOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEClassOperationRule()); }
	 iv_ruleEClassOperation=ruleEClassOperation 
	 { $current=$iv_ruleEClassOperation.current; } 
	 EOF 
;

// Rule EClassOperation
ruleEClassOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEClassOperationAccess().getClassKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getVarClassParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Class");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEClassOperationAccess().getEqualsSignKeyword_0_2());
    }
)?(((
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getOpChangeClassParserRuleCall_1_0_0_0()); 
	    }
		lv_op_3_0=ruleChangeClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"ChangeClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getOpAddClassParserRuleCall_1_0_1_0()); 
	    }
		lv_op_4_0=ruleAddClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"AddClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getOpDeleteClassParserRuleCall_1_0_2_0()); 
	    }
		lv_op_5_0=ruleDeleteClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"DeleteClass");
	        afterParserOrEnumRuleCall();
	    }

)
))((	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEClassOperationAccess().getLeftCurlyBracketKeyword_1_1_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getSettersSetterParserRuleCall_1_1_0_1_0_0()); 
	    }
		lv_setters_7_0=rulesetter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_7_0, 
        		"setter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getAttributesEAttributeOperationParserRuleCall_1_1_0_1_1_0()); 
	    }
		lv_attributes_8_0=ruleEAttributeOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"EAttributeOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getReferencesEReferenceOperationParserRuleCall_1_1_0_1_2_0()); 
	    }
		lv_references_9_0=ruleEReferenceOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_9_0, 
        		"EReferenceOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEClassOperationAccess().getRightCurlyBracketKeyword_1_1_0_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEClassOperationAccess().getComplexComplexOperatorParserRuleCall_1_1_1_0()); 
	    }
		lv_complex_11_0=ruleComplexOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEClassOperationRule());
	        }
       		add(
       			$current, 
       			"complex",
        		lv_complex_11_0, 
        		"ComplexOperator");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleChangeClass
entryRuleChangeClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeClassRule()); }
	 iv_ruleChangeClass=ruleChangeClass 
	 { $current=$iv_ruleChangeClass.current; } 
	 EOF 
;

// Rule ChangeClass
ruleChangeClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getChangeClassAccess().getChangeClassAction_0(),
            $current);
    }
)(
(
		lv_op_1_0=	'changeClass(' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getChangeClassAccess().getOpChangeClassKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeClassRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "changeClass(");
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeClassRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getChangeClassAccess().getRefEClassCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChangeClassAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAddClass
entryRuleAddClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddClassRule()); }
	 iv_ruleAddClass=ruleAddClass 
	 { $current=$iv_ruleAddClass.current; } 
	 EOF 
;

// Rule AddClass
ruleAddClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'addClass(' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getAddClassAccess().getOpAddClassKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddClassRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "addClass(");
	    }

)
)((
(
		lv_new_1_0=RULE_STRING
		{
			newLeafNode(lv_new_1_0, grammarAccess.getAddClassAccess().getNewSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddClassRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAddClassAccess().getRefSTRINGCrossReference_1_1_0()); 
	}

)
))	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddClassAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleDeleteClass
entryRuleDeleteClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteClassRule()); }
	 iv_ruleDeleteClass=ruleDeleteClass 
	 { $current=$iv_ruleDeleteClass.current; } 
	 EOF 
;

// Rule DeleteClass
ruleDeleteClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'deleteClass(' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getDeleteClassAccess().getOpDeleteClassKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteClassRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "deleteClass(");
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteClassRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDeleteClassAccess().getRefEClassCrossReference_1_0()); 
	}

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeleteClassAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassAccess().getClassAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulesetter
entryRulesetter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetterRule()); }
	 iv_rulesetter=rulesetter 
	 { $current=$iv_rulesetter.current; } 
	 EOF 
;

// Rule setter
rulesetter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetterAccess().getSetKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSetterAccess().getMetafeatureEStructuralFeatureCrossReference_1_0()); 
	}

)
)(
(
		lv_operator_2_0=	'<=' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getSetterAccess().getOperatorLessThanSignEqualsSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "<=");
	    }

)
)(((
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getSetterAccess().getValueSTRINGTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
)
    |this_BOOL_4=RULE_BOOL
    { 
    newLeafNode(this_BOOL_4, grammarAccess.getSetterAccess().getBOOLTerminalRuleCall_3_0_1()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSetterAccess().getCardCardinalityParserRuleCall_3_1_0()); 
	    }
		lv_card_5_0=ruleCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetterRule());
	        }
       		set(
       			$current, 
       			"card",
        		lv_card_5_0, 
        		"Cardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getSetterAccess().getValueRefEObjectCrossReference_3_2_0()); 
	}

)
))(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSetterAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetterRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getSetterAccess().getValueRefEObjectCrossReference_4_1_0()); 
	}

)
))*	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSetterAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleCardinality
entryRuleCardinality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); } 
	 iv_ruleCardinality=ruleCardinality 
	 { $current=$iv_ruleCardinality.current.getText(); }  
	 EOF 
;

// Rule Cardinality
ruleCardinality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_0()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCardinalityAccess().getAsteriskKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEAttributeOperation
entryRuleEAttributeOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEAttributeOperationRule()); }
	 iv_ruleEAttributeOperation=ruleEAttributeOperation 
	 { $current=$iv_ruleEAttributeOperation.current; } 
	 EOF 
;

// Rule EAttributeOperation
ruleEAttributeOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEAttributeOperationAccess().getAttributeKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getVarAttributeParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEAttributeOperationAccess().getEqualsSignKeyword_0_2());
    }
)?((((
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getOpChangeAttributeParserRuleCall_1_0_0_0_0()); 
	    }
		lv_op_3_0=ruleChangeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"ChangeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getOpAddAttributeParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_4_0=ruleAddAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"AddAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getOpDeleteAttributeParserRuleCall_1_0_0_2_0()); 
	    }
		lv_op_5_0=ruleDeleteAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"DeleteAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEAttributeOperationAccess().getLeftCurlyBracketKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getSettersSetterParserRuleCall_1_0_1_1_0()); 
	    }
		lv_setters_7_0=rulesetter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_7_0, 
        		"setter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEAttributeOperationAccess().getRightCurlyBracketKeyword_1_0_1_2());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEAttributeOperationAccess().getComplexComplexOperatorParserRuleCall_1_1_0()); 
	    }
		lv_complex_9_0=ruleComplexOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEAttributeOperationRule());
	        }
       		add(
       			$current, 
       			"complex",
        		lv_complex_9_0, 
        		"ComplexOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleChangeAttribute
entryRuleChangeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeAttributeRule()); }
	 iv_ruleChangeAttribute=ruleChangeAttribute 
	 { $current=$iv_ruleChangeAttribute.current; } 
	 EOF 
;

// Rule ChangeAttribute
ruleChangeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'changeAttribute(' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getChangeAttributeAccess().getOpChangeAttributeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeAttributeRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "changeAttribute(");
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getChangeAttributeAccess().getRefEAttributeCrossReference_1_0()); 
	}

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChangeAttributeAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleAddAttribute
entryRuleAddAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddAttributeRule()); }
	 iv_ruleAddAttribute=ruleAddAttribute 
	 { $current=$iv_ruleAddAttribute.current; } 
	 EOF 
;

// Rule AddAttribute
ruleAddAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'addAttribute(' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getAddAttributeAccess().getOpAddAttributeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddAttributeRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "addAttribute(");
	    }

)
)((
(
		lv_new_1_0=RULE_STRING
		{
			newLeafNode(lv_new_1_0, grammarAccess.getAddAttributeAccess().getNewSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddAttributeRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAddAttributeAccess().getRefSTRINGCrossReference_1_1_0()); 
	}

)
))	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddAttributeAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleDeleteAttribute
entryRuleDeleteAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteAttributeRule()); }
	 iv_ruleDeleteAttribute=ruleDeleteAttribute 
	 { $current=$iv_ruleDeleteAttribute.current; } 
	 EOF 
;

// Rule DeleteAttribute
ruleDeleteAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'deleteAttribute(' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getDeleteAttributeAccess().getOpDeleteAttributeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteAttributeRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "deleteAttribute(");
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDeleteAttributeAccess().getRefEAttributeCrossReference_1_0()); 
	}

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeleteAttributeAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleEReferenceOperation
entryRuleEReferenceOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEReferenceOperationRule()); }
	 iv_ruleEReferenceOperation=ruleEReferenceOperation 
	 { $current=$iv_ruleEReferenceOperation.current; } 
	 EOF 
;

// Rule EReferenceOperation
ruleEReferenceOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='reference' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEReferenceOperationAccess().getReferenceKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getVarReferenceParserRuleCall_0_1_0()); 
	    }
		lv_var_1_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEReferenceOperationAccess().getEqualsSignKeyword_0_2());
    }
)?((((
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getOpChangeReferenceParserRuleCall_1_0_0_0_0()); 
	    }
		lv_op_3_0=ruleChangeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"ChangeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getOpAddReferenceParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_4_0=ruleAddReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"AddReference");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getOpDeleteReferenceParserRuleCall_1_0_0_2_0()); 
	    }
		lv_op_5_0=ruleDeleteReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"DeleteReference");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEReferenceOperationAccess().getLeftCurlyBracketKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getSettersSetterParserRuleCall_1_0_1_1_0()); 
	    }
		lv_setters_7_0=rulesetter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		add(
       			$current, 
       			"setters",
        		lv_setters_7_0, 
        		"setter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEReferenceOperationAccess().getRightCurlyBracketKeyword_1_0_1_2());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEReferenceOperationAccess().getComplexComplexOperatorParserRuleCall_1_1_0()); 
	    }
		lv_complex_9_0=ruleComplexOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEReferenceOperationRule());
	        }
       		add(
       			$current, 
       			"complex",
        		lv_complex_9_0, 
        		"ComplexOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleChangeReference
entryRuleChangeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeReferenceRule()); }
	 iv_ruleChangeReference=ruleChangeReference 
	 { $current=$iv_ruleChangeReference.current; } 
	 EOF 
;

// Rule ChangeReference
ruleChangeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'changeReference' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getChangeReferenceAccess().getOpChangeReferenceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeReferenceRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "changeReference");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChangeReferenceAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChangeReferenceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getChangeReferenceAccess().getRefEReferenceCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChangeReferenceAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAddReference
entryRuleAddReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddReferenceRule()); }
	 iv_ruleAddReference=ruleAddReference 
	 { $current=$iv_ruleAddReference.current; } 
	 EOF 
;

// Rule AddReference
ruleAddReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'addReference' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getAddReferenceAccess().getOpAddReferenceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddReferenceRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "addReference");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddReferenceAccess().getLeftParenthesisKeyword_1());
    }
((
(
		lv_new_2_0=RULE_STRING
		{
			newLeafNode(lv_new_2_0, grammarAccess.getAddReferenceAccess().getNewSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddReferenceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAddReferenceAccess().getRefSTRINGCrossReference_2_1_0()); 
	}

)
))	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAddReferenceAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleDeleteReference
entryRuleDeleteReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteReferenceRule()); }
	 iv_ruleDeleteReference=ruleDeleteReference 
	 { $current=$iv_ruleDeleteReference.current; } 
	 EOF 
;

// Rule DeleteReference
ruleDeleteReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'deleteReference' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getDeleteReferenceAccess().getOpDeleteReferenceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteReferenceRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "deleteReference");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeleteReferenceAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteReferenceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDeleteReferenceAccess().getRefEReferenceCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeleteReferenceAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleComplexOperatorDef
entryRuleComplexOperatorDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexOperatorDefRule()); }
	 iv_ruleComplexOperatorDef=ruleComplexOperatorDef 
	 { $current=$iv_ruleComplexOperatorDef.current; } 
	 EOF 
;

// Rule ComplexOperatorDef
ruleComplexOperatorDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def change' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComplexOperatorDefAccess().getDefChangeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getComplexOperatorDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getComplexOperatorDefAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getParamsParameterParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComplexOperatorDefAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getParamsParameterParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getComplexOperatorDefAccess().getRightParenthesisKeyword_2_3());
    }
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getComplexOperatorDefAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getPackageOperationsEPackageOperationParserRuleCall_4_0_0()); 
	    }
		lv_packageOperations_8_0=ruleEPackageOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"packageOperations",
        		lv_packageOperations_8_0, 
        		"EPackageOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getClassOperationsEClassOperationParserRuleCall_4_1_0()); 
	    }
		lv_classOperations_9_0=ruleEClassOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"classOperations",
        		lv_classOperations_9_0, 
        		"EClassOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getAttributeOperationsEAttributeOperationParserRuleCall_4_2_0()); 
	    }
		lv_attributeOperations_10_0=ruleEAttributeOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"attributeOperations",
        		lv_attributeOperations_10_0, 
        		"EAttributeOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexOperatorDefAccess().getReferenceOperationsEReferenceOperationParserRuleCall_4_3_0()); 
	    }
		lv_referenceOperations_11_0=ruleEReferenceOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexOperatorDefRule());
	        }
       		add(
       			$current, 
       			"referenceOperations",
        		lv_referenceOperations_11_0, 
        		"EReferenceOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getComplexOperatorDefAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleComplexOperator
entryRuleComplexOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexOperatorRule()); }
	 iv_ruleComplexOperator=ruleComplexOperator 
	 { $current=$iv_ruleComplexOperator.current; } 
	 EOF 
;

// Rule ComplexOperator
ruleComplexOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getComplexOperatorAccess().getRefComplexOperatorDefCrossReference_0_0()); 
	}

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComplexOperatorAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getComplexOperatorAccess().getArgsEObjectCrossReference_2_0_0()); 
	}

)
)
    |(
(
		lv_new_3_0=RULE_STRING
		{
			newLeafNode(lv_new_3_0, grammarAccess.getComplexOperatorAccess().getNewSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_3_0, 
        		"STRING");
	    }

)
))?(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComplexOperatorAccess().getCommaKeyword_3_0());
    }
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getComplexOperatorAccess().getArgsEObjectCrossReference_3_1_0_0()); 
	}

)
)
    |(
(
		lv_new_6_0=RULE_STRING
		{
			newLeafNode(lv_new_6_0, grammarAccess.getComplexOperatorAccess().getNewSTRINGTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexOperatorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_6_0, 
        		"STRING");
	    }

)
)))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getComplexOperatorAccess().getRightParenthesisKeyword_4());
    }
	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getComplexOperatorAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getClassParserRuleCall_0_0()); 
    }
    this_Class_0=ruleClass
    { 
        $current = $this_Class_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_0_1());
    }
	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getClassKeyword_0_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getReferenceParserRuleCall_1_0()); 
    }
    this_Reference_3=ruleReference
    { 
        $current = $this_Reference_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getColonKeyword_1_1());
    }
	otherlv_5='reference' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getReferenceKeyword_1_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getPackageParserRuleCall_2_0()); 
    }
    this_Package_6=rulePackage
    { 
        $current = $this_Package_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getColonKeyword_2_1());
    }
	otherlv_8='package' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getPackageKeyword_2_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getAttributeParserRuleCall_3_0()); 
    }
    this_Attribute_9=ruleAttribute
    { 
        $current = $this_Attribute_9.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getParameterAccess().getColonKeyword_3_1());
    }
	otherlv_11='attribute' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getAttributeKeyword_3_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getBooleanDefParserRuleCall_4_0()); 
    }
    this_BooleanDef_12=ruleBooleanDef
    { 
        $current = $this_BooleanDef_12.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getParameterAccess().getColonKeyword_4_1());
    }
	otherlv_14='bool' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getParameterAccess().getBoolKeyword_4_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getIntDefParserRuleCall_5_0()); 
    }
    this_IntDef_15=ruleIntDef
    { 
        $current = $this_IntDef_15.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_16=':' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getParameterAccess().getColonKeyword_5_1());
    }
	otherlv_17='int' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getParameterAccess().getIntKeyword_5_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getStringDefParserRuleCall_6_0()); 
    }
    this_StringDef_18=ruleStringDef
    { 
        $current = $this_StringDef_18.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getParameterAccess().getColonKeyword_6_1());
    }
	otherlv_20='string' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getParameterAccess().getStringKeyword_6_2());
    }
))
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeAccess().getAttributeAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceAccess().getReferenceAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleBooleanDef
entryRuleBooleanDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanDefRule()); }
	 iv_ruleBooleanDef=ruleBooleanDef 
	 { $current=$iv_ruleBooleanDef.current; } 
	 EOF 
;

// Rule BooleanDef
ruleBooleanDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanDefAccess().getBooleanDefAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBooleanDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleStringDef
entryRuleStringDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringDefRule()); }
	 iv_ruleStringDef=ruleStringDef 
	 { $current=$iv_ruleStringDef.current; } 
	 EOF 
;

// Rule StringDef
ruleStringDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getStringDefAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleIntDef
entryRuleIntDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntDefRule()); }
	 iv_ruleIntDef=ruleIntDef 
	 { $current=$iv_ruleIntDef.current; } 
	 EOF 
;

// Rule IntDef
ruleIntDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntDefAccess().getIntDefAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getIntDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





RULE_BOOL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


