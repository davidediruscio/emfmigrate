package p1=addPackage("f") {

	class c1=addClass("d") {
		
		attribute a1=addAttribute("ddd"){}
	
	}

}

package petrinetmm0=changePackage(PetriNetMM0 ) {

class NamedElement=addClass('NamedElement') {

}

class Element= addClass("Element") {
set eSuperTypes <= NamedElement;
}

class Arc=addClass("Arc") {
set eSuperTypes <= NamedElement;
set abstract <= 'true';
attribute weight=addAttribute("weight") {
set eType<= Integer; 
}

}


class PTArc=addClass("PTArc") {

	set abstract<= 'false';
	set eSuperTypes <=Arc;
	reference srcPT = addReference("src") {
	set eType<=  Place;
	set lowerBound<= 01;
	set upperBound<= 01;
	}
	
	reference dst=addReference("dst") {
	 set eType <= Transition;
	 set lowerBound<=01;
	set upperBound<=01;
	}

}


class TPArc=addClass("TPArc") {
	
	set abstract<= 'true';
	set eSuperTypes <=Arc;
	reference srcTP=addReference("src") {
	set eType <= Transition;
	 set lowerBound <=01; 
	set upperBound <=01; 
	}
	
	reference dstTP=addReference("dst") {
	set eType <= Place;
	set lowerBound <=01; 
	set upperBound <=01; 
	}
	
}

class changedPlace= changeClass( Place ) {
	reference outgoingArcs=addReference("outgoingArcs") {
	set eType <=PTArc;
	}
	reference incomingArcs=addReference("incomingArcs") {
	set eType <=TPArc;
	}
	

	reference dst_place=changeReference(dst){
		
	set eContainingClass<=	PTArc;
		}
	reference src_place=changeReference(src){
		
	set eContainingClass<=	TPArc;
		}
}
class changedTransition= changeClass( Transition) {

	reference incomingT=addReference("incomingArcs") {
		set eType <=TPArc;
		}
		reference outgoingT=addReference("outgoingArcs") {
		set eType <=PTArc;
		}
	reference dstTransition=changeReference(dst){
		
	set eContainingClass<=	TPArc;
		}
	reference srcTransition=changeReference(src){
		
	set eContainingClass<=	PTArc;
		}
	
}




 class petrinet=changeClass(Net) {
 	set name<="PetriNet";
	set eSuperTypes <=  NamedElement;
	reference arcs =addReference("arcs") {
	set eType<= Arc ;
	set lowerBound <=1; 
	set upperBound <= '*'; 
	
	}
	

 reference refmerged=mergeReferences(places,transitions,'elements',Element);
 

}
 


}
def change mergeReferences(ref1: reference,ref2 : reference, newname: string,type:class){
deleteReference(ref1){}
deleteReference(ref2){}
addReference(newname){
	set name<=newName;
	set eType<=type;
}


} 






 



