/*
* generated by Xtext
*/

package it.univaq.coevolution.emfmigrate.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EmigGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MyModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MyModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMigrationLibAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMigrationLibMigrationLibraryParserRuleCall_0_0 = (RuleCall)cMigrationLibAssignment_0.eContents().get(0);
		private final Assignment cMigrationProgrAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMigrationProgrMigrationProgramParserRuleCall_1_0 = (RuleCall)cMigrationProgrAssignment_1.eContents().get(0);
		
		//MyModel:
		//	migrationLib=MigrationLibrary | MigrationProgr=MigrationProgram;
		public ParserRule getRule() { return rule; }

		//migrationLib=MigrationLibrary | MigrationProgr=MigrationProgram
		public Alternatives getAlternatives() { return cAlternatives; }

		//migrationLib=MigrationLibrary
		public Assignment getMigrationLibAssignment_0() { return cMigrationLibAssignment_0; }

		//MigrationLibrary
		public RuleCall getMigrationLibMigrationLibraryParserRuleCall_0_0() { return cMigrationLibMigrationLibraryParserRuleCall_0_0; }

		//MigrationProgr=MigrationProgram
		public Assignment getMigrationProgrAssignment_1() { return cMigrationProgrAssignment_1; }

		//MigrationProgram
		public RuleCall getMigrationProgrMigrationProgramParserRuleCall_1_0() { return cMigrationProgrMigrationProgramParserRuleCall_1_0; }
	}

	public class MigrationLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigrationLibrary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLibraryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleIDTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRulesRuleParserRuleCall_3_0 = (RuleCall)cRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MigrationLibrary:
		//	"Library" title=ID "{" rules+=Rule* "}";
		public ParserRule getRule() { return rule; }

		//"Library" title=ID "{" rules+=Rule* "}"
		public Group getGroup() { return cGroup; }

		//"Library"
		public Keyword getLibraryKeyword_0() { return cLibraryKeyword_0; }

		//title=ID
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//ID
		public RuleCall getTitleIDTerminalRuleCall_1_0() { return cTitleIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//rules+=Rule*
		public Assignment getRulesAssignment_3() { return cRulesAssignment_3; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_3_0() { return cRulesRuleParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MigrationProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigrationProgram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cIncludeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLibsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLibsSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cLibsAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMigrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMigrMigrateKeyword_1_0 = (Keyword)cMigrAssignment_1.eContents().get(0);
		private final Assignment cTypeArtAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeArtArtifactParserRuleCall_2_0 = (RuleCall)cTypeArtAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cTransformationPackageAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final CrossReference cTransformationPackageEPackageCrossReference_5_0_0 = (CrossReference)cTransformationPackageAssignment_5_0.eContents().get(0);
		private final RuleCall cTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1 = (RuleCall)cTransformationPackageEPackageCrossReference_5_0_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cTransformationPackageAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cTransformationPackageEPackageCrossReference_5_1_1_0 = (CrossReference)cTransformationPackageAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cTransformationPackageEPackageCrossReference_5_1_1_0.eContents().get(1);
		private final Keyword cWithKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDeltaAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDeltaSTRINGTerminalRuleCall_7_0 = (RuleCall)cDeltaAssignment_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRulesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRulesRuleParserRuleCall_9_0 = (RuleCall)cRulesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//MigrationProgram:
		//	("include" libs+=STRING ";")* migr="migrate" typeArt=Artifact name=STRING ":"
		//	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
		//	rules+=Rule* "}";
		public ParserRule getRule() { return rule; }

		//("include" libs+=STRING ";")* migr="migrate" typeArt=Artifact name=STRING ":" (transformationPackage+=[ecore::EPackage]
		//("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{" rules+=Rule* "}"
		public Group getGroup() { return cGroup; }

		//("include" libs+=STRING ";")*
		public Group getGroup_0() { return cGroup_0; }

		//"include"
		public Keyword getIncludeKeyword_0_0() { return cIncludeKeyword_0_0; }

		//libs+=STRING
		public Assignment getLibsAssignment_0_1() { return cLibsAssignment_0_1; }

		//STRING
		public RuleCall getLibsSTRINGTerminalRuleCall_0_1_0() { return cLibsSTRINGTerminalRuleCall_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//migr="migrate"
		public Assignment getMigrAssignment_1() { return cMigrAssignment_1; }

		//"migrate"
		public Keyword getMigrMigrateKeyword_1_0() { return cMigrMigrateKeyword_1_0; }

		//typeArt=Artifact
		public Assignment getTypeArtAssignment_2() { return cTypeArtAssignment_2; }

		//Artifact
		public RuleCall getTypeArtArtifactParserRuleCall_2_0() { return cTypeArtArtifactParserRuleCall_2_0; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])
		public Group getGroup_5() { return cGroup_5; }

		//transformationPackage+=[ecore::EPackage]
		public Assignment getTransformationPackageAssignment_5_0() { return cTransformationPackageAssignment_5_0; }

		//[ecore::EPackage]
		public CrossReference getTransformationPackageEPackageCrossReference_5_0_0() { return cTransformationPackageEPackageCrossReference_5_0_0; }

		//ID
		public RuleCall getTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1() { return cTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1; }

		//"," transformationPackage+=[ecore::EPackage]
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//transformationPackage+=[ecore::EPackage]
		public Assignment getTransformationPackageAssignment_5_1_1() { return cTransformationPackageAssignment_5_1_1; }

		//[ecore::EPackage]
		public CrossReference getTransformationPackageEPackageCrossReference_5_1_1_0() { return cTransformationPackageEPackageCrossReference_5_1_1_0; }

		//ID
		public RuleCall getTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1() { return cTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1; }

		//"with"
		public Keyword getWithKeyword_6() { return cWithKeyword_6; }

		//delta=STRING
		public Assignment getDeltaAssignment_7() { return cDeltaAssignment_7; }

		//STRING
		public RuleCall getDeltaSTRINGTerminalRuleCall_7_0() { return cDeltaSTRINGTerminalRuleCall_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//rules+=Rule*
		public Assignment getRulesAssignment_9() { return cRulesAssignment_9; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_9_0() { return cRulesRuleParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Artifact");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeAlternatives_0 = (Alternatives)cTypeAssignment.eContents().get(0);
		private final Keyword cTypeTransformationKeyword_0_0 = (Keyword)cTypeAlternatives_0.eContents().get(0);
		private final Keyword cTypeModelKeyword_0_1 = (Keyword)cTypeAlternatives_0.eContents().get(1);
		private final Keyword cTypeTcsModelKeyword_0_2 = (Keyword)cTypeAlternatives_0.eContents().get(2);
		
		//Artifact:
		//	type=("transformation" | "model" | "tcs-model");
		public ParserRule getRule() { return rule; }

		//type=("transformation" | "model" | "tcs-model")
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//"transformation" | "model" | "tcs-model"
		public Alternatives getTypeAlternatives_0() { return cTypeAlternatives_0; }

		//"transformation"
		public Keyword getTypeTransformationKeyword_0_0() { return cTypeTransformationKeyword_0_0; }

		//"model"
		public Keyword getTypeModelKeyword_0_1() { return cTypeModelKeyword_0_1; }

		//"tcs-model"
		public Keyword getTypeTcsModelKeyword_0_2() { return cTypeTcsModelKeyword_0_2; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilterAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFilterOpDefParserRuleCall_3_0 = (RuleCall)cFilterAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRewritingRulesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRewritingRulesRewritingRuleParserRuleCall_6_0 = (RuleCall)cRewritingRulesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Rule:
		//	"rule" name=ID "[" //|refFilter=[edelta::ComplexOperatorDef]
		//	filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
		public ParserRule getRule() { return rule; }

		//"rule" name=ID "[" //|refFilter=[edelta::ComplexOperatorDef]
		//filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}"
		public Group getGroup() { return cGroup; }

		//"rule"
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		////|refFilter=[edelta::ComplexOperatorDef]
		//filter=OpDef
		public Assignment getFilterAssignment_3() { return cFilterAssignment_3; }

		//OpDef
		public RuleCall getFilterOpDefParserRuleCall_3_0() { return cFilterOpDefParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//rewritingRules+=RewritingRule*
		public Assignment getRewritingRulesAssignment_6() { return cRewritingRulesAssignment_6; }

		//RewritingRule
		public RuleCall getRewritingRulesRewritingRuleParserRuleCall_6_0() { return cRewritingRulesRewritingRuleParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class OpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OpDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPackageOpDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEClassOpDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEAttributeOpDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEReferenceOpDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		////ComplexOpDef:op=[];
		//OpDef:
		//	EPackageOpDef | EClassOpDef | EAttributeOpDef | EReferenceOpDef;
		public ParserRule getRule() { return rule; }

		//EPackageOpDef | EClassOpDef | EAttributeOpDef | EReferenceOpDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//EPackageOpDef
		public RuleCall getEPackageOpDefParserRuleCall_0() { return cEPackageOpDefParserRuleCall_0; }

		//EClassOpDef
		public RuleCall getEClassOpDefParserRuleCall_1() { return cEClassOpDefParserRuleCall_1; }

		//EAttributeOpDef
		public RuleCall getEAttributeOpDefParserRuleCall_2() { return cEAttributeOpDefParserRuleCall_2; }

		//EReferenceOpDef
		public RuleCall getEReferenceOpDefParserRuleCall_3() { return cEReferenceOpDefParserRuleCall_3; }
	}

	public class EPackageOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPackageOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarPackageParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0 = (Assignment)cAlternatives_1_0.eContents().get(0);
		private final Keyword cOpChangePackageKeyword_1_0_0_0 = (Keyword)cOpAssignment_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1 = (Assignment)cAlternatives_1_0.eContents().get(1);
		private final Keyword cOpAddPackageKeyword_1_0_1_0 = (Keyword)cOpAssignment_1_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_2 = (Assignment)cAlternatives_1_0.eContents().get(2);
		private final Keyword cOpDeletePackageKeyword_1_0_2_0 = (Keyword)cOpAssignment_1_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRefAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRefPackageParserRuleCall_1_2_0 = (RuleCall)cRefAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cPackageKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cWhereKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Alternatives cAlternatives_1_8 = (Alternatives)cGroup_1.eContents().get(8);
		private final Assignment cSettersAssignment_1_8_0 = (Assignment)cAlternatives_1_8.eContents().get(0);
		private final RuleCall cSettersSetterDefParserRuleCall_1_8_0_0 = (RuleCall)cSettersAssignment_1_8_0.eContents().get(0);
		private final Assignment cClassesAssignment_1_8_1 = (Assignment)cAlternatives_1_8.eContents().get(1);
		private final RuleCall cClassesEClassOpDefParserRuleCall_1_8_1_0 = (RuleCall)cClassesAssignment_1_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_9 = (Keyword)cGroup_1.eContents().get(9);
		
		//EPackageOpDef:
		//	("package" var=Package "=") ((op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package"
		//	")" "where" "{" (setters+=setterDef | classes+=EClassOpDef)* "}") //|complex+=CallOperator
		//;
		public ParserRule getRule() { return rule; }

		//("package" var=Package "=") ((op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package"
		//")" "where" "{" (setters+=setterDef | classes+=EClassOpDef)* "}") //|complex+=CallOperator
		public Group getGroup() { return cGroup; }

		//"package" var=Package "="
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//var=Package
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Package
		public RuleCall getVarPackageParserRuleCall_0_1_0() { return cVarPackageParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package" ")" "where" "{"
		//(setters+=setterDef | classes+=EClassOpDef)* "}"
		public Group getGroup_1() { return cGroup_1; }

		//op="changePackage" | op="addPackage" | op="deletePackage"
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//op="changePackage"
		public Assignment getOpAssignment_1_0_0() { return cOpAssignment_1_0_0; }

		//"changePackage"
		public Keyword getOpChangePackageKeyword_1_0_0_0() { return cOpChangePackageKeyword_1_0_0_0; }

		//op="addPackage"
		public Assignment getOpAssignment_1_0_1() { return cOpAssignment_1_0_1; }

		//"addPackage"
		public Keyword getOpAddPackageKeyword_1_0_1_0() { return cOpAddPackageKeyword_1_0_1_0; }

		//op="deletePackage"
		public Assignment getOpAssignment_1_0_2() { return cOpAssignment_1_0_2; }

		//"deletePackage"
		public Keyword getOpDeletePackageKeyword_1_0_2_0() { return cOpDeletePackageKeyword_1_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//ref=Package
		public Assignment getRefAssignment_1_2() { return cRefAssignment_1_2; }

		//Package
		public RuleCall getRefPackageParserRuleCall_1_2_0() { return cRefPackageParserRuleCall_1_2_0; }

		//":"
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }

		//"package"
		public Keyword getPackageKeyword_1_4() { return cPackageKeyword_1_4; }

		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }

		//"where"
		public Keyword getWhereKeyword_1_6() { return cWhereKeyword_1_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_7() { return cLeftCurlyBracketKeyword_1_7; }

		//(setters+=setterDef | classes+=EClassOpDef)*
		public Alternatives getAlternatives_1_8() { return cAlternatives_1_8; }

		//setters+=setterDef
		public Assignment getSettersAssignment_1_8_0() { return cSettersAssignment_1_8_0; }

		//setterDef
		public RuleCall getSettersSetterDefParserRuleCall_1_8_0_0() { return cSettersSetterDefParserRuleCall_1_8_0_0; }

		//classes+=EClassOpDef
		public Assignment getClassesAssignment_1_8_1() { return cClassesAssignment_1_8_1; }

		//EClassOpDef
		public RuleCall getClassesEClassOpDefParserRuleCall_1_8_1_0() { return cClassesEClassOpDefParserRuleCall_1_8_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_9() { return cRightCurlyBracketKeyword_1_9; }
	}

	public class EClassOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarClassParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0 = (Assignment)cAlternatives_1_0.eContents().get(0);
		private final Keyword cOpChangeClassKeyword_1_0_0_0 = (Keyword)cOpAssignment_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1 = (Assignment)cAlternatives_1_0.eContents().get(1);
		private final Keyword cOpAddClassKeyword_1_0_1_0 = (Keyword)cOpAssignment_1_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_2 = (Assignment)cAlternatives_1_0.eContents().get(2);
		private final Keyword cOpDeleteClassKeyword_1_0_2_0 = (Keyword)cOpAssignment_1_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRefAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRefClassParserRuleCall_1_2_0 = (RuleCall)cRefAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cClassKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cWhereKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Alternatives cAlternatives_1_7_1 = (Alternatives)cGroup_1_7.eContents().get(1);
		private final Assignment cSettersAssignment_1_7_1_0 = (Assignment)cAlternatives_1_7_1.eContents().get(0);
		private final RuleCall cSettersSetterDefParserRuleCall_1_7_1_0_0 = (RuleCall)cSettersAssignment_1_7_1_0.eContents().get(0);
		private final Assignment cAttributesAssignment_1_7_1_1 = (Assignment)cAlternatives_1_7_1.eContents().get(1);
		private final RuleCall cAttributesEAttributeOpDefParserRuleCall_1_7_1_1_0 = (RuleCall)cAttributesAssignment_1_7_1_1.eContents().get(0);
		private final Assignment cReferencesAssignment_1_7_1_2 = (Assignment)cAlternatives_1_7_1.eContents().get(2);
		private final RuleCall cReferencesEReferenceOpDefParserRuleCall_1_7_1_2_0 = (RuleCall)cReferencesAssignment_1_7_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_7_2 = (Keyword)cGroup_1_7.eContents().get(2);
		
		//EClassOpDef:
		//	("class" var=Class "=") ((op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where"
		//	("{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")) //|complex+=CallOperator
		//;
		public ParserRule getRule() { return rule; }

		//("class" var=Class "=") ((op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where"
		//("{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")) //|complex+=CallOperator
		public Group getGroup() { return cGroup; }

		//"class" var=Class "="
		public Group getGroup_0() { return cGroup_0; }

		//"class"
		public Keyword getClassKeyword_0_0() { return cClassKeyword_0_0; }

		//var=Class
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Class
		public RuleCall getVarClassParserRuleCall_0_1_0() { return cVarClassParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where" ("{" (setters+=setterDef |
		//attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")
		public Group getGroup_1() { return cGroup_1; }

		//op="changeClass" | op="addClass" | op="deleteClass"
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//op="changeClass"
		public Assignment getOpAssignment_1_0_0() { return cOpAssignment_1_0_0; }

		//"changeClass"
		public Keyword getOpChangeClassKeyword_1_0_0_0() { return cOpChangeClassKeyword_1_0_0_0; }

		//op="addClass"
		public Assignment getOpAssignment_1_0_1() { return cOpAssignment_1_0_1; }

		//"addClass"
		public Keyword getOpAddClassKeyword_1_0_1_0() { return cOpAddClassKeyword_1_0_1_0; }

		//op="deleteClass"
		public Assignment getOpAssignment_1_0_2() { return cOpAssignment_1_0_2; }

		//"deleteClass"
		public Keyword getOpDeleteClassKeyword_1_0_2_0() { return cOpDeleteClassKeyword_1_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//ref=Class
		public Assignment getRefAssignment_1_2() { return cRefAssignment_1_2; }

		//Class
		public RuleCall getRefClassParserRuleCall_1_2_0() { return cRefClassParserRuleCall_1_2_0; }

		//":"
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }

		//"class"
		public Keyword getClassKeyword_1_4() { return cClassKeyword_1_4; }

		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }

		//"where"
		public Keyword getWhereKeyword_1_6() { return cWhereKeyword_1_6; }

		//"{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}"
		public Group getGroup_1_7() { return cGroup_1_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_7_0() { return cLeftCurlyBracketKeyword_1_7_0; }

		//(setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)*
		public Alternatives getAlternatives_1_7_1() { return cAlternatives_1_7_1; }

		//setters+=setterDef
		public Assignment getSettersAssignment_1_7_1_0() { return cSettersAssignment_1_7_1_0; }

		//setterDef
		public RuleCall getSettersSetterDefParserRuleCall_1_7_1_0_0() { return cSettersSetterDefParserRuleCall_1_7_1_0_0; }

		//attributes+=EAttributeOpDef
		public Assignment getAttributesAssignment_1_7_1_1() { return cAttributesAssignment_1_7_1_1; }

		//EAttributeOpDef
		public RuleCall getAttributesEAttributeOpDefParserRuleCall_1_7_1_1_0() { return cAttributesEAttributeOpDefParserRuleCall_1_7_1_1_0; }

		//references+=EReferenceOpDef
		public Assignment getReferencesAssignment_1_7_1_2() { return cReferencesAssignment_1_7_1_2; }

		//EReferenceOpDef
		public RuleCall getReferencesEReferenceOpDefParserRuleCall_1_7_1_2_0() { return cReferencesEReferenceOpDefParserRuleCall_1_7_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_7_2() { return cRightCurlyBracketKeyword_1_7_2; }
	}

	public class EAttributeOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAttributeOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarAttributeParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final Keyword cOpChangeEAttributeKeyword_1_0_0_0_0 = (Keyword)cOpAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cOpAddEAttributeKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final Keyword cOpDeleteEAttributeKeyword_1_0_0_2_0 = (Keyword)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cRefAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cRefAttributeParserRuleCall_1_0_2_0 = (RuleCall)cRefAssignment_1_0_2.eContents().get(0);
		private final Keyword cColonKeyword_1_0_3 = (Keyword)cGroup_1_0.eContents().get(3);
		private final Keyword cAttributeKeyword_1_0_4 = (Keyword)cGroup_1_0.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cWhereKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Alternatives cAlternatives_1_3 = (Alternatives)cGroup_1.eContents().get(3);
		private final Group cGroup_1_3_0 = (Group)cAlternatives_1_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_3_0_0 = (Keyword)cGroup_1_3_0.eContents().get(0);
		private final Assignment cSettersAssignment_1_3_0_1 = (Assignment)cGroup_1_3_0.eContents().get(1);
		private final RuleCall cSettersSetterDefParserRuleCall_1_3_0_1_0 = (RuleCall)cSettersAssignment_1_3_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3_0_2 = (Keyword)cGroup_1_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_3_1 = (Keyword)cAlternatives_1_3.eContents().get(1);
		
		//EAttributeOpDef:
		//	("attribute" var=Attribute "=") (((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "("
		//	ref=Attribute ":" "attribute") ")" "where" ("{" setters+=setterDef* "}" | ";")) //|complex+=CallOperator
		//;
		public ParserRule getRule() { return rule; }

		//("attribute" var=Attribute "=") (((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute
		//":" "attribute") ")" "where" ("{" setters+=setterDef* "}" | ";")) //|complex+=CallOperator
		public Group getGroup() { return cGroup; }

		//"attribute" var=Attribute "="
		public Group getGroup_0() { return cGroup_0; }

		//"attribute"
		public Keyword getAttributeKeyword_0_0() { return cAttributeKeyword_0_0; }

		//var=Attribute
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Attribute
		public RuleCall getVarAttributeParserRuleCall_0_1_0() { return cVarAttributeParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute ":" "attribute") ")" "where"
		//("{" setters+=setterDef* "}" | ";")
		public Group getGroup_1() { return cGroup_1; }

		//(op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute ":" "attribute"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute"
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//op="changeEAttribute"
		public Assignment getOpAssignment_1_0_0_0() { return cOpAssignment_1_0_0_0; }

		//"changeEAttribute"
		public Keyword getOpChangeEAttributeKeyword_1_0_0_0_0() { return cOpChangeEAttributeKeyword_1_0_0_0_0; }

		//op="addEAttribute"
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//"addEAttribute"
		public Keyword getOpAddEAttributeKeyword_1_0_0_1_0() { return cOpAddEAttributeKeyword_1_0_0_1_0; }

		//op="deleteEAttribute"
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//"deleteEAttribute"
		public Keyword getOpDeleteEAttributeKeyword_1_0_0_2_0() { return cOpDeleteEAttributeKeyword_1_0_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0_1() { return cLeftParenthesisKeyword_1_0_1; }

		//ref=Attribute
		public Assignment getRefAssignment_1_0_2() { return cRefAssignment_1_0_2; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_1_0_2_0() { return cRefAttributeParserRuleCall_1_0_2_0; }

		//":"
		public Keyword getColonKeyword_1_0_3() { return cColonKeyword_1_0_3; }

		//"attribute"
		public Keyword getAttributeKeyword_1_0_4() { return cAttributeKeyword_1_0_4; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1() { return cRightParenthesisKeyword_1_1; }

		//"where"
		public Keyword getWhereKeyword_1_2() { return cWhereKeyword_1_2; }

		//"{" setters+=setterDef* "}" | ";"
		public Alternatives getAlternatives_1_3() { return cAlternatives_1_3; }

		//"{" setters+=setterDef* "}"
		public Group getGroup_1_3_0() { return cGroup_1_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_3_0_0() { return cLeftCurlyBracketKeyword_1_3_0_0; }

		//setters+=setterDef*
		public Assignment getSettersAssignment_1_3_0_1() { return cSettersAssignment_1_3_0_1; }

		//setterDef
		public RuleCall getSettersSetterDefParserRuleCall_1_3_0_1_0() { return cSettersSetterDefParserRuleCall_1_3_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_3_0_2() { return cRightCurlyBracketKeyword_1_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_3_1() { return cSemicolonKeyword_1_3_1; }
	}

	public class EReferenceOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EReferenceOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cReferenceKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarReferenceParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final Keyword cOpChangeEReferenceKeyword_1_0_0_0_0 = (Keyword)cOpAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cOpAddEReferenceKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final Keyword cOpDeleteEReferenceKeyword_1_0_0_2_0 = (Keyword)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cRefAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cRefReferenceParserRuleCall_1_0_2_0 = (RuleCall)cRefAssignment_1_0_2.eContents().get(0);
		private final Keyword cColonKeyword_1_0_3 = (Keyword)cGroup_1_0.eContents().get(3);
		private final Keyword cReferenceKeyword_1_0_4 = (Keyword)cGroup_1_0.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cWhereKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cSettersAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cSettersSetterDefParserRuleCall_1_3_1_0 = (RuleCall)cSettersAssignment_1_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3_2 = (Keyword)cGroup_1_3.eContents().get(2);
		
		//EReferenceOpDef:
		//	("reference" var=Reference "=") (((op="changeEReference" | op="addEReference" | op="deleteEReference") "("
		//	ref=Reference ":" "reference") ")" "where" ("{" setters+=setterDef* "}") //|complex+=CallOperator
		//);
		public ParserRule getRule() { return rule; }

		//("reference" var=Reference "=") (((op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference
		//":" "reference") ")" "where" ("{" setters+=setterDef* "}") //|complex+=CallOperator
		//)
		public Group getGroup() { return cGroup; }

		//"reference" var=Reference "="
		public Group getGroup_0() { return cGroup_0; }

		//"reference"
		public Keyword getReferenceKeyword_0_0() { return cReferenceKeyword_0_0; }

		//var=Reference
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Reference
		public RuleCall getVarReferenceParserRuleCall_0_1_0() { return cVarReferenceParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//((op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference ":" "reference") ")" "where"
		//("{" setters+=setterDef* "}") //|complex+=CallOperator
		public Group getGroup_1() { return cGroup_1; }

		//(op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference ":" "reference"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//op="changeEReference" | op="addEReference" | op="deleteEReference"
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//op="changeEReference"
		public Assignment getOpAssignment_1_0_0_0() { return cOpAssignment_1_0_0_0; }

		//"changeEReference"
		public Keyword getOpChangeEReferenceKeyword_1_0_0_0_0() { return cOpChangeEReferenceKeyword_1_0_0_0_0; }

		//op="addEReference"
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//"addEReference"
		public Keyword getOpAddEReferenceKeyword_1_0_0_1_0() { return cOpAddEReferenceKeyword_1_0_0_1_0; }

		//op="deleteEReference"
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//"deleteEReference"
		public Keyword getOpDeleteEReferenceKeyword_1_0_0_2_0() { return cOpDeleteEReferenceKeyword_1_0_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0_1() { return cLeftParenthesisKeyword_1_0_1; }

		//ref=Reference
		public Assignment getRefAssignment_1_0_2() { return cRefAssignment_1_0_2; }

		//Reference
		public RuleCall getRefReferenceParserRuleCall_1_0_2_0() { return cRefReferenceParserRuleCall_1_0_2_0; }

		//":"
		public Keyword getColonKeyword_1_0_3() { return cColonKeyword_1_0_3; }

		//"reference"
		public Keyword getReferenceKeyword_1_0_4() { return cReferenceKeyword_1_0_4; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1() { return cRightParenthesisKeyword_1_1; }

		//"where"
		public Keyword getWhereKeyword_1_2() { return cWhereKeyword_1_2; }

		//"{" setters+=setterDef* "}"
		public Group getGroup_1_3() { return cGroup_1_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_3_0() { return cLeftCurlyBracketKeyword_1_3_0; }

		//setters+=setterDef*
		public Assignment getSettersAssignment_1_3_1() { return cSettersAssignment_1_3_1; }

		//setterDef
		public RuleCall getSettersSetterDefParserRuleCall_1_3_1_0() { return cSettersSetterDefParserRuleCall_1_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_3_2() { return cRightCurlyBracketKeyword_1_3_2; }
	}

	public class SetterDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "setterDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOperatorEqualsSignKeyword_2_0 = (Keyword)cOperatorAssignment_2.eContents().get(0);
		private final Assignment cParAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParParameterParserRuleCall_3_0 = (RuleCall)cParAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParParameterParserRuleCall_4_1_0 = (RuleCall)cParAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//setterDef:
		//	"set" metafeature=[ecore::EStructuralFeature] operator="=" //infixOperator 
		//	par+=Parameter ("," par+=Parameter)* ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] operator="=" //infixOperator 
		//par+=Parameter ("," par+=Parameter)* ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//operator="="
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }

		//"="
		public Keyword getOperatorEqualsSignKeyword_2_0() { return cOperatorEqualsSignKeyword_2_0; }

		////infixOperator 
		//par+=Parameter
		public Assignment getParAssignment_3() { return cParAssignment_3; }

		//Parameter
		public RuleCall getParParameterParserRuleCall_3_0() { return cParParameterParserRuleCall_3_0; }

		//("," par+=Parameter)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//par+=Parameter
		public Assignment getParAssignment_4_1() { return cParAssignment_4_1; }

		//Parameter
		public RuleCall getParParameterParserRuleCall_4_1_0() { return cParParameterParserRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class RewritingRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RewritingRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMigratorsSXAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMigratorsSXMigratorSXParserRuleCall_0_0_0 = (RuleCall)cMigratorsSXAssignment_0_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMigratorDXAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cMigratorDXMigratorDXParserRuleCall_0_2_0 = (RuleCall)cMigratorDXAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAmpersandKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMigratorSXAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMigratorSXMigratorSXParserRuleCall_1_1_0 = (RuleCall)cMigratorSXAssignment_1_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMigratorDXAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cMigratorDXMigratorDXParserRuleCall_1_3_0 = (RuleCall)cMigratorDXAssignment_1_3.eContents().get(0);
		
		//RewritingRule:
		//	(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*;
		public ParserRule getRule() { return rule; }

		//(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
		public Group getGroup() { return cGroup; }

		//migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX
		public Group getGroup_0() { return cGroup_0; }

		//migratorsSX+=MigratorSX
		public Assignment getMigratorsSXAssignment_0_0() { return cMigratorsSXAssignment_0_0; }

		//MigratorSX
		public RuleCall getMigratorsSXMigratorSXParserRuleCall_0_0_0() { return cMigratorsSXMigratorSXParserRuleCall_0_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_0_1() { return cHyphenMinusGreaterThanSignKeyword_0_1; }

		//migratorDX+=MigratorDX
		public Assignment getMigratorDXAssignment_0_2() { return cMigratorDXAssignment_0_2; }

		//MigratorDX
		public RuleCall getMigratorDXMigratorDXParserRuleCall_0_2_0() { return cMigratorDXMigratorDXParserRuleCall_0_2_0; }

		//("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
		public Group getGroup_1() { return cGroup_1; }

		//"&"
		public Keyword getAmpersandKeyword_1_0() { return cAmpersandKeyword_1_0; }

		//migratorSX+=MigratorSX
		public Assignment getMigratorSXAssignment_1_1() { return cMigratorSXAssignment_1_1; }

		//MigratorSX
		public RuleCall getMigratorSXMigratorSXParserRuleCall_1_1_0() { return cMigratorSXMigratorSXParserRuleCall_1_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_2() { return cHyphenMinusGreaterThanSignKeyword_1_2; }

		//migratorDX+=MigratorDX
		public Assignment getMigratorDXAssignment_1_3() { return cMigratorDXAssignment_1_3; }

		//MigratorDX
		public RuleCall getMigratorDXMigratorDXParserRuleCall_1_3_0() { return cMigratorDXMigratorDXParserRuleCall_1_3_0; }
	}

	public class MigratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Migrator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMigratorSXParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMigratorDXParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Migrator:
		//	MigratorSX | MigratorDX;
		public ParserRule getRule() { return rule; }

		//MigratorSX | MigratorDX
		public Alternatives getAlternatives() { return cAlternatives; }

		//MigratorSX
		public RuleCall getMigratorSXParserRuleCall_0() { return cMigratorSXParserRuleCall_0; }

		//MigratorDX
		public RuleCall getMigratorDXParserRuleCall_1() { return cMigratorDXParserRuleCall_1; }
	}

	public class MigratorSXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigratorSX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMigratorSXAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementSXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cElementSXEClassCrossReference_3_0 = (CrossReference)cElementSXAssignment_3.eContents().get(0);
		private final RuleCall cElementSXEClassIDTerminalRuleCall_3_0_1 = (RuleCall)cElementSXEClassCrossReference_3_0.eContents().get(1);
		private final Keyword cWhereKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFilterSXAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFilterSXFilterMigratorParserRuleCall_6_0 = (RuleCall)cFilterSXAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAmpersandKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cFilterSXAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cFilterSXFilterMigratorParserRuleCall_7_1_0 = (RuleCall)cFilterSXAssignment_7_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//MigratorSX:
		//	{MigratorSX} name=ID ":" elementSX=[ecore::EClass] "where" "[" filterSX+=FilterMigrator ("&"
		//	filterSX+=FilterMigrator)* "]";
		public ParserRule getRule() { return rule; }

		//{MigratorSX} name=ID ":" elementSX=[ecore::EClass] "where" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)*
		//"]"
		public Group getGroup() { return cGroup; }

		//{MigratorSX}
		public Action getMigratorSXAction_0() { return cMigratorSXAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//elementSX=[ecore::EClass]
		public Assignment getElementSXAssignment_3() { return cElementSXAssignment_3; }

		//[ecore::EClass]
		public CrossReference getElementSXEClassCrossReference_3_0() { return cElementSXEClassCrossReference_3_0; }

		//ID
		public RuleCall getElementSXEClassIDTerminalRuleCall_3_0_1() { return cElementSXEClassIDTerminalRuleCall_3_0_1; }

		//"where"
		public Keyword getWhereKeyword_4() { return cWhereKeyword_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//filterSX+=FilterMigrator
		public Assignment getFilterSXAssignment_6() { return cFilterSXAssignment_6; }

		//FilterMigrator
		public RuleCall getFilterSXFilterMigratorParserRuleCall_6_0() { return cFilterSXFilterMigratorParserRuleCall_6_0; }

		//("&" filterSX+=FilterMigrator)*
		public Group getGroup_7() { return cGroup_7; }

		//"&"
		public Keyword getAmpersandKeyword_7_0() { return cAmpersandKeyword_7_0; }

		//filterSX+=FilterMigrator
		public Assignment getFilterSXAssignment_7_1() { return cFilterSXAssignment_7_1; }

		//FilterMigrator
		public RuleCall getFilterSXFilterMigratorParserRuleCall_7_1_0() { return cFilterSXFilterMigratorParserRuleCall_7_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
	}

	public class MigratorDXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigratorDX");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cMigratorDXAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0_0 = (RuleCall)cNameAssignment_0_1_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cElementDXAssignment_0_1_2 = (Assignment)cGroup_0_1.eContents().get(2);
		private final CrossReference cElementDXEClassCrossReference_0_1_2_0 = (CrossReference)cElementDXAssignment_0_1_2.eContents().get(0);
		private final RuleCall cElementDXEClassIDTerminalRuleCall_0_1_2_0_1 = (RuleCall)cElementDXEClassCrossReference_0_1_2_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0_1_3 = (Keyword)cGroup_0_1.eContents().get(3);
		private final Assignment cFilterDXAssignment_0_1_4 = (Assignment)cGroup_0_1.eContents().get(4);
		private final RuleCall cFilterDXFilterMigratorParserRuleCall_0_1_4_0 = (RuleCall)cFilterDXAssignment_0_1_4.eContents().get(0);
		private final Group cGroup_0_1_5 = (Group)cGroup_0_1.eContents().get(5);
		private final Keyword cAmpersandKeyword_0_1_5_0 = (Keyword)cGroup_0_1_5.eContents().get(0);
		private final Assignment cFilterDXAssignment_0_1_5_1 = (Assignment)cGroup_0_1_5.eContents().get(1);
		private final RuleCall cFilterDXFilterMigratorParserRuleCall_0_1_5_1_0 = (RuleCall)cFilterDXAssignment_0_1_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_1_6 = (Keyword)cGroup_0_1.eContents().get(6);
		private final Keyword cNullKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//MigratorDX:
		//	{MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]")
		//	| "null";
		public ParserRule getRule() { return rule; }

		//{MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]") |
		//"null"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]")
		public Group getGroup_0() { return cGroup_0; }

		//{MigratorDX}
		public Action getMigratorDXAction_0_0() { return cMigratorDXAction_0_0; }

		//name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]"
		public Group getGroup_0_1() { return cGroup_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_1_0() { return cNameAssignment_0_1_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0_0() { return cNameIDTerminalRuleCall_0_1_0_0; }

		//":"
		public Keyword getColonKeyword_0_1_1() { return cColonKeyword_0_1_1; }

		//elementDX=[ecore::EClass]
		public Assignment getElementDXAssignment_0_1_2() { return cElementDXAssignment_0_1_2; }

		//[ecore::EClass]
		public CrossReference getElementDXEClassCrossReference_0_1_2_0() { return cElementDXEClassCrossReference_0_1_2_0; }

		//ID
		public RuleCall getElementDXEClassIDTerminalRuleCall_0_1_2_0_1() { return cElementDXEClassIDTerminalRuleCall_0_1_2_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_1_3() { return cLeftSquareBracketKeyword_0_1_3; }

		//filterDX+=FilterMigrator
		public Assignment getFilterDXAssignment_0_1_4() { return cFilterDXAssignment_0_1_4; }

		//FilterMigrator
		public RuleCall getFilterDXFilterMigratorParserRuleCall_0_1_4_0() { return cFilterDXFilterMigratorParserRuleCall_0_1_4_0; }

		//("&" filterDX+=FilterMigrator)*
		public Group getGroup_0_1_5() { return cGroup_0_1_5; }

		//"&"
		public Keyword getAmpersandKeyword_0_1_5_0() { return cAmpersandKeyword_0_1_5_0; }

		//filterDX+=FilterMigrator
		public Assignment getFilterDXAssignment_0_1_5_1() { return cFilterDXAssignment_0_1_5_1; }

		//FilterMigrator
		public RuleCall getFilterDXFilterMigratorParserRuleCall_0_1_5_1_0() { return cFilterDXFilterMigratorParserRuleCall_0_1_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_1_6() { return cRightSquareBracketKeyword_0_1_6; }

		//"null"
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}

	public class FilterMigratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterMigrator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFeatureSXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFeatureSXDotNavigationObjSXParserRuleCall_0_0 = (RuleCall)cFeatureSXAssignment_0.eContents().get(0);
		private final Assignment cOpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOpEqualsSignKeyword_1_0 = (Keyword)cOpAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueDotNavigationObjDXParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FilterMigrator:
		//	featureSX=DotNavigationObjSX //specification=SpecificationCS?
		//	op="=" //EssentialOCLInfixOperator   
		//	value=DotNavigationObjDX?;
		public ParserRule getRule() { return rule; }

		//featureSX=DotNavigationObjSX //specification=SpecificationCS?
		//op="=" //EssentialOCLInfixOperator   
		//value=DotNavigationObjDX?
		public Group getGroup() { return cGroup; }

		//featureSX=DotNavigationObjSX
		public Assignment getFeatureSXAssignment_0() { return cFeatureSXAssignment_0; }

		//DotNavigationObjSX
		public RuleCall getFeatureSXDotNavigationObjSXParserRuleCall_0_0() { return cFeatureSXDotNavigationObjSXParserRuleCall_0_0; }

		//op="="
		public Assignment getOpAssignment_1() { return cOpAssignment_1; }

		//"="
		public Keyword getOpEqualsSignKeyword_1_0() { return cOpEqualsSignKeyword_1_0; }

		//value=DotNavigationObjDX?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//DotNavigationObjDX
		public RuleCall getValueDotNavigationObjDXParserRuleCall_2_0() { return cValueDotNavigationObjDXParserRuleCall_2_0; }
	}

	public class DotNavigationObjSXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DotNavigationObjSX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjEObjectCrossReference_1_0 = (CrossReference)cObjAssignment_1.eContents().get(0);
		private final RuleCall cObjEObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cObjEObjectCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRefAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cRefEStructuralFeatureCrossReference_2_1_0 = (CrossReference)cRefAssignment_2_1.eContents().get(0);
		private final RuleCall cRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1 = (RuleCall)cRefEStructuralFeatureCrossReference_2_1_0.eContents().get(1);
		
		//DotNavigationObjSX:
		//	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
		public ParserRule getRule() { return rule; }

		//"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//obj=[ecore::EObject]
		public Assignment getObjAssignment_1() { return cObjAssignment_1; }

		//[ecore::EObject]
		public CrossReference getObjEObjectCrossReference_1_0() { return cObjEObjectCrossReference_1_0; }

		//ID
		public RuleCall getObjEObjectIDTerminalRuleCall_1_0_1() { return cObjEObjectIDTerminalRuleCall_1_0_1; }

		//("." ref=[ecore::EStructuralFeature])*
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ref=[ecore::EStructuralFeature]
		public Assignment getRefAssignment_2_1() { return cRefAssignment_2_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getRefEStructuralFeatureCrossReference_2_1_0() { return cRefEStructuralFeatureCrossReference_2_1_0; }

		//ID
		public RuleCall getRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1() { return cRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1; }
	}

	public class DotNavigationObjDXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DotNavigationObjDX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjEObjectCrossReference_1_0 = (CrossReference)cObjAssignment_1.eContents().get(0);
		private final RuleCall cObjEObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cObjEObjectCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRefAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cRefEStructuralFeatureCrossReference_2_1_0 = (CrossReference)cRefAssignment_2_1.eContents().get(0);
		private final RuleCall cRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1 = (RuleCall)cRefEStructuralFeatureCrossReference_2_1_0.eContents().get(1);
		
		//DotNavigationObjDX:
		//	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
		public ParserRule getRule() { return rule; }

		//"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//obj=[ecore::EObject]
		public Assignment getObjAssignment_1() { return cObjAssignment_1; }

		//[ecore::EObject]
		public CrossReference getObjEObjectCrossReference_1_0() { return cObjEObjectCrossReference_1_0; }

		//ID
		public RuleCall getObjEObjectIDTerminalRuleCall_1_0_1() { return cObjEObjectIDTerminalRuleCall_1_0_1; }

		//("." ref=[ecore::EStructuralFeature])*
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ref=[ecore::EStructuralFeature]
		public Assignment getRefAssignment_2_1() { return cRefAssignment_2_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getRefEStructuralFeatureCrossReference_2_1_0() { return cRefEStructuralFeatureCrossReference_2_1_0; }

		//ID
		public RuleCall getRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1() { return cRefEStructuralFeatureIDTerminalRuleCall_2_1_0_1; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPercentSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Parameter:
		//	"%" name=ID;
		public ParserRule getRule() { return rule; }

		//"%" name=ID
		public Group getGroup() { return cGroup; }

		//"%"
		public Keyword getPercentSignKeyword_0() { return cPercentSignKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Package returns ecore::EPackage:
		//	{Package} name=ID;
		public ParserRule getRule() { return rule; }

		//{Package} name=ID
		public Group getGroup() { return cGroup; }

		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Class returns ecore::EClass:
		//	{Class} name=ID;
		public ParserRule getRule() { return rule; }

		//{Class} name=ID
		public Group getGroup() { return cGroup; }

		//{Class}
		public Action getClassAction_0() { return cClassAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Attribute returns ecore::EAttribute:
		//	{Attribute} name=ID;
		public ParserRule getRule() { return rule; }

		//{Attribute} name=ID
		public Group getGroup() { return cGroup; }

		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Reference returns ecore::EReference:
		//	{Reference} name=ID;
		public ParserRule getRule() { return rule; }

		//{Reference} name=ID
		public Group getGroup() { return cGroup; }

		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class StructuralFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StructuralFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StructuralFeature returns ecore::EStructuralFeature:
		//	Attribute | Reference;
		public ParserRule getRule() { return rule; }

		//Attribute | Reference
		public Alternatives getAlternatives() { return cAlternatives; }

		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }

		//Reference
		public RuleCall getReferenceParserRuleCall_1() { return cReferenceParserRuleCall_1; }
	}
	
	
	private MyModelElements pMyModel;
	private MigrationLibraryElements pMigrationLibrary;
	private MigrationProgramElements pMigrationProgram;
	private ArtifactElements pArtifact;
	private RuleElements pRule;
	private OpDefElements pOpDef;
	private EPackageOpDefElements pEPackageOpDef;
	private EClassOpDefElements pEClassOpDef;
	private EAttributeOpDefElements pEAttributeOpDef;
	private EReferenceOpDefElements pEReferenceOpDef;
	private SetterDefElements pSetterDef;
	private RewritingRuleElements pRewritingRule;
	private MigratorElements pMigrator;
	private MigratorSXElements pMigratorSX;
	private MigratorDXElements pMigratorDX;
	private FilterMigratorElements pFilterMigrator;
	private DotNavigationObjSXElements pDotNavigationObjSX;
	private DotNavigationObjDXElements pDotNavigationObjDX;
	private ParameterElements pParameter;
	private PackageElements pPackage;
	private ClassElements pClass;
	private AttributeElements pAttribute;
	private ReferenceElements pReference;
	private StructuralFeatureElements pStructuralFeature;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public EmigGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MyModel:
	//	migrationLib=MigrationLibrary | MigrationProgr=MigrationProgram;
	public MyModelElements getMyModelAccess() {
		return (pMyModel != null) ? pMyModel : (pMyModel = new MyModelElements());
	}
	
	public ParserRule getMyModelRule() {
		return getMyModelAccess().getRule();
	}

	//MigrationLibrary:
	//	"Library" title=ID "{" rules+=Rule* "}";
	public MigrationLibraryElements getMigrationLibraryAccess() {
		return (pMigrationLibrary != null) ? pMigrationLibrary : (pMigrationLibrary = new MigrationLibraryElements());
	}
	
	public ParserRule getMigrationLibraryRule() {
		return getMigrationLibraryAccess().getRule();
	}

	//MigrationProgram:
	//	("include" libs+=STRING ";")* migr="migrate" typeArt=Artifact name=STRING ":"
	//	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
	//	rules+=Rule* "}";
	public MigrationProgramElements getMigrationProgramAccess() {
		return (pMigrationProgram != null) ? pMigrationProgram : (pMigrationProgram = new MigrationProgramElements());
	}
	
	public ParserRule getMigrationProgramRule() {
		return getMigrationProgramAccess().getRule();
	}

	//Artifact:
	//	type=("transformation" | "model" | "tcs-model");
	public ArtifactElements getArtifactAccess() {
		return (pArtifact != null) ? pArtifact : (pArtifact = new ArtifactElements());
	}
	
	public ParserRule getArtifactRule() {
		return getArtifactAccess().getRule();
	}

	//Rule:
	//	"rule" name=ID "[" //|refFilter=[edelta::ComplexOperatorDef]
	//	filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
	public RuleElements getRuleAccess() {
		return (pRule != null) ? pRule : (pRule = new RuleElements());
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	////ComplexOpDef:op=[];
	//OpDef:
	//	EPackageOpDef | EClassOpDef | EAttributeOpDef | EReferenceOpDef;
	public OpDefElements getOpDefAccess() {
		return (pOpDef != null) ? pOpDef : (pOpDef = new OpDefElements());
	}
	
	public ParserRule getOpDefRule() {
		return getOpDefAccess().getRule();
	}

	//EPackageOpDef:
	//	("package" var=Package "=") ((op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package"
	//	")" "where" "{" (setters+=setterDef | classes+=EClassOpDef)* "}") //|complex+=CallOperator
	//;
	public EPackageOpDefElements getEPackageOpDefAccess() {
		return (pEPackageOpDef != null) ? pEPackageOpDef : (pEPackageOpDef = new EPackageOpDefElements());
	}
	
	public ParserRule getEPackageOpDefRule() {
		return getEPackageOpDefAccess().getRule();
	}

	//EClassOpDef:
	//	("class" var=Class "=") ((op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where"
	//	("{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")) //|complex+=CallOperator
	//;
	public EClassOpDefElements getEClassOpDefAccess() {
		return (pEClassOpDef != null) ? pEClassOpDef : (pEClassOpDef = new EClassOpDefElements());
	}
	
	public ParserRule getEClassOpDefRule() {
		return getEClassOpDefAccess().getRule();
	}

	//EAttributeOpDef:
	//	("attribute" var=Attribute "=") (((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "("
	//	ref=Attribute ":" "attribute") ")" "where" ("{" setters+=setterDef* "}" | ";")) //|complex+=CallOperator
	//;
	public EAttributeOpDefElements getEAttributeOpDefAccess() {
		return (pEAttributeOpDef != null) ? pEAttributeOpDef : (pEAttributeOpDef = new EAttributeOpDefElements());
	}
	
	public ParserRule getEAttributeOpDefRule() {
		return getEAttributeOpDefAccess().getRule();
	}

	//EReferenceOpDef:
	//	("reference" var=Reference "=") (((op="changeEReference" | op="addEReference" | op="deleteEReference") "("
	//	ref=Reference ":" "reference") ")" "where" ("{" setters+=setterDef* "}") //|complex+=CallOperator
	//);
	public EReferenceOpDefElements getEReferenceOpDefAccess() {
		return (pEReferenceOpDef != null) ? pEReferenceOpDef : (pEReferenceOpDef = new EReferenceOpDefElements());
	}
	
	public ParserRule getEReferenceOpDefRule() {
		return getEReferenceOpDefAccess().getRule();
	}

	//setterDef:
	//	"set" metafeature=[ecore::EStructuralFeature] operator="=" //infixOperator 
	//	par+=Parameter ("," par+=Parameter)* ";";
	public SetterDefElements getSetterDefAccess() {
		return (pSetterDef != null) ? pSetterDef : (pSetterDef = new SetterDefElements());
	}
	
	public ParserRule getSetterDefRule() {
		return getSetterDefAccess().getRule();
	}

	//RewritingRule:
	//	(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*;
	public RewritingRuleElements getRewritingRuleAccess() {
		return (pRewritingRule != null) ? pRewritingRule : (pRewritingRule = new RewritingRuleElements());
	}
	
	public ParserRule getRewritingRuleRule() {
		return getRewritingRuleAccess().getRule();
	}

	//Migrator:
	//	MigratorSX | MigratorDX;
	public MigratorElements getMigratorAccess() {
		return (pMigrator != null) ? pMigrator : (pMigrator = new MigratorElements());
	}
	
	public ParserRule getMigratorRule() {
		return getMigratorAccess().getRule();
	}

	//MigratorSX:
	//	{MigratorSX} name=ID ":" elementSX=[ecore::EClass] "where" "[" filterSX+=FilterMigrator ("&"
	//	filterSX+=FilterMigrator)* "]";
	public MigratorSXElements getMigratorSXAccess() {
		return (pMigratorSX != null) ? pMigratorSX : (pMigratorSX = new MigratorSXElements());
	}
	
	public ParserRule getMigratorSXRule() {
		return getMigratorSXAccess().getRule();
	}

	//MigratorDX:
	//	{MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]")
	//	| "null";
	public MigratorDXElements getMigratorDXAccess() {
		return (pMigratorDX != null) ? pMigratorDX : (pMigratorDX = new MigratorDXElements());
	}
	
	public ParserRule getMigratorDXRule() {
		return getMigratorDXAccess().getRule();
	}

	//FilterMigrator:
	//	featureSX=DotNavigationObjSX //specification=SpecificationCS?
	//	op="=" //EssentialOCLInfixOperator   
	//	value=DotNavigationObjDX?;
	public FilterMigratorElements getFilterMigratorAccess() {
		return (pFilterMigrator != null) ? pFilterMigrator : (pFilterMigrator = new FilterMigratorElements());
	}
	
	public ParserRule getFilterMigratorRule() {
		return getFilterMigratorAccess().getRule();
	}

	//DotNavigationObjSX:
	//	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
	public DotNavigationObjSXElements getDotNavigationObjSXAccess() {
		return (pDotNavigationObjSX != null) ? pDotNavigationObjSX : (pDotNavigationObjSX = new DotNavigationObjSXElements());
	}
	
	public ParserRule getDotNavigationObjSXRule() {
		return getDotNavigationObjSXAccess().getRule();
	}

	//DotNavigationObjDX:
	//	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
	public DotNavigationObjDXElements getDotNavigationObjDXAccess() {
		return (pDotNavigationObjDX != null) ? pDotNavigationObjDX : (pDotNavigationObjDX = new DotNavigationObjDXElements());
	}
	
	public ParserRule getDotNavigationObjDXRule() {
		return getDotNavigationObjDXAccess().getRule();
	}

	//Parameter:
	//	"%" name=ID;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//Package returns ecore::EPackage:
	//	{Package} name=ID;
	public PackageElements getPackageAccess() {
		return (pPackage != null) ? pPackage : (pPackage = new PackageElements());
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//Class returns ecore::EClass:
	//	{Class} name=ID;
	public ClassElements getClassAccess() {
		return (pClass != null) ? pClass : (pClass = new ClassElements());
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}

	//Attribute returns ecore::EAttribute:
	//	{Attribute} name=ID;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//Reference returns ecore::EReference:
	//	{Reference} name=ID;
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	//StructuralFeature returns ecore::EStructuralFeature:
	//	Attribute | Reference;
	public StructuralFeatureElements getStructuralFeatureAccess() {
		return (pStructuralFeature != null) ? pStructuralFeature : (pStructuralFeature = new StructuralFeatureElements());
	}
	
	public ParserRule getStructuralFeatureRule() {
		return getStructuralFeatureAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
