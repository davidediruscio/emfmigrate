/*
* generated by Xtext
*/
package it.univaq.coevolution.emfmigrate.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import it.univaq.coevolution.emfmigrate.services.EmigGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class EmigParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private EmigGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MyModel_Alternatives(this, this, 0, inst);
			case 1: return new MigrationLibrary_Group(this, this, 1, inst);
			case 2: return new LocatedElement_Alternatives(this, this, 2, inst);
			case 3: return new MigrationProgram_Group(this, this, 3, inst);
			case 4: return new Artifact_TypeAssignment(this, this, 4, inst);
			case 5: return new Rule_Group(this, this, 5, inst);
			case 6: return new OpDef_Alternatives(this, this, 6, inst);
			case 7: return new EPackageOpDef_Group(this, this, 7, inst);
			case 8: return new EClassOpDef_Group(this, this, 8, inst);
			case 9: return new EAttributeOpDef_Group(this, this, 9, inst);
			case 10: return new EReferenceOpDef_Group(this, this, 10, inst);
			case 11: return new SetterDef_Group(this, this, 11, inst);
			case 12: return new RewritingRule_Group(this, this, 12, inst);
			case 13: return new Migrator_Alternatives(this, this, 13, inst);
			case 14: return new MigratorSX_Group(this, this, 14, inst);
			case 15: return new MigratorDX_Alternatives(this, this, 15, inst);
			case 16: return new FilterMigrator_Group(this, this, 16, inst);
			case 17: return new DotNavigationObjSX_Group(this, this, 17, inst);
			case 18: return new DotNavigationObjDX_Group(this, this, 18, inst);
			case 19: return new Parameter_Group(this, this, 19, inst);
			case 20: return new Package_Group(this, this, 20, inst);
			case 21: return new Class_Group(this, this, 21, inst);
			case 22: return new Attribute_Group(this, this, 22, inst);
			case 23: return new Reference_Group(this, this, 23, inst);
			case 24: return new StructuralFeature_Alternatives(this, this, 24, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule MyModel ****************
 *
 * MyModel:
 * 	migrationLib=MigrationLibrary | MigrationProgr=MigrationProgram;
 *
 **/

// migrationLib=MigrationLibrary | MigrationProgr=MigrationProgram
protected class MyModel_Alternatives extends AlternativesToken {

	public MyModel_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMyModelAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MyModel_MigrationLibAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MyModel_MigrationProgrAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMyModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// migrationLib=MigrationLibrary
protected class MyModel_MigrationLibAssignment_0 extends AssignmentToken  {
	
	public MyModel_MigrationLibAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMyModelAccess().getMigrationLibAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationLibrary_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migrationLib",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migrationLib");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationLibraryRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMyModelAccess().getMigrationLibMigrationLibraryParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// MigrationProgr=MigrationProgram
protected class MyModel_MigrationProgrAssignment_1 extends AssignmentToken  {
	
	public MyModel_MigrationProgrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMyModelAccess().getMigrationProgrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("MigrationProgr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("MigrationProgr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMyModelAccess().getMigrationProgrMigrationProgramParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


/************ end Rule MyModel ****************/


/************ begin Rule MigrationLibrary ****************
 *
 * MigrationLibrary:
 * 	"Library" name=ID "{" rules+=Rule* "}";
 *
 **/

// "Library" name=ID "{" rules+=Rule* "}"
protected class MigrationLibrary_Group extends GroupToken {
	
	public MigrationLibrary_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationLibrary_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigrationLibraryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Library"
protected class MigrationLibrary_LibraryKeyword_0 extends KeywordToken  {
	
	public MigrationLibrary_LibraryKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getLibraryKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MigrationLibrary_NameAssignment_1 extends AssignmentToken  {
	
	public MigrationLibrary_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationLibrary_LibraryKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationLibraryAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationLibraryAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MigrationLibrary_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public MigrationLibrary_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationLibrary_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rules+=Rule*
protected class MigrationLibrary_RulesAssignment_3 extends AssignmentToken  {
	
	public MigrationLibrary_RulesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getRulesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rules",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rules");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigrationLibraryAccess().getRulesRuleParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigrationLibrary_RulesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MigrationLibrary_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MigrationLibrary_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public MigrationLibrary_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationLibraryAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationLibrary_RulesAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigrationLibrary_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MigrationLibrary ****************/


/************ begin Rule LocatedElement ****************
 *
 * LocatedElement:
 * 	line=INT endline=INT offset=INT endoffset=INT | DotNavigationObjSX | DotNavigationObjDX | setterDef | MigrationProgram
 * 	| Rule | Artifact | OpDef | RewritingRule | Migrator | FilterMigrator | Parameter;
 *
 **/

// line=INT endline=INT offset=INT endoffset=INT | DotNavigationObjSX | DotNavigationObjDX | setterDef | MigrationProgram |
// Rule | Artifact | OpDef | RewritingRule | Migrator | FilterMigrator | Parameter
protected class LocatedElement_Alternatives extends AlternativesToken {

	public LocatedElement_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LocatedElement_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LocatedElement_DotNavigationObjSXParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new LocatedElement_DotNavigationObjDXParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new LocatedElement_SetterDefParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new LocatedElement_MigrationProgramParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new LocatedElement_RuleParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new LocatedElement_ArtifactParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new LocatedElement_OpDefParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new LocatedElement_RewritingRuleParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new LocatedElement_MigratorParserRuleCall_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new LocatedElement_FilterMigratorParserRuleCall_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new LocatedElement_ParameterParserRuleCall_11(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArtifactRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDotNavigationObjDXRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDotNavigationObjSXRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEAttributeOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEClassOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEPackageOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEReferenceOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFilterMigratorRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLocatedElementRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMigrationProgramRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMigratorSXAccess().getMigratorSXAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getParameterRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRewritingRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRuleRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetterDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// line=INT endline=INT offset=INT endoffset=INT
protected class LocatedElement_Group_0 extends GroupToken {
	
	public LocatedElement_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LocatedElement_EndoffsetAssignment_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLocatedElementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// line=INT
protected class LocatedElement_LineAssignment_0_0 extends AssignmentToken  {
	
	public LocatedElement_LineAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getLineAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("line",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("line");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLocatedElementAccess().getLineINTTerminalRuleCall_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLocatedElementAccess().getLineINTTerminalRuleCall_0_0_0();
			return obj;
		}
		return null;
	}

}

// endline=INT
protected class LocatedElement_EndlineAssignment_0_1 extends AssignmentToken  {
	
	public LocatedElement_EndlineAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getEndlineAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LocatedElement_LineAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("endline",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("endline");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLocatedElementAccess().getEndlineINTTerminalRuleCall_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLocatedElementAccess().getEndlineINTTerminalRuleCall_0_1_0();
			return obj;
		}
		return null;
	}

}

// offset=INT
protected class LocatedElement_OffsetAssignment_0_2 extends AssignmentToken  {
	
	public LocatedElement_OffsetAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getOffsetAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LocatedElement_EndlineAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("offset",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("offset");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLocatedElementAccess().getOffsetINTTerminalRuleCall_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLocatedElementAccess().getOffsetINTTerminalRuleCall_0_2_0();
			return obj;
		}
		return null;
	}

}

// endoffset=INT
protected class LocatedElement_EndoffsetAssignment_0_3 extends AssignmentToken  {
	
	public LocatedElement_EndoffsetAssignment_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getEndoffsetAssignment_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LocatedElement_OffsetAssignment_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("endoffset",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("endoffset");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLocatedElementAccess().getEndoffsetINTTerminalRuleCall_0_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLocatedElementAccess().getEndoffsetINTTerminalRuleCall_0_3_0();
			return obj;
		}
		return null;
	}

}


// DotNavigationObjSX
protected class LocatedElement_DotNavigationObjSXParserRuleCall_1 extends RuleCallToken {
	
	public LocatedElement_DotNavigationObjSXParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getDotNavigationObjSXParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDotNavigationObjSXRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DotNavigationObjSX_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DotNavigationObjDX
protected class LocatedElement_DotNavigationObjDXParserRuleCall_2 extends RuleCallToken {
	
	public LocatedElement_DotNavigationObjDXParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getDotNavigationObjDXParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDotNavigationObjDXRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DotNavigationObjDX_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// setterDef
protected class LocatedElement_SetterDefParserRuleCall_3 extends RuleCallToken {
	
	public LocatedElement_SetterDefParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getSetterDefParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetterDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(SetterDef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MigrationProgram
protected class LocatedElement_MigrationProgramParserRuleCall_4 extends RuleCallToken {
	
	public LocatedElement_MigrationProgramParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getMigrationProgramParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigrationProgramRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MigrationProgram_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Rule
protected class LocatedElement_RuleParserRuleCall_5 extends RuleCallToken {
	
	public LocatedElement_RuleParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getRuleParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Rule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Artifact
protected class LocatedElement_ArtifactParserRuleCall_6 extends RuleCallToken {
	
	public LocatedElement_ArtifactParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getArtifactParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Artifact_TypeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArtifactRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Artifact_TypeAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// OpDef
protected class LocatedElement_OpDefParserRuleCall_7 extends RuleCallToken {
	
	public LocatedElement_OpDefParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getOpDefParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEClassOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEPackageOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEReferenceOpDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(OpDef_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RewritingRule
protected class LocatedElement_RewritingRuleParserRuleCall_8 extends RuleCallToken {
	
	public LocatedElement_RewritingRuleParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getRewritingRuleParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRewritingRuleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(RewritingRule_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Migrator
protected class LocatedElement_MigratorParserRuleCall_9 extends RuleCallToken {
	
	public LocatedElement_MigratorParserRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getMigratorParserRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Migrator_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMigratorSXAccess().getMigratorSXAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Migrator_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FilterMigrator
protected class LocatedElement_FilterMigratorParserRuleCall_10 extends RuleCallToken {
	
	public LocatedElement_FilterMigratorParserRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getFilterMigratorParserRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFilterMigratorRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FilterMigrator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Parameter
protected class LocatedElement_ParameterParserRuleCall_11 extends RuleCallToken {
	
	public LocatedElement_ParameterParserRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLocatedElementAccess().getParameterParserRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParameterRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Parameter_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule LocatedElement ****************/


/************ begin Rule MigrationProgram ****************
 *
 * MigrationProgram:
 * 	"Migration" name=ID ";" ("include" libs+=STRING ";")* migr="migrate" typeArt=Artifact artifact=STRING ":"
 * 	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
 * 	rules+=Rule* "}";
 *
 **/

// "Migration" name=ID ";" ("include" libs+=STRING ";")* migr="migrate" typeArt=Artifact artifact=STRING ":"
// (transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
// rules+=Rule* "}"
protected class MigrationProgram_Group extends GroupToken {
	
	public MigrationProgram_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_RightCurlyBracketKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigrationProgramRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Migration"
protected class MigrationProgram_MigrationKeyword_0 extends KeywordToken  {
	
	public MigrationProgram_MigrationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getMigrationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MigrationProgram_NameAssignment_1 extends AssignmentToken  {
	
	public MigrationProgram_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_MigrationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MigrationProgram_SemicolonKeyword_2 extends KeywordToken  {
	
	public MigrationProgram_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("include" libs+=STRING ";")*
protected class MigrationProgram_Group_3 extends GroupToken {
	
	public MigrationProgram_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_SemicolonKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "include"
protected class MigrationProgram_IncludeKeyword_3_0 extends KeywordToken  {
	
	public MigrationProgram_IncludeKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getIncludeKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigrationProgram_SemicolonKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// libs+=STRING
protected class MigrationProgram_LibsAssignment_3_1 extends AssignmentToken  {
	
	public MigrationProgram_LibsAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getLibsAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_IncludeKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("libs",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("libs");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getLibsSTRINGTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getLibsSTRINGTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MigrationProgram_SemicolonKeyword_3_2 extends KeywordToken  {
	
	public MigrationProgram_SemicolonKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getSemicolonKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_LibsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// migr="migrate"
protected class MigrationProgram_MigrAssignment_4 extends AssignmentToken  {
	
	public MigrationProgram_MigrAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getMigrAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigrationProgram_SemicolonKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migr");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getMigrMigrateKeyword_4_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMigrationProgramAccess().getMigrMigrateKeyword_4_0();
			return obj;
		}
		return null;
	}

}

// typeArt=Artifact
protected class MigrationProgram_TypeArtAssignment_5 extends AssignmentToken  {
	
	public MigrationProgram_TypeArtAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTypeArtAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Artifact_TypeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("typeArt",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeArt");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArtifactRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigrationProgramAccess().getTypeArtArtifactParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigrationProgram_MigrAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// artifact=STRING
protected class MigrationProgram_ArtifactAssignment_6 extends AssignmentToken  {
	
	public MigrationProgram_ArtifactAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getArtifactAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TypeArtAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("artifact",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("artifact");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getArtifactSTRINGTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getArtifactSTRINGTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class MigrationProgram_ColonKeyword_7 extends KeywordToken  {
	
	public MigrationProgram_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_ArtifactAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])
protected class MigrationProgram_Group_8 extends GroupToken {
	
	public MigrationProgram_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_TransformationPackageAssignment_8_0 extends AssignmentToken  {
	
	public MigrationProgram_TransformationPackageAssignment_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTransformationPackageAssignment_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("transformationPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("transformationPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_8_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_8_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "," transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_Group_8_1 extends GroupToken {
	
	public MigrationProgram_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TransformationPackageAssignment_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MigrationProgram_CommaKeyword_8_1_0 extends KeywordToken  {
	
	public MigrationProgram_CommaKeyword_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getCommaKeyword_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TransformationPackageAssignment_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_TransformationPackageAssignment_8_1_1 extends AssignmentToken  {
	
	public MigrationProgram_TransformationPackageAssignment_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTransformationPackageAssignment_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_CommaKeyword_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("transformationPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("transformationPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_8_1_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_8_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



// "with"
protected class MigrationProgram_WithKeyword_9 extends KeywordToken  {
	
	public MigrationProgram_WithKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getWithKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// delta=STRING
protected class MigrationProgram_DeltaAssignment_10 extends AssignmentToken  {
	
	public MigrationProgram_DeltaAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getDeltaAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_WithKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("delta",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("delta");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getDeltaSTRINGTerminalRuleCall_10_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getDeltaSTRINGTerminalRuleCall_10_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MigrationProgram_LeftCurlyBracketKeyword_11 extends KeywordToken  {
	
	public MigrationProgram_LeftCurlyBracketKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getLeftCurlyBracketKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_DeltaAssignment_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rules+=Rule*
protected class MigrationProgram_RulesAssignment_12 extends AssignmentToken  {
	
	public MigrationProgram_RulesAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getRulesAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rules",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rules");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigrationProgramAccess().getRulesRuleParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigrationProgram_RulesAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MigrationProgram_LeftCurlyBracketKeyword_11(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MigrationProgram_RightCurlyBracketKeyword_13 extends KeywordToken  {
	
	public MigrationProgram_RightCurlyBracketKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getRightCurlyBracketKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_RulesAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigrationProgram_LeftCurlyBracketKeyword_11(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MigrationProgram ****************/


/************ begin Rule Artifact ****************
 *
 * Artifact:
 * 	type=("transformation" | "model" | "tcs-model");
 *
 **/

// type=("transformation" | "model" | "tcs-model")
protected class Artifact_TypeAssignment extends AssignmentToken  {
	
	public Artifact_TypeAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArtifactAccess().getTypeAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArtifactRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getArtifactAccess().getTypeTransformationKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArtifactAccess().getTypeTransformationKeyword_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getArtifactAccess().getTypeModelKeyword_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArtifactAccess().getTypeModelKeyword_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getArtifactAccess().getTypeTcsModelKeyword_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getArtifactAccess().getTypeTcsModelKeyword_0_2();
			return obj;
		}
		return null;
	}

}

/************ end Rule Artifact ****************/


/************ begin Rule Rule ****************
 *
 * Rule:
 * 	"rule" name=ID "[" //|refFilter=[edelta::ComplexOperatorDef]
 * 	filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
 *
 **/

// "rule" name=ID "[" //|refFilter=[edelta::ComplexOperatorDef]
// filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}"
protected class Rule_Group extends GroupToken {
	
	public Rule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "rule"
protected class Rule_RuleKeyword_0 extends KeywordToken  {
	
	public Rule_RuleKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRuleKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Rule_NameAssignment_1 extends AssignmentToken  {
	
	public Rule_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RuleKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "["
protected class Rule_LeftSquareBracketKeyword_2 extends KeywordToken  {
	
	public Rule_LeftSquareBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getLeftSquareBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// //|refFilter=[edelta::ComplexOperatorDef]
// filter=OpDef
protected class Rule_FilterAssignment_3 extends AssignmentToken  {
	
	public Rule_FilterAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getFilterAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filter",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filter");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOpDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRuleAccess().getFilterOpDefParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Rule_LeftSquareBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class Rule_RightSquareBracketKeyword_4 extends KeywordToken  {
	
	public Rule_RightSquareBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRightSquareBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_FilterAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Rule_LeftCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Rule_LeftCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RightSquareBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rewritingRules+=RewritingRule*
protected class Rule_RewritingRulesAssignment_6 extends AssignmentToken  {
	
	public Rule_RewritingRulesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getRewritingRulesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rewritingRules",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rewritingRules");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRewritingRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRuleAccess().getRewritingRulesRewritingRuleParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Rule_RewritingRulesAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Rule_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Rule_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Rule_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RewritingRulesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Rule_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Rule ****************/


/************ begin Rule OpDef ****************
 *
 * //ComplexOpDef:op=[];
 * OpDef:
 * 	EPackageOpDef | EClassOpDef | EAttributeOpDef | EReferenceOpDef;
 *
 **/

// EPackageOpDef | EClassOpDef | EAttributeOpDef | EReferenceOpDef
protected class OpDef_Alternatives extends AlternativesToken {

	public OpDef_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_EPackageOpDefParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_EClassOpDefParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new OpDef_EAttributeOpDefParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new OpDef_EReferenceOpDefParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEClassOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEPackageOpDefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEReferenceOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// EPackageOpDef
protected class OpDef_EPackageOpDefParserRuleCall_0 extends RuleCallToken {
	
	public OpDef_EPackageOpDefParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOpDefAccess().getEPackageOpDefParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEPackageOpDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EPackageOpDef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EClassOpDef
protected class OpDef_EClassOpDefParserRuleCall_1 extends RuleCallToken {
	
	public OpDef_EClassOpDefParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOpDefAccess().getEClassOpDefParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEClassOpDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EClassOpDef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EAttributeOpDef
protected class OpDef_EAttributeOpDefParserRuleCall_2 extends RuleCallToken {
	
	public OpDef_EAttributeOpDefParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOpDefAccess().getEAttributeOpDefParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeOpDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EAttributeOpDef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EReferenceOpDef
protected class OpDef_EReferenceOpDefParserRuleCall_3 extends RuleCallToken {
	
	public OpDef_EReferenceOpDefParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOpDefAccess().getEReferenceOpDefParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEReferenceOpDefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EReferenceOpDef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule OpDef ****************/


/************ begin Rule EPackageOpDef ****************
 *
 * EPackageOpDef:
 * 	("package" var=Package "=") ((op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package"
 * 	")" "where" "{" (setters+=setterDef | classes+=EClassOpDef)* "}") //|complex+=CallOperator
 * ;
 *
 **/

// ("package" var=Package "=") ((op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package"
// ")" "where" "{" (setters+=setterDef | classes+=EClassOpDef)* "}") //|complex+=CallOperator
protected class EPackageOpDef_Group extends GroupToken {
	
	public EPackageOpDef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEPackageOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "package" var=Package "="
protected class EPackageOpDef_Group_0 extends GroupToken {
	
	public EPackageOpDef_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "package"
protected class EPackageOpDef_PackageKeyword_0_0 extends KeywordToken  {
	
	public EPackageOpDef_PackageKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getPackageKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Package
protected class EPackageOpDef_VarAssignment_0_1 extends AssignmentToken  {
	
	public EPackageOpDef_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEPackageOpDefAccess().getVarPackageParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EPackageOpDef_PackageKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class EPackageOpDef_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public EPackageOpDef_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (op="changePackage" | op="addPackage" | op="deletePackage") "(" ref=Package ":" "package" ")" "where" "{"
// (setters+=setterDef | classes+=EClassOpDef)* "}"
protected class EPackageOpDef_Group_1 extends GroupToken {
	
	public EPackageOpDef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_RightCurlyBracketKeyword_1_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op="changePackage" | op="addPackage" | op="deletePackage"
protected class EPackageOpDef_Alternatives_1_0 extends AlternativesToken {

	public EPackageOpDef_Alternatives_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getAlternatives_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_OpAssignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EPackageOpDef_OpAssignment_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EPackageOpDef_OpAssignment_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op="changePackage"
protected class EPackageOpDef_OpAssignment_1_0_0 extends AssignmentToken  {
	
	public EPackageOpDef_OpAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getOpAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEPackageOpDefAccess().getOpChangePackageKeyword_1_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEPackageOpDefAccess().getOpChangePackageKeyword_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// op="addPackage"
protected class EPackageOpDef_OpAssignment_1_0_1 extends AssignmentToken  {
	
	public EPackageOpDef_OpAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getOpAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEPackageOpDefAccess().getOpAddPackageKeyword_1_0_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEPackageOpDefAccess().getOpAddPackageKeyword_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// op="deletePackage"
protected class EPackageOpDef_OpAssignment_1_0_2 extends AssignmentToken  {
	
	public EPackageOpDef_OpAssignment_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getOpAssignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEPackageOpDefAccess().getOpDeletePackageKeyword_1_0_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEPackageOpDefAccess().getOpDeletePackageKeyword_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "("
protected class EPackageOpDef_LeftParenthesisKeyword_1_1 extends KeywordToken  {
	
	public EPackageOpDef_LeftParenthesisKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getLeftParenthesisKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Alternatives_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Package
protected class EPackageOpDef_RefAssignment_1_2 extends AssignmentToken  {
	
	public EPackageOpDef_RefAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getRefAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEPackageOpDefAccess().getRefPackageParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EPackageOpDef_LeftParenthesisKeyword_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":"
protected class EPackageOpDef_ColonKeyword_1_3 extends KeywordToken  {
	
	public EPackageOpDef_ColonKeyword_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getColonKeyword_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_RefAssignment_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "package"
protected class EPackageOpDef_PackageKeyword_1_4 extends KeywordToken  {
	
	public EPackageOpDef_PackageKeyword_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getPackageKeyword_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_ColonKeyword_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ")"
protected class EPackageOpDef_RightParenthesisKeyword_1_5 extends KeywordToken  {
	
	public EPackageOpDef_RightParenthesisKeyword_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getRightParenthesisKeyword_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_PackageKeyword_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "where"
protected class EPackageOpDef_WhereKeyword_1_6 extends KeywordToken  {
	
	public EPackageOpDef_WhereKeyword_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getWhereKeyword_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_RightParenthesisKeyword_1_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class EPackageOpDef_LeftCurlyBracketKeyword_1_7 extends KeywordToken  {
	
	public EPackageOpDef_LeftCurlyBracketKeyword_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getLeftCurlyBracketKeyword_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_WhereKeyword_1_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (setters+=setterDef | classes+=EClassOpDef)*
protected class EPackageOpDef_Alternatives_1_8 extends AlternativesToken {

	public EPackageOpDef_Alternatives_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getAlternatives_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_SettersAssignment_1_8_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EPackageOpDef_ClassesAssignment_1_8_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// setters+=setterDef
protected class EPackageOpDef_SettersAssignment_1_8_0 extends AssignmentToken  {
	
	public EPackageOpDef_SettersAssignment_1_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getSettersAssignment_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSetterDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEPackageOpDefAccess().getSettersSetterDefParserRuleCall_1_8_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EPackageOpDef_Alternatives_1_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EPackageOpDef_LeftCurlyBracketKeyword_1_7(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// classes+=EClassOpDef
protected class EPackageOpDef_ClassesAssignment_1_8_1 extends AssignmentToken  {
	
	public EPackageOpDef_ClassesAssignment_1_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getClassesAssignment_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEClassOpDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEPackageOpDefAccess().getClassesEClassOpDefParserRuleCall_1_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EPackageOpDef_Alternatives_1_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EPackageOpDef_LeftCurlyBracketKeyword_1_7(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class EPackageOpDef_RightCurlyBracketKeyword_1_9 extends KeywordToken  {
	
	public EPackageOpDef_RightCurlyBracketKeyword_1_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageOpDefAccess().getRightCurlyBracketKeyword_1_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackageOpDef_Alternatives_1_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EPackageOpDef_LeftCurlyBracketKeyword_1_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule EPackageOpDef ****************/


/************ begin Rule EClassOpDef ****************
 *
 * EClassOpDef:
 * 	("class" var=Class "=") ((op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where"
 * 	("{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")) //|complex+=CallOperator
 * ;
 *
 **/

// ("class" var=Class "=") ((op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where"
// ("{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")) //|complex+=CallOperator
protected class EClassOpDef_Group extends GroupToken {
	
	public EClassOpDef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEClassOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "class" var=Class "="
protected class EClassOpDef_Group_0 extends GroupToken {
	
	public EClassOpDef_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "class"
protected class EClassOpDef_ClassKeyword_0_0 extends KeywordToken  {
	
	public EClassOpDef_ClassKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getClassKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Class
protected class EClassOpDef_VarAssignment_0_1 extends AssignmentToken  {
	
	public EClassOpDef_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEClassOpDefAccess().getVarClassParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EClassOpDef_ClassKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class EClassOpDef_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public EClassOpDef_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (op="changeClass" | op="addClass" | op="deleteClass") "(" ref=Class ":" "class" ")" "where" ("{" (setters+=setterDef |
// attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}")
protected class EClassOpDef_Group_1 extends GroupToken {
	
	public EClassOpDef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op="changeClass" | op="addClass" | op="deleteClass"
protected class EClassOpDef_Alternatives_1_0 extends AlternativesToken {

	public EClassOpDef_Alternatives_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getAlternatives_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_OpAssignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EClassOpDef_OpAssignment_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EClassOpDef_OpAssignment_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op="changeClass"
protected class EClassOpDef_OpAssignment_1_0_0 extends AssignmentToken  {
	
	public EClassOpDef_OpAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getOpAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEClassOpDefAccess().getOpChangeClassKeyword_1_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEClassOpDefAccess().getOpChangeClassKeyword_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// op="addClass"
protected class EClassOpDef_OpAssignment_1_0_1 extends AssignmentToken  {
	
	public EClassOpDef_OpAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getOpAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEClassOpDefAccess().getOpAddClassKeyword_1_0_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEClassOpDefAccess().getOpAddClassKeyword_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// op="deleteClass"
protected class EClassOpDef_OpAssignment_1_0_2 extends AssignmentToken  {
	
	public EClassOpDef_OpAssignment_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getOpAssignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEClassOpDefAccess().getOpDeleteClassKeyword_1_0_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEClassOpDefAccess().getOpDeleteClassKeyword_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "("
protected class EClassOpDef_LeftParenthesisKeyword_1_1 extends KeywordToken  {
	
	public EClassOpDef_LeftParenthesisKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getLeftParenthesisKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Alternatives_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Class
protected class EClassOpDef_RefAssignment_1_2 extends AssignmentToken  {
	
	public EClassOpDef_RefAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getRefAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEClassOpDefAccess().getRefClassParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EClassOpDef_LeftParenthesisKeyword_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":"
protected class EClassOpDef_ColonKeyword_1_3 extends KeywordToken  {
	
	public EClassOpDef_ColonKeyword_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getColonKeyword_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_RefAssignment_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "class"
protected class EClassOpDef_ClassKeyword_1_4 extends KeywordToken  {
	
	public EClassOpDef_ClassKeyword_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getClassKeyword_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_ColonKeyword_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ")"
protected class EClassOpDef_RightParenthesisKeyword_1_5 extends KeywordToken  {
	
	public EClassOpDef_RightParenthesisKeyword_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getRightParenthesisKeyword_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_ClassKeyword_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "where"
protected class EClassOpDef_WhereKeyword_1_6 extends KeywordToken  {
	
	public EClassOpDef_WhereKeyword_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getWhereKeyword_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_RightParenthesisKeyword_1_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{" (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)* "}"
protected class EClassOpDef_Group_1_7 extends GroupToken {
	
	public EClassOpDef_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_RightCurlyBracketKeyword_1_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class EClassOpDef_LeftCurlyBracketKeyword_1_7_0 extends KeywordToken  {
	
	public EClassOpDef_LeftCurlyBracketKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getLeftCurlyBracketKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_WhereKeyword_1_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (setters+=setterDef | attributes+=EAttributeOpDef | references+=EReferenceOpDef)*
protected class EClassOpDef_Alternatives_1_7_1 extends AlternativesToken {

	public EClassOpDef_Alternatives_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getAlternatives_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_SettersAssignment_1_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EClassOpDef_AttributesAssignment_1_7_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EClassOpDef_ReferencesAssignment_1_7_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// setters+=setterDef
protected class EClassOpDef_SettersAssignment_1_7_1_0 extends AssignmentToken  {
	
	public EClassOpDef_SettersAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getSettersAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSetterDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEClassOpDefAccess().getSettersSetterDefParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EClassOpDef_Alternatives_1_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EClassOpDef_LeftCurlyBracketKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// attributes+=EAttributeOpDef
protected class EClassOpDef_AttributesAssignment_1_7_1_1 extends AssignmentToken  {
	
	public EClassOpDef_AttributesAssignment_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getAttributesAssignment_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEAttributeOpDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEClassOpDefAccess().getAttributesEAttributeOpDefParserRuleCall_1_7_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EClassOpDef_Alternatives_1_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EClassOpDef_LeftCurlyBracketKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// references+=EReferenceOpDef
protected class EClassOpDef_ReferencesAssignment_1_7_1_2 extends AssignmentToken  {
	
	public EClassOpDef_ReferencesAssignment_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getReferencesAssignment_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("references",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("references");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEReferenceOpDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEClassOpDefAccess().getReferencesEReferenceOpDefParserRuleCall_1_7_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EClassOpDef_Alternatives_1_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EClassOpDef_LeftCurlyBracketKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class EClassOpDef_RightCurlyBracketKeyword_1_7_2 extends KeywordToken  {
	
	public EClassOpDef_RightCurlyBracketKeyword_1_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassOpDefAccess().getRightCurlyBracketKeyword_1_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassOpDef_Alternatives_1_7_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EClassOpDef_LeftCurlyBracketKeyword_1_7_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}




/************ end Rule EClassOpDef ****************/


/************ begin Rule EAttributeOpDef ****************
 *
 * EAttributeOpDef:
 * 	("attribute" var=Attribute "=") (((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "("
 * 	ref=Attribute ":" "attribute") ")" "where" ("{" setters+=setterDef* "}" | ";")) //|complex+=CallOperator
 * ;
 *
 **/

// ("attribute" var=Attribute "=") (((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute
// ":" "attribute") ")" "where" ("{" setters+=setterDef* "}" | ";")) //|complex+=CallOperator
protected class EAttributeOpDef_Group extends GroupToken {
	
	public EAttributeOpDef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "attribute" var=Attribute "="
protected class EAttributeOpDef_Group_0 extends GroupToken {
	
	public EAttributeOpDef_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "attribute"
protected class EAttributeOpDef_AttributeKeyword_0_0 extends KeywordToken  {
	
	public EAttributeOpDef_AttributeKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getAttributeKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Attribute
protected class EAttributeOpDef_VarAssignment_0_1 extends AssignmentToken  {
	
	public EAttributeOpDef_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEAttributeOpDefAccess().getVarAttributeParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EAttributeOpDef_AttributeKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class EAttributeOpDef_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public EAttributeOpDef_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ((op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute ":" "attribute") ")" "where"
// ("{" setters+=setterDef* "}" | ";")
protected class EAttributeOpDef_Group_1 extends GroupToken {
	
	public EAttributeOpDef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Alternatives_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute") "(" ref=Attribute ":" "attribute"
protected class EAttributeOpDef_Group_1_0 extends GroupToken {
	
	public EAttributeOpDef_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_AttributeKeyword_1_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op="changeEAttribute" | op="addEAttribute" | op="deleteEAttribute"
protected class EAttributeOpDef_Alternatives_1_0_0 extends AlternativesToken {

	public EAttributeOpDef_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_OpAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EAttributeOpDef_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EAttributeOpDef_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op="changeEAttribute"
protected class EAttributeOpDef_OpAssignment_1_0_0_0 extends AssignmentToken  {
	
	public EAttributeOpDef_OpAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getOpAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEAttributeOpDefAccess().getOpChangeEAttributeKeyword_1_0_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEAttributeOpDefAccess().getOpChangeEAttributeKeyword_1_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// op="addEAttribute"
protected class EAttributeOpDef_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public EAttributeOpDef_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEAttributeOpDefAccess().getOpAddEAttributeKeyword_1_0_0_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEAttributeOpDefAccess().getOpAddEAttributeKeyword_1_0_0_1_0();
			return obj;
		}
		return null;
	}

}

// op="deleteEAttribute"
protected class EAttributeOpDef_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public EAttributeOpDef_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEAttributeOpDefAccess().getOpDeleteEAttributeKeyword_1_0_0_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEAttributeOpDefAccess().getOpDeleteEAttributeKeyword_1_0_0_2_0();
			return obj;
		}
		return null;
	}

}


// "("
protected class EAttributeOpDef_LeftParenthesisKeyword_1_0_1 extends KeywordToken  {
	
	public EAttributeOpDef_LeftParenthesisKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getLeftParenthesisKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Attribute
protected class EAttributeOpDef_RefAssignment_1_0_2 extends AssignmentToken  {
	
	public EAttributeOpDef_RefAssignment_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getRefAssignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEAttributeOpDefAccess().getRefAttributeParserRuleCall_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EAttributeOpDef_LeftParenthesisKeyword_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":"
protected class EAttributeOpDef_ColonKeyword_1_0_3 extends KeywordToken  {
	
	public EAttributeOpDef_ColonKeyword_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getColonKeyword_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_RefAssignment_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "attribute"
protected class EAttributeOpDef_AttributeKeyword_1_0_4 extends KeywordToken  {
	
	public EAttributeOpDef_AttributeKeyword_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getAttributeKeyword_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_ColonKeyword_1_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ")"
protected class EAttributeOpDef_RightParenthesisKeyword_1_1 extends KeywordToken  {
	
	public EAttributeOpDef_RightParenthesisKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getRightParenthesisKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "where"
protected class EAttributeOpDef_WhereKeyword_1_2 extends KeywordToken  {
	
	public EAttributeOpDef_WhereKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getWhereKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_RightParenthesisKeyword_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{" setters+=setterDef* "}" | ";"
protected class EAttributeOpDef_Alternatives_1_3 extends AlternativesToken {

	public EAttributeOpDef_Alternatives_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getAlternatives_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_Group_1_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EAttributeOpDef_SemicolonKeyword_1_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" setters+=setterDef* "}"
protected class EAttributeOpDef_Group_1_3_0 extends GroupToken {
	
	public EAttributeOpDef_Group_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getGroup_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_RightCurlyBracketKeyword_1_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class EAttributeOpDef_LeftCurlyBracketKeyword_1_3_0_0 extends KeywordToken  {
	
	public EAttributeOpDef_LeftCurlyBracketKeyword_1_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getLeftCurlyBracketKeyword_1_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_WhereKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// setters+=setterDef*
protected class EAttributeOpDef_SettersAssignment_1_3_0_1 extends AssignmentToken  {
	
	public EAttributeOpDef_SettersAssignment_1_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getSettersAssignment_1_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSetterDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEAttributeOpDefAccess().getSettersSetterDefParserRuleCall_1_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EAttributeOpDef_SettersAssignment_1_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EAttributeOpDef_LeftCurlyBracketKeyword_1_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EAttributeOpDef_RightCurlyBracketKeyword_1_3_0_2 extends KeywordToken  {
	
	public EAttributeOpDef_RightCurlyBracketKeyword_1_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getRightCurlyBracketKeyword_1_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_SettersAssignment_1_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class EAttributeOpDef_SemicolonKeyword_1_3_1 extends KeywordToken  {
	
	public EAttributeOpDef_SemicolonKeyword_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeOpDefAccess().getSemicolonKeyword_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributeOpDef_WhereKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule EAttributeOpDef ****************/


/************ begin Rule EReferenceOpDef ****************
 *
 * EReferenceOpDef:
 * 	("reference" var=Reference "=") (((op="changeEReference" | op="addEReference" | op="deleteEReference") "("
 * 	ref=Reference ":" "reference") ")" "where" ("{" setters+=setterDef* "}") //|complex+=CallOperator
 * );
 *
 **/

// ("reference" var=Reference "=") (((op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference
// ":" "reference") ")" "where" ("{" setters+=setterDef* "}") //|complex+=CallOperator
// )
protected class EReferenceOpDef_Group extends GroupToken {
	
	public EReferenceOpDef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEReferenceOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "reference" var=Reference "="
protected class EReferenceOpDef_Group_0 extends GroupToken {
	
	public EReferenceOpDef_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "reference"
protected class EReferenceOpDef_ReferenceKeyword_0_0 extends KeywordToken  {
	
	public EReferenceOpDef_ReferenceKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getReferenceKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Reference
protected class EReferenceOpDef_VarAssignment_0_1 extends AssignmentToken  {
	
	public EReferenceOpDef_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEReferenceOpDefAccess().getVarReferenceParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EReferenceOpDef_ReferenceKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class EReferenceOpDef_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public EReferenceOpDef_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ((op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference ":" "reference") ")" "where"
// ("{" setters+=setterDef* "}") //|complex+=CallOperator
protected class EReferenceOpDef_Group_1 extends GroupToken {
	
	public EReferenceOpDef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (op="changeEReference" | op="addEReference" | op="deleteEReference") "(" ref=Reference ":" "reference"
protected class EReferenceOpDef_Group_1_0 extends GroupToken {
	
	public EReferenceOpDef_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_ReferenceKeyword_1_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op="changeEReference" | op="addEReference" | op="deleteEReference"
protected class EReferenceOpDef_Alternatives_1_0_0 extends AlternativesToken {

	public EReferenceOpDef_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_OpAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EReferenceOpDef_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EReferenceOpDef_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op="changeEReference"
protected class EReferenceOpDef_OpAssignment_1_0_0_0 extends AssignmentToken  {
	
	public EReferenceOpDef_OpAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getOpAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEReferenceOpDefAccess().getOpChangeEReferenceKeyword_1_0_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEReferenceOpDefAccess().getOpChangeEReferenceKeyword_1_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// op="addEReference"
protected class EReferenceOpDef_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public EReferenceOpDef_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEReferenceOpDefAccess().getOpAddEReferenceKeyword_1_0_0_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEReferenceOpDefAccess().getOpAddEReferenceKeyword_1_0_0_1_0();
			return obj;
		}
		return null;
	}

}

// op="deleteEReference"
protected class EReferenceOpDef_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public EReferenceOpDef_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEReferenceOpDefAccess().getOpDeleteEReferenceKeyword_1_0_0_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEReferenceOpDefAccess().getOpDeleteEReferenceKeyword_1_0_0_2_0();
			return obj;
		}
		return null;
	}

}


// "("
protected class EReferenceOpDef_LeftParenthesisKeyword_1_0_1 extends KeywordToken  {
	
	public EReferenceOpDef_LeftParenthesisKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getLeftParenthesisKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Reference
protected class EReferenceOpDef_RefAssignment_1_0_2 extends AssignmentToken  {
	
	public EReferenceOpDef_RefAssignment_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getRefAssignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEReferenceOpDefAccess().getRefReferenceParserRuleCall_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EReferenceOpDef_LeftParenthesisKeyword_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":"
protected class EReferenceOpDef_ColonKeyword_1_0_3 extends KeywordToken  {
	
	public EReferenceOpDef_ColonKeyword_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getColonKeyword_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_RefAssignment_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "reference"
protected class EReferenceOpDef_ReferenceKeyword_1_0_4 extends KeywordToken  {
	
	public EReferenceOpDef_ReferenceKeyword_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getReferenceKeyword_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_ColonKeyword_1_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ")"
protected class EReferenceOpDef_RightParenthesisKeyword_1_1 extends KeywordToken  {
	
	public EReferenceOpDef_RightParenthesisKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getRightParenthesisKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "where"
protected class EReferenceOpDef_WhereKeyword_1_2 extends KeywordToken  {
	
	public EReferenceOpDef_WhereKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getWhereKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_RightParenthesisKeyword_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{" setters+=setterDef* "}"
protected class EReferenceOpDef_Group_1_3 extends GroupToken {
	
	public EReferenceOpDef_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_RightCurlyBracketKeyword_1_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class EReferenceOpDef_LeftCurlyBracketKeyword_1_3_0 extends KeywordToken  {
	
	public EReferenceOpDef_LeftCurlyBracketKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getLeftCurlyBracketKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_WhereKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// setters+=setterDef*
protected class EReferenceOpDef_SettersAssignment_1_3_1 extends AssignmentToken  {
	
	public EReferenceOpDef_SettersAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getSettersAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSetterDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEReferenceOpDefAccess().getSettersSetterDefParserRuleCall_1_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EReferenceOpDef_SettersAssignment_1_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EReferenceOpDef_LeftCurlyBracketKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EReferenceOpDef_RightCurlyBracketKeyword_1_3_2 extends KeywordToken  {
	
	public EReferenceOpDef_RightCurlyBracketKeyword_1_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceOpDefAccess().getRightCurlyBracketKeyword_1_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferenceOpDef_SettersAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EReferenceOpDef_LeftCurlyBracketKeyword_1_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}




/************ end Rule EReferenceOpDef ****************/


/************ begin Rule setterDef ****************
 *
 * setterDef:
 * 	"set" metafeature=[ecore::EStructuralFeature] operator="=" //infixOperator 
 * 	par+=Parameter ("," par+=Parameter)* ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] operator="=" //infixOperator 
// par+=Parameter ("," par+=Parameter)* ";"
protected class SetterDef_Group extends GroupToken {
	
	public SetterDef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetterDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class SetterDef_SetKeyword_0 extends KeywordToken  {
	
	public SetterDef_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class SetterDef_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public SetterDef_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSetterDefAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSetterDefAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// operator="="
protected class SetterDef_OperatorAssignment_2 extends AssignmentToken  {
	
	public SetterDef_OperatorAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getOperatorAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operator",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operator");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSetterDefAccess().getOperatorEqualsSignKeyword_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSetterDefAccess().getOperatorEqualsSignKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// //infixOperator 
// par+=Parameter
protected class SetterDef_ParAssignment_3 extends AssignmentToken  {
	
	public SetterDef_ParAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getParAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("par",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("par");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetterDefAccess().getParParameterParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SetterDef_OperatorAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," par+=Parameter)*
protected class SetterDef_Group_4 extends GroupToken {
	
	public SetterDef_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_ParAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SetterDef_CommaKeyword_4_0 extends KeywordToken  {
	
	public SetterDef_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SetterDef_ParAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// par+=Parameter
protected class SetterDef_ParAssignment_4_1 extends AssignmentToken  {
	
	public SetterDef_ParAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getParAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("par",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("par");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetterDefAccess().getParParameterParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SetterDef_CommaKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ";"
protected class SetterDef_SemicolonKeyword_5 extends KeywordToken  {
	
	public SetterDef_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetterDefAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetterDef_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SetterDef_ParAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule setterDef ****************/


/************ begin Rule RewritingRule ****************
 *
 * RewritingRule:
 * 	(migratorSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*;
 *
 **/

// (migratorSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
protected class RewritingRule_Group extends GroupToken {
	
	public RewritingRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RewritingRule_Group_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRewritingRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// migratorSX+=MigratorSX "->" migratorDX+=MigratorDX
protected class RewritingRule_Group_0 extends GroupToken {
	
	public RewritingRule_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorDXAssignment_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorSX+=MigratorSX
protected class RewritingRule_MigratorSXAssignment_0_0 extends AssignmentToken  {
	
	public RewritingRule_MigratorSXAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorSXAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorSXMigratorSXParserRuleCall_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "->"
protected class RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1 extends KeywordToken  {
	
	public RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorSXAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorDX+=MigratorDX
protected class RewritingRule_MigratorDXAssignment_0_2 extends AssignmentToken  {
	
	public RewritingRule_MigratorDXAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorDXAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
protected class RewritingRule_Group_1 extends GroupToken {
	
	public RewritingRule_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorDXAssignment_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class RewritingRule_AmpersandKeyword_1_0 extends KeywordToken  {
	
	public RewritingRule_AmpersandKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getAmpersandKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RewritingRule_Group_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// migratorSX+=MigratorSX
protected class RewritingRule_MigratorSXAssignment_1_1 extends AssignmentToken  {
	
	public RewritingRule_MigratorSXAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorSXAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorSXMigratorSXParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_AmpersandKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "->"
protected class RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2 extends KeywordToken  {
	
	public RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorSXAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorDX+=MigratorDX
protected class RewritingRule_MigratorDXAssignment_1_3 extends AssignmentToken  {
	
	public RewritingRule_MigratorDXAssignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorDXAssignment_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule RewritingRule ****************/


/************ begin Rule Migrator ****************
 *
 * Migrator:
 * 	MigratorSX | MigratorDX;
 *
 **/

// MigratorSX | MigratorDX
protected class Migrator_Alternatives extends AlternativesToken {

	public Migrator_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMigratorAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Migrator_MigratorSXParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Migrator_MigratorDXParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMigratorSXAccess().getMigratorSXAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// MigratorSX
protected class Migrator_MigratorSXParserRuleCall_0 extends RuleCallToken {
	
	public Migrator_MigratorSXParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMigratorAccess().getMigratorSXParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorSXAccess().getMigratorSXAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(MigratorSX_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MigratorDX
protected class Migrator_MigratorDXParserRuleCall_1 extends RuleCallToken {
	
	public Migrator_MigratorDXParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMigratorAccess().getMigratorDXParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0().getType().getClassifier())
			return null;
		if(checkForRecursion(MigratorDX_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Migrator ****************/


/************ begin Rule MigratorSX ****************
 *
 * MigratorSX:
 * 	{MigratorSX} name=ID ":" elementSX=[ecore::EClass] "where" "[" filterSX+=FilterMigrator ("&"
 * 	filterSX+=FilterMigrator)* "]";
 *
 **/

// {MigratorSX} name=ID ":" elementSX=[ecore::EClass] "where" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)*
// "]"
protected class MigratorSX_Group extends GroupToken {
	
	public MigratorSX_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_RightSquareBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorSXAccess().getMigratorSXAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MigratorSX}
protected class MigratorSX_MigratorSXAction_0 extends ActionToken  {

	public MigratorSX_MigratorSXAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getMigratorSXAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class MigratorSX_NameAssignment_1 extends AssignmentToken  {
	
	public MigratorSX_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_MigratorSXAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigratorSXAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigratorSXAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class MigratorSX_ColonKeyword_2 extends KeywordToken  {
	
	public MigratorSX_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// elementSX=[ecore::EClass]
protected class MigratorSX_ElementSXAssignment_3 extends AssignmentToken  {
	
	public MigratorSX_ElementSXAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getElementSXAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elementSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elementSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXAccess().getElementSXEClassCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigratorSXAccess().getElementSXEClassCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "where"
protected class MigratorSX_WhereKeyword_4 extends KeywordToken  {
	
	public MigratorSX_WhereKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getWhereKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_ElementSXAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class MigratorSX_LeftSquareBracketKeyword_5 extends KeywordToken  {
	
	public MigratorSX_LeftSquareBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getLeftSquareBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_WhereKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filterSX+=FilterMigrator
protected class MigratorSX_FilterSXAssignment_6 extends AssignmentToken  {
	
	public MigratorSX_FilterSXAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getFilterSXAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorSX_LeftSquareBracketKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("&" filterSX+=FilterMigrator)*
protected class MigratorSX_Group_7 extends GroupToken {
	
	public MigratorSX_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_FilterSXAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class MigratorSX_AmpersandKeyword_7_0 extends KeywordToken  {
	
	public MigratorSX_AmpersandKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getAmpersandKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorSX_FilterSXAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// filterSX+=FilterMigrator
protected class MigratorSX_FilterSXAssignment_7_1 extends AssignmentToken  {
	
	public MigratorSX_FilterSXAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getFilterSXAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterSX",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorSX_AmpersandKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class MigratorSX_RightSquareBracketKeyword_8 extends KeywordToken  {
	
	public MigratorSX_RightSquareBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getRightSquareBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorSX_FilterSXAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MigratorSX ****************/


/************ begin Rule MigratorDX ****************
 *
 * MigratorDX:
 * 	{MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]")
 * 	| "null";
 *
 **/

// {MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]") |
// "null"
protected class MigratorDX_Alternatives extends AlternativesToken {

	public MigratorDX_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_NullKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MigratorDX} (name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]")
protected class MigratorDX_Group_0 extends GroupToken {
	
	public MigratorDX_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {MigratorDX}
protected class MigratorDX_MigratorDXAction_0_0 extends ActionToken  {

	public MigratorDX_MigratorDXAction_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getMigratorDXAction_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID ":" elementDX=[ecore::EClass] "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]"
protected class MigratorDX_Group_0_1 extends GroupToken {
	
	public MigratorDX_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_RightSquareBracketKeyword_0_1_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class MigratorDX_NameAssignment_0_1_0 extends AssignmentToken  {
	
	public MigratorDX_NameAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getNameAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_MigratorDXAction_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigratorDXAccess().getNameIDTerminalRuleCall_0_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigratorDXAccess().getNameIDTerminalRuleCall_0_1_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class MigratorDX_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public MigratorDX_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_NameAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// elementDX=[ecore::EClass]
protected class MigratorDX_ElementDXAssignment_0_1_2 extends AssignmentToken  {
	
	public MigratorDX_ElementDXAssignment_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getElementDXAssignment_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elementDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elementDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXAccess().getElementDXEClassCrossReference_0_1_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigratorDXAccess().getElementDXEClassCrossReference_0_1_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "["
protected class MigratorDX_LeftSquareBracketKeyword_0_1_3 extends KeywordToken  {
	
	public MigratorDX_LeftSquareBracketKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getLeftSquareBracketKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_ElementDXAssignment_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filterDX+=FilterMigrator
protected class MigratorDX_FilterDXAssignment_0_1_4 extends AssignmentToken  {
	
	public MigratorDX_FilterDXAssignment_0_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getFilterDXAssignment_0_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorDX_LeftSquareBracketKeyword_0_1_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("&" filterDX+=FilterMigrator)*
protected class MigratorDX_Group_0_1_5 extends GroupToken {
	
	public MigratorDX_Group_0_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGroup_0_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_FilterDXAssignment_0_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class MigratorDX_AmpersandKeyword_0_1_5_0 extends KeywordToken  {
	
	public MigratorDX_AmpersandKeyword_0_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getAmpersandKeyword_0_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_FilterDXAssignment_0_1_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// filterDX+=FilterMigrator
protected class MigratorDX_FilterDXAssignment_0_1_5_1 extends AssignmentToken  {
	
	public MigratorDX_FilterDXAssignment_0_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getFilterDXAssignment_0_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterDX",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_1_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorDX_AmpersandKeyword_0_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class MigratorDX_RightSquareBracketKeyword_0_1_6 extends KeywordToken  {
	
	public MigratorDX_RightSquareBracketKeyword_0_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getRightSquareBracketKeyword_0_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_FilterDXAssignment_0_1_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// "null"
protected class MigratorDX_NullKeyword_1 extends KeywordToken  {
	
	public MigratorDX_NullKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getNullKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}


/************ end Rule MigratorDX ****************/


/************ begin Rule FilterMigrator ****************
 *
 * FilterMigrator:
 * 	featureSX=DotNavigationObjSX op="=" //EssentialOCLInfixOperator   
 * 	value=DotNavigationObjDX?;
 *
 **/

// featureSX=DotNavigationObjSX op="=" //EssentialOCLInfixOperator   
// value=DotNavigationObjDX?
protected class FilterMigrator_Group extends GroupToken {
	
	public FilterMigrator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_ValueAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FilterMigrator_OpAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFilterMigratorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// featureSX=DotNavigationObjSX
protected class FilterMigrator_FeatureSXAssignment_0 extends AssignmentToken  {
	
	public FilterMigrator_FeatureSXAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getFeatureSXAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("featureSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("featureSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjSXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFilterMigratorAccess().getFeatureSXDotNavigationObjSXParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// op="="
protected class FilterMigrator_OpAssignment_1 extends AssignmentToken  {
	
	public FilterMigrator_OpAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getOpAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_FeatureSXAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getFilterMigratorAccess().getOpEqualsSignKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFilterMigratorAccess().getOpEqualsSignKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// value=DotNavigationObjDX?
protected class FilterMigrator_ValueAssignment_2 extends AssignmentToken  {
	
	public FilterMigrator_ValueAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getValueAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjDXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFilterMigratorAccess().getValueDotNavigationObjDXParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FilterMigrator_OpAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule FilterMigrator ****************/


/************ begin Rule DotNavigationObjSX ****************
 *
 * DotNavigationObjSX:
 * 	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
 *
 **/

// "#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*
protected class DotNavigationObjSX_Group extends GroupToken {
	
	public DotNavigationObjSX_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DotNavigationObjSX_ObjAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDotNavigationObjSXRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#"
protected class DotNavigationObjSX_NumberSignKeyword_0 extends KeywordToken  {
	
	public DotNavigationObjSX_NumberSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getNumberSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// obj=[ecore::EObject]
protected class DotNavigationObjSX_ObjAssignment_1 extends AssignmentToken  {
	
	public DotNavigationObjSX_ObjAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getObjAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_NumberSignKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("obj",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("obj");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjSXAccess().getObjEObjectCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDotNavigationObjSXAccess().getObjEObjectCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("." ref=[ecore::EStructuralFeature])*
protected class DotNavigationObjSX_Group_2 extends GroupToken {
	
	public DotNavigationObjSX_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_RefAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class DotNavigationObjSX_FullStopKeyword_2_0 extends KeywordToken  {
	
	public DotNavigationObjSX_FullStopKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getFullStopKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DotNavigationObjSX_ObjAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ref=[ecore::EStructuralFeature]
protected class DotNavigationObjSX_RefAssignment_2_1 extends AssignmentToken  {
	
	public DotNavigationObjSX_RefAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDotNavigationObjSXAccess().getRefAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjSX_FullStopKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjSXAccess().getRefEStructuralFeatureCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDotNavigationObjSXAccess().getRefEStructuralFeatureCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule DotNavigationObjSX ****************/


/************ begin Rule DotNavigationObjDX ****************
 *
 * DotNavigationObjDX:
 * 	"#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*;
 *
 **/

// "#" obj=[ecore::EObject] ("." ref=[ecore::EStructuralFeature])*
protected class DotNavigationObjDX_Group extends GroupToken {
	
	public DotNavigationObjDX_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DotNavigationObjDX_ObjAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDotNavigationObjDXRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#"
protected class DotNavigationObjDX_NumberSignKeyword_0 extends KeywordToken  {
	
	public DotNavigationObjDX_NumberSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getNumberSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// obj=[ecore::EObject]
protected class DotNavigationObjDX_ObjAssignment_1 extends AssignmentToken  {
	
	public DotNavigationObjDX_ObjAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getObjAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_NumberSignKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("obj",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("obj");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjDXAccess().getObjEObjectCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDotNavigationObjDXAccess().getObjEObjectCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("." ref=[ecore::EStructuralFeature])*
protected class DotNavigationObjDX_Group_2 extends GroupToken {
	
	public DotNavigationObjDX_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_RefAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class DotNavigationObjDX_FullStopKeyword_2_0 extends KeywordToken  {
	
	public DotNavigationObjDX_FullStopKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getFullStopKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DotNavigationObjDX_ObjAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ref=[ecore::EStructuralFeature]
protected class DotNavigationObjDX_RefAssignment_2_1 extends AssignmentToken  {
	
	public DotNavigationObjDX_RefAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDotNavigationObjDXAccess().getRefAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DotNavigationObjDX_FullStopKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDotNavigationObjDXAccess().getRefEStructuralFeatureCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDotNavigationObjDXAccess().getRefEStructuralFeatureCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule DotNavigationObjDX ****************/


/************ begin Rule Parameter ****************
 *
 * Parameter:
 * 	"%" name=ID;
 *
 **/

// "%" name=ID
protected class Parameter_Group extends GroupToken {
	
	public Parameter_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParameterRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "%"
protected class Parameter_PercentSignKeyword_0 extends KeywordToken  {
	
	public Parameter_PercentSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getPercentSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Parameter_NameAssignment_1 extends AssignmentToken  {
	
	public Parameter_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_PercentSignKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Parameter ****************/


/************ begin Rule Package ****************
 *
 * Package returns ecore::EPackage:
 * 	{Package} name=ID;
 *
 **/

// {Package} name=ID
protected class Package_Group extends GroupToken {
	
	public Package_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageAccess().getPackageAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Package}
protected class Package_PackageAction_0 extends ActionToken  {

	public Package_PackageAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPackageAccess().getPackageAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Package_NameAssignment_1 extends AssignmentToken  {
	
	public Package_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_PackageAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Package ****************/


/************ begin Rule Class ****************
 *
 * Class returns ecore::EClass:
 * 	{Class} name=ID;
 *
 **/

// {Class} name=ID
protected class Class_Group extends GroupToken {
	
	public Class_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassAccess().getClassAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Class}
protected class Class_ClassAction_0 extends ActionToken  {

	public Class_ClassAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getClassAccess().getClassAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Class_NameAssignment_1 extends AssignmentToken  {
	
	public Class_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_ClassAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Class ****************/


/************ begin Rule Attribute ****************
 *
 * Attribute returns ecore::EAttribute:
 * 	{Attribute} name=ID;
 *
 **/

// {Attribute} name=ID
protected class Attribute_Group extends GroupToken {
	
	public Attribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeAccess().getAttributeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Attribute}
protected class Attribute_AttributeAction_0 extends ActionToken  {

	public Attribute_AttributeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAttributeAccess().getAttributeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Attribute_NameAssignment_1 extends AssignmentToken  {
	
	public Attribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_AttributeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Attribute ****************/


/************ begin Rule Reference ****************
 *
 * Reference returns ecore::EReference:
 * 	{Reference} name=ID;
 *
 **/

// {Reference} name=ID
protected class Reference_Group extends GroupToken {
	
	public Reference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceAccess().getReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Reference}
protected class Reference_ReferenceAction_0 extends ActionToken  {

	public Reference_ReferenceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getReferenceAccess().getReferenceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Reference_NameAssignment_1 extends AssignmentToken  {
	
	public Reference_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_ReferenceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Reference ****************/


/************ begin Rule StructuralFeature ****************
 *
 * StructuralFeature returns ecore::EStructuralFeature:
 * 	Attribute | Reference;
 *
 **/

// Attribute | Reference
protected class StructuralFeature_Alternatives extends AlternativesToken {

	public StructuralFeature_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getStructuralFeatureAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeature_AttributeParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StructuralFeature_ReferenceParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeAccess().getAttributeAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getReferenceAccess().getReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Attribute
protected class StructuralFeature_AttributeParserRuleCall_0 extends RuleCallToken {
	
	public StructuralFeature_AttributeParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getStructuralFeatureAccess().getAttributeParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeAccess().getAttributeAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Attribute_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Reference
protected class StructuralFeature_ReferenceParserRuleCall_1 extends RuleCallToken {
	
	public StructuralFeature_ReferenceParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getStructuralFeatureAccess().getReferenceParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceAccess().getReferenceAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Reference_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule StructuralFeature ****************/

}
