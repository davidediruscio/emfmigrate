/*
* generated by Xtext
*/

package it.univaq.coevolution.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MigrationGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cPackagesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cPackagesPackageOpParserRuleCall_0_0 = (RuleCall)cPackagesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLibraryKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOperatorsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOperatorsComplexOperatorParserRuleCall_1_3_0 = (RuleCall)cOperatorsAssignment_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cMigrationProgrAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cMigrationProgrMigrationProgramParserRuleCall_2_0 = (RuleCall)cMigrationProgrAssignment_2.eContents().get(0);
		
		////import "/it.univaq.coevolution.migration/src/it/univaq/coevolution/ATL.ecore" as atl
		//
		//Model:
		//	packages+=PackageOp* | "Library" title=STRING "{" operators+=ComplexOperator* "}" | MigrationProgr=MigrationProgram;
		public ParserRule getRule() { return rule; }

		//packages+=PackageOp* | "Library" title=STRING "{" operators+=ComplexOperator* "}" | MigrationProgr=MigrationProgram
		public Alternatives getAlternatives() { return cAlternatives; }

		//packages+=PackageOp*
		public Assignment getPackagesAssignment_0() { return cPackagesAssignment_0; }

		//PackageOp
		public RuleCall getPackagesPackageOpParserRuleCall_0_0() { return cPackagesPackageOpParserRuleCall_0_0; }

		//"Library" title=STRING "{" operators+=ComplexOperator* "}"
		public Group getGroup_1() { return cGroup_1; }

		//"Library"
		public Keyword getLibraryKeyword_1_0() { return cLibraryKeyword_1_0; }

		//title=STRING
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_1_0() { return cTitleSTRINGTerminalRuleCall_1_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_2() { return cLeftCurlyBracketKeyword_1_2; }

		//operators+=ComplexOperator*
		public Assignment getOperatorsAssignment_1_3() { return cOperatorsAssignment_1_3; }

		//ComplexOperator
		public RuleCall getOperatorsComplexOperatorParserRuleCall_1_3_0() { return cOperatorsComplexOperatorParserRuleCall_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_4() { return cRightCurlyBracketKeyword_1_4; }

		//MigrationProgr=MigrationProgram
		public Assignment getMigrationProgrAssignment_2() { return cMigrationProgrAssignment_2; }

		//MigrationProgram
		public RuleCall getMigrationProgrMigrationProgramParserRuleCall_2_0() { return cMigrationProgrMigrationProgramParserRuleCall_2_0; }
	}

	public class PackageSettersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "packageSetters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Assignment cValueRefAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final CrossReference cValueRefEObjectCrossReference_3_1_0 = (CrossReference)cValueRefAssignment_3_1.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_3_1_0_1 = (RuleCall)cValueRefEObjectCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueRefAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cValueRefEObjectCrossReference_4_1_0 = (CrossReference)cValueRefAssignment_4_1.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_4_1_0_1 = (RuleCall)cValueRefEObjectCrossReference_4_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///////////////////////////EDELTA grammar//////////////////////////////
		//
		///////////////////////package setters////////////////////////////////////
		//
		////packageSetters:set=setNsUri|set=setNsPrefix;
		//
		//packageSetters:
		//	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
		//	valueRef+=[ecore::EObject])* ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
		//valueRef+=[ecore::EObject])* ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2() { return cColonEqualsSignKeyword_2; }

		//value=STRING | valueRef+=[ecore::EObject]
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//value=STRING
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0_0() { return cValueSTRINGTerminalRuleCall_3_0_0; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_3_1() { return cValueRefAssignment_3_1; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_3_1_0() { return cValueRefEObjectCrossReference_3_1_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_3_1_0_1() { return cValueRefEObjectIDTerminalRuleCall_3_1_0_1; }

		//("," valueRef+=[ecore::EObject])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_4_1() { return cValueRefAssignment_4_1; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_4_1_0() { return cValueRefEObjectCrossReference_4_1_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_4_1_0_1() { return cValueRefEObjectIDTerminalRuleCall_4_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class PackageSetters_defElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "packageSetters_def");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSTRINGKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParIDTerminalRuleCall_4_0 = (RuleCall)cParAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////packageSetters_def:set=setNsUri_def|set=setNsPrefix_def;
		//
		//packageSetters_def:
		//	"set" metafeature=[ecore::EStructuralFeature] ":=" "STRING" par=ID ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] ":=" "STRING" par=ID ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2() { return cColonEqualsSignKeyword_2; }

		//"STRING"
		public Keyword getSTRINGKeyword_3() { return cSTRINGKeyword_3; }

		//par=ID
		public Assignment getParAssignment_4() { return cParAssignment_4; }

		//ID
		public RuleCall getParIDTerminalRuleCall_4_0() { return cParIDTerminalRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class SetNsUriElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "setNsUri");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpSetNsUriKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cNsURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNsURISTRINGTerminalRuleCall_1_0 = (RuleCall)cNsURIAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//setNsUri:
		//	op="setNsUri(" nsURI=STRING ");";
		public ParserRule getRule() { return rule; }

		//op="setNsUri(" nsURI=STRING ");"
		public Group getGroup() { return cGroup; }

		//op="setNsUri("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"setNsUri("
		public Keyword getOpSetNsUriKeyword_0_0() { return cOpSetNsUriKeyword_0_0; }

		//nsURI=STRING
		public Assignment getNsURIAssignment_1() { return cNsURIAssignment_1; }

		//STRING
		public RuleCall getNsURISTRINGTerminalRuleCall_1_0() { return cNsURISTRINGTerminalRuleCall_1_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_2() { return cRightParenthesisSemicolonKeyword_2; }
	}

	public class SetNsUri_defElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "setNsUri_def");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpSetNsUriKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Keyword cSTRINGKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNsUriAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNsUriIDTerminalRuleCall_2_0 = (RuleCall)cNsUriAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//setNsUri_def:
		//	op="setNsUri(" "STRING" nsUri=ID ");";
		public ParserRule getRule() { return rule; }

		//op="setNsUri(" "STRING" nsUri=ID ");"
		public Group getGroup() { return cGroup; }

		//op="setNsUri("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"setNsUri("
		public Keyword getOpSetNsUriKeyword_0_0() { return cOpSetNsUriKeyword_0_0; }

		//"STRING"
		public Keyword getSTRINGKeyword_1() { return cSTRINGKeyword_1; }

		//nsUri=ID
		public Assignment getNsUriAssignment_2() { return cNsUriAssignment_2; }

		//ID
		public RuleCall getNsUriIDTerminalRuleCall_2_0() { return cNsUriIDTerminalRuleCall_2_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_3() { return cRightParenthesisSemicolonKeyword_3; }
	}

	public class SetNsPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "setNsPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpSetNsPrefixKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cNsPrefixAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNsPrefixSTRINGTerminalRuleCall_1_0 = (RuleCall)cNsPrefixAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//setNsPrefix:
		//	op="setNsPrefix(" nsPrefix=STRING ");";
		public ParserRule getRule() { return rule; }

		//op="setNsPrefix(" nsPrefix=STRING ");"
		public Group getGroup() { return cGroup; }

		//op="setNsPrefix("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"setNsPrefix("
		public Keyword getOpSetNsPrefixKeyword_0_0() { return cOpSetNsPrefixKeyword_0_0; }

		//nsPrefix=STRING
		public Assignment getNsPrefixAssignment_1() { return cNsPrefixAssignment_1; }

		//STRING
		public RuleCall getNsPrefixSTRINGTerminalRuleCall_1_0() { return cNsPrefixSTRINGTerminalRuleCall_1_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_2() { return cRightParenthesisSemicolonKeyword_2; }
	}

	public class SetNsPrefix_defElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "setNsPrefix_def");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpSetNsPrefixKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Keyword cSTRINGKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNsPrefixAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNsPrefixIDTerminalRuleCall_2_0 = (RuleCall)cNsPrefixAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//setNsPrefix_def:
		//	op="setNsPrefix(" "STRING" nsPrefix=ID ");";
		public ParserRule getRule() { return rule; }

		//op="setNsPrefix(" "STRING" nsPrefix=ID ");"
		public Group getGroup() { return cGroup; }

		//op="setNsPrefix("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"setNsPrefix("
		public Keyword getOpSetNsPrefixKeyword_0_0() { return cOpSetNsPrefixKeyword_0_0; }

		//"STRING"
		public Keyword getSTRINGKeyword_1() { return cSTRINGKeyword_1; }

		//nsPrefix=ID
		public Assignment getNsPrefixAssignment_2() { return cNsPrefixAssignment_2; }

		//ID
		public RuleCall getNsPrefixIDTerminalRuleCall_2_0() { return cNsPrefixIDTerminalRuleCall_2_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_3() { return cRightParenthesisSemicolonKeyword_3; }
	}

	public class CHANGEPACKAGEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CHANGEPACKAGE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpChangePackageKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefEPackageCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefEPackageIDTerminalRuleCall_1_0_1 = (RuleCall)cRefEPackageCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//////////////////////package operations////////////////////////
		//
		////Op:PackageOp|ClassOp|AttributeOp|ReferenceOp;
		//
		//CHANGEPACKAGE:
		//	op="changePackage(" ref=[ecore::EPackage] ")";
		public ParserRule getRule() { return rule; }

		//op="changePackage(" ref=[ecore::EPackage] ")"
		public Group getGroup() { return cGroup; }

		//op="changePackage("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"changePackage("
		public Keyword getOpChangePackageKeyword_0_0() { return cOpChangePackageKeyword_0_0; }

		//ref=[ecore::EPackage]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ecore::EPackage]
		public CrossReference getRefEPackageCrossReference_1_0() { return cRefEPackageCrossReference_1_0; }

		//ID
		public RuleCall getRefEPackageIDTerminalRuleCall_1_0_1() { return cRefEPackageIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class ADDPACKAGEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ADDPACKAGE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpAddPackageKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cNewAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNewSTRINGTerminalRuleCall_1_0 = (RuleCall)cNewAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ADDPACKAGE:
		//	op="addPackage(" new=STRING ")";
		public ParserRule getRule() { return rule; }

		//op="addPackage(" new=STRING ")"
		public Group getGroup() { return cGroup; }

		//op="addPackage("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"addPackage("
		public Keyword getOpAddPackageKeyword_0_0() { return cOpAddPackageKeyword_0_0; }

		//new=STRING
		public Assignment getNewAssignment_1() { return cNewAssignment_1; }

		//STRING
		public RuleCall getNewSTRINGTerminalRuleCall_1_0() { return cNewSTRINGTerminalRuleCall_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class DELETEPACKAGEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DELETEPACKAGE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpDeletePackageKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefEPackageCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefEPackageIDTerminalRuleCall_1_0_1 = (RuleCall)cRefEPackageCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		////ADDPACKAGE_DEF:"addPackage(" ref+=Package ")";
		//
		//DELETEPACKAGE:
		//	op="deletePackage(" ref=[ecore::EPackage] ")";
		public ParserRule getRule() { return rule; }

		//op="deletePackage(" ref=[ecore::EPackage] ")"
		public Group getGroup() { return cGroup; }

		//op="deletePackage("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"deletePackage("
		public Keyword getOpDeletePackageKeyword_0_0() { return cOpDeletePackageKeyword_0_0; }

		//ref=[ecore::EPackage]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ecore::EPackage]
		public CrossReference getRefEPackageCrossReference_1_0() { return cRefEPackageCrossReference_1_0; }

		//ID
		public RuleCall getRefEPackageIDTerminalRuleCall_1_0_1() { return cRefEPackageIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class PackageOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarPackageParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cOpCHANGEPACKAGEParserRuleCall_1_0_0_0_0 = (RuleCall)cOpAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final RuleCall cOpADDPACKAGEParserRuleCall_1_0_0_1_0 = (RuleCall)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final RuleCall cOpDELETEPACKAGEParserRuleCall_1_0_0_2_0 = (RuleCall)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1_0_1 = (Alternatives)cGroup_1_0_1_0.eContents().get(1);
		private final Assignment cSettersAssignment_1_0_1_0_1_0 = (Assignment)cAlternatives_1_0_1_0_1.eContents().get(0);
		private final RuleCall cSettersPackageSettersParserRuleCall_1_0_1_0_1_0_0 = (RuleCall)cSettersAssignment_1_0_1_0_1_0.eContents().get(0);
		private final Assignment cClassesAssignment_1_0_1_0_1_1 = (Assignment)cAlternatives_1_0_1_0_1.eContents().get(1);
		private final RuleCall cClassesClassOpParserRuleCall_1_0_1_0_1_1_0 = (RuleCall)cClassesAssignment_1_0_1_0_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Assignment cComplexAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cComplexCallOperatorParserRuleCall_1_1_0 = (RuleCall)cComplexAssignment_1_1.eContents().get(0);
		
		////DELETEPACKAGE_DEF:"deletePackage(package "ref+=Package")";
		//
		//PackageOp:
		//	("package" var=Package "=") ((op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters |
		//	classes+=ClassOp)* "}" | ";") | complex+=CallOperator);
		public ParserRule getRule() { return rule; }

		//("package" var=Package "=") ((op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters |
		//classes+=ClassOp)* "}" | ";") | complex+=CallOperator)
		public Group getGroup() { return cGroup; }

		//"package" var=Package "="
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//var=Package
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Package
		public RuleCall getVarPackageParserRuleCall_0_1_0() { return cVarPackageParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";") |
		//complex+=CallOperator
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//(op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//op=CHANGEPACKAGE
		public Assignment getOpAssignment_1_0_0_0() { return cOpAssignment_1_0_0_0; }

		//CHANGEPACKAGE
		public RuleCall getOpCHANGEPACKAGEParserRuleCall_1_0_0_0_0() { return cOpCHANGEPACKAGEParserRuleCall_1_0_0_0_0; }

		//op=ADDPACKAGE
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//ADDPACKAGE
		public RuleCall getOpADDPACKAGEParserRuleCall_1_0_0_1_0() { return cOpADDPACKAGEParserRuleCall_1_0_0_1_0; }

		//op=DELETEPACKAGE
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//DELETEPACKAGE
		public RuleCall getOpDELETEPACKAGEParserRuleCall_1_0_0_2_0() { return cOpDELETEPACKAGEParserRuleCall_1_0_0_2_0; }

		//"{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";"
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//"{" (setters+=packageSetters | classes+=ClassOp)* "}"
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0_1_0_0() { return cLeftCurlyBracketKeyword_1_0_1_0_0; }

		//(setters+=packageSetters | classes+=ClassOp)*
		public Alternatives getAlternatives_1_0_1_0_1() { return cAlternatives_1_0_1_0_1; }

		//setters+=packageSetters
		public Assignment getSettersAssignment_1_0_1_0_1_0() { return cSettersAssignment_1_0_1_0_1_0; }

		//packageSetters
		public RuleCall getSettersPackageSettersParserRuleCall_1_0_1_0_1_0_0() { return cSettersPackageSettersParserRuleCall_1_0_1_0_1_0_0; }

		//classes+=ClassOp
		public Assignment getClassesAssignment_1_0_1_0_1_1() { return cClassesAssignment_1_0_1_0_1_1; }

		//ClassOp
		public RuleCall getClassesClassOpParserRuleCall_1_0_1_0_1_1_0() { return cClassesClassOpParserRuleCall_1_0_1_0_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_0_1_0_2() { return cRightCurlyBracketKeyword_1_0_1_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_0_1_1() { return cSemicolonKeyword_1_0_1_1; }

		//complex+=CallOperator
		public Assignment getComplexAssignment_1_1() { return cComplexAssignment_1_1; }

		//CallOperator
		public RuleCall getComplexCallOperatorParserRuleCall_1_1_0() { return cComplexCallOperatorParserRuleCall_1_1_0; }
	}

	public class OpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OpDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cOpdefAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final Alternatives cOpdefAlternatives_0_0_0_0 = (Alternatives)cOpdefAssignment_0_0_0.eContents().get(0);
		private final Keyword cOpdefChangePackageKeyword_0_0_0_0_0 = (Keyword)cOpdefAlternatives_0_0_0_0.eContents().get(0);
		private final Keyword cOpdefAddPackageKeyword_0_0_0_0_1 = (Keyword)cOpdefAlternatives_0_0_0_0.eContents().get(1);
		private final Keyword cOpdefDeletePackageKeyword_0_0_0_0_2 = (Keyword)cOpdefAlternatives_0_0_0_0.eContents().get(2);
		private final Group cGroup_0_0_1 = (Group)cGroup_0_0.eContents().get(1);
		private final Assignment cRefAssignment_0_0_1_0 = (Assignment)cGroup_0_0_1.eContents().get(0);
		private final RuleCall cRefPackageParserRuleCall_0_0_1_0_0 = (RuleCall)cRefAssignment_0_0_1_0.eContents().get(0);
		private final Keyword cPackageKeyword_0_0_1_1 = (Keyword)cGroup_0_0_1.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_0_1_2 = (Keyword)cGroup_0_0_1.eContents().get(2);
		private final Alternatives cAlternatives_0_0_2 = (Alternatives)cGroup_0_0.eContents().get(2);
		private final Group cGroup_0_0_2_0 = (Group)cAlternatives_0_0_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0_2_0_0 = (Keyword)cGroup_0_0_2_0.eContents().get(0);
		private final Assignment cSettersdefAssignment_0_0_2_0_1 = (Assignment)cGroup_0_0_2_0.eContents().get(1);
		private final RuleCall cSettersdefPackageSetters_defParserRuleCall_0_0_2_0_1_0 = (RuleCall)cSettersdefAssignment_0_0_2_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_0_2_0_2 = (Keyword)cGroup_0_0_2_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_0_0_2_1 = (Keyword)cAlternatives_0_0_2.eContents().get(1);
		private final Assignment cComplexAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cComplexComplexOperatorParserRuleCall_0_1_0 = (RuleCall)cComplexAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOpdefAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Alternatives cOpdefAlternatives_1_0_0 = (Alternatives)cOpdefAssignment_1_0.eContents().get(0);
		private final Keyword cOpdefChangeClassKeyword_1_0_0_0 = (Keyword)cOpdefAlternatives_1_0_0.eContents().get(0);
		private final Keyword cOpdefAddClassKeyword_1_0_0_1 = (Keyword)cOpdefAlternatives_1_0_0.eContents().get(1);
		private final Keyword cOpdefDeleteClassKeyword_1_0_0_2 = (Keyword)cOpdefAlternatives_1_0_0.eContents().get(2);
		private final Assignment cRefAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRefClassParserRuleCall_1_1_0 = (RuleCall)cRefAssignment_1_1.eContents().get(0);
		private final Keyword cClassKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Alternatives cAlternatives_1_4 = (Alternatives)cGroup_1.eContents().get(4);
		private final Group cGroup_1_4_0 = (Group)cAlternatives_1_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_4_0_0 = (Keyword)cGroup_1_4_0.eContents().get(0);
		private final Assignment cSettersdefAssignment_1_4_0_1 = (Assignment)cGroup_1_4_0.eContents().get(1);
		private final RuleCall cSettersdefClassSetters_defParserRuleCall_1_4_0_1_0 = (RuleCall)cSettersdefAssignment_1_4_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_4_0_2 = (Keyword)cGroup_1_4_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_4_1 = (Keyword)cAlternatives_1_4.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cAlternatives_2_0.eContents().get(0);
		private final Alternatives cAlternatives_2_0_0_0 = (Alternatives)cGroup_2_0_0.eContents().get(0);
		private final Group cGroup_2_0_0_0_0 = (Group)cAlternatives_2_0_0_0.eContents().get(0);
		private final Keyword cChangeAttributeKeyword_2_0_0_0_0_0 = (Keyword)cGroup_2_0_0_0_0.eContents().get(0);
		private final Assignment cRefAssignment_2_0_0_0_0_1 = (Assignment)cGroup_2_0_0_0_0.eContents().get(1);
		private final RuleCall cRefAttributeParserRuleCall_2_0_0_0_0_1_0 = (RuleCall)cRefAssignment_2_0_0_0_0_1.eContents().get(0);
		private final Keyword cAttributeKeyword_2_0_0_0_0_2 = (Keyword)cGroup_2_0_0_0_0.eContents().get(2);
		private final Group cGroup_2_0_0_0_1 = (Group)cAlternatives_2_0_0_0.eContents().get(1);
		private final Keyword cAddAttributeKeyword_2_0_0_0_1_0 = (Keyword)cGroup_2_0_0_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_0_0_0_1_1 = (Keyword)cGroup_2_0_0_0_1.eContents().get(1);
		private final Assignment cRefAssignment_2_0_0_0_1_2 = (Assignment)cGroup_2_0_0_0_1.eContents().get(2);
		private final RuleCall cRefAttributeParserRuleCall_2_0_0_0_1_2_0 = (RuleCall)cRefAssignment_2_0_0_0_1_2.eContents().get(0);
		private final Keyword cAttributeKeyword_2_0_0_0_1_3 = (Keyword)cGroup_2_0_0_0_1.eContents().get(3);
		private final Group cGroup_2_0_0_0_2 = (Group)cAlternatives_2_0_0_0.eContents().get(2);
		private final Keyword cDeleteAttributeKeyword_2_0_0_0_2_0 = (Keyword)cGroup_2_0_0_0_2.eContents().get(0);
		private final Assignment cRefAssignment_2_0_0_0_2_1 = (Assignment)cGroup_2_0_0_0_2.eContents().get(1);
		private final RuleCall cRefAttributeParserRuleCall_2_0_0_0_2_1_0 = (RuleCall)cRefAssignment_2_0_0_0_2_1.eContents().get(0);
		private final Keyword cAttributeKeyword_2_0_0_0_2_2 = (Keyword)cGroup_2_0_0_0_2.eContents().get(2);
		private final Group cGroup_2_0_0_0_3 = (Group)cAlternatives_2_0_0_0.eContents().get(3);
		private final Keyword cRenameAttributeKeyword_2_0_0_0_3_0 = (Keyword)cGroup_2_0_0_0_3.eContents().get(0);
		private final Assignment cRefAssignment_2_0_0_0_3_1 = (Assignment)cGroup_2_0_0_0_3.eContents().get(1);
		private final RuleCall cRefAttributeParserRuleCall_2_0_0_0_3_1_0 = (RuleCall)cRefAssignment_2_0_0_0_3_1.eContents().get(0);
		private final Keyword cAttributeKeyword_2_0_0_0_3_2 = (Keyword)cGroup_2_0_0_0_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_0_0_3_3 = (Keyword)cGroup_2_0_0_0_3.eContents().get(3);
		private final Assignment cStringAssignment_2_0_0_0_3_4 = (Assignment)cGroup_2_0_0_0_3.eContents().get(4);
		private final RuleCall cStringSTRINGTerminalRuleCall_2_0_0_0_3_4_0 = (RuleCall)cStringAssignment_2_0_0_0_3_4.eContents().get(0);
		private final Keyword cStringKeyword_2_0_0_0_3_5 = (Keyword)cGroup_2_0_0_0_3.eContents().get(5);
		private final Group cGroup_2_0_0_0_4 = (Group)cAlternatives_2_0_0_0.eContents().get(4);
		private final Keyword cMoveAttributeKeyword_2_0_0_0_4_0 = (Keyword)cGroup_2_0_0_0_4.eContents().get(0);
		private final Assignment cRefAssignment_2_0_0_0_4_1 = (Assignment)cGroup_2_0_0_0_4.eContents().get(1);
		private final RuleCall cRefAttributeParserRuleCall_2_0_0_0_4_1_0 = (RuleCall)cRefAssignment_2_0_0_0_4_1.eContents().get(0);
		private final Keyword cAttributeKeyword_2_0_0_0_4_2 = (Keyword)cGroup_2_0_0_0_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_0_0_4_3 = (Keyword)cGroup_2_0_0_0_4.eContents().get(3);
		private final Assignment cDstAssignment_2_0_0_0_4_4 = (Assignment)cGroup_2_0_0_0_4.eContents().get(4);
		private final RuleCall cDstClassParserRuleCall_2_0_0_0_4_4_0 = (RuleCall)cDstAssignment_2_0_0_0_4_4.eContents().get(0);
		private final Keyword cClassKeyword_2_0_0_0_4_5 = (Keyword)cGroup_2_0_0_0_4.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_2_0_0_1 = (Keyword)cGroup_2_0_0.eContents().get(1);
		private final Group cGroup_2_0_1 = (Group)cAlternatives_2_0.eContents().get(1);
		private final Alternatives cAlternatives_2_0_1_0 = (Alternatives)cGroup_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_1_0_0 = (Group)cAlternatives_2_0_1_0.eContents().get(0);
		private final Keyword cChangeReferenceKeyword_2_0_1_0_0_0 = (Keyword)cGroup_2_0_1_0_0.eContents().get(0);
		private final Assignment cRefAssignment_2_0_1_0_0_1 = (Assignment)cGroup_2_0_1_0_0.eContents().get(1);
		private final RuleCall cRefReferenceParserRuleCall_2_0_1_0_0_1_0 = (RuleCall)cRefAssignment_2_0_1_0_0_1.eContents().get(0);
		private final Keyword cReferenceKeyword_2_0_1_0_0_2 = (Keyword)cGroup_2_0_1_0_0.eContents().get(2);
		private final Group cGroup_2_0_1_0_1 = (Group)cAlternatives_2_0_1_0.eContents().get(1);
		private final Keyword cAddReferenceKeyword_2_0_1_0_1_0 = (Keyword)cGroup_2_0_1_0_1.eContents().get(0);
		private final Assignment cRefAssignment_2_0_1_0_1_1 = (Assignment)cGroup_2_0_1_0_1.eContents().get(1);
		private final RuleCall cRefReferenceParserRuleCall_2_0_1_0_1_1_0 = (RuleCall)cRefAssignment_2_0_1_0_1_1.eContents().get(0);
		private final Keyword cReferenceKeyword_2_0_1_0_1_2 = (Keyword)cGroup_2_0_1_0_1.eContents().get(2);
		private final Group cGroup_2_0_1_0_2 = (Group)cAlternatives_2_0_1_0.eContents().get(2);
		private final Keyword cDeleteReferenceKeyword_2_0_1_0_2_0 = (Keyword)cGroup_2_0_1_0_2.eContents().get(0);
		private final Assignment cRefAssignment_2_0_1_0_2_1 = (Assignment)cGroup_2_0_1_0_2.eContents().get(1);
		private final RuleCall cRefReferenceParserRuleCall_2_0_1_0_2_1_0 = (RuleCall)cRefAssignment_2_0_1_0_2_1.eContents().get(0);
		private final Keyword cReferenceKeyword_2_0_1_0_2_2 = (Keyword)cGroup_2_0_1_0_2.eContents().get(2);
		private final Group cGroup_2_0_1_0_3 = (Group)cAlternatives_2_0_1_0.eContents().get(3);
		private final Keyword cMoveReferenceKeyword_2_0_1_0_3_0 = (Keyword)cGroup_2_0_1_0_3.eContents().get(0);
		private final Assignment cRefAssignment_2_0_1_0_3_1 = (Assignment)cGroup_2_0_1_0_3.eContents().get(1);
		private final RuleCall cRefReferenceParserRuleCall_2_0_1_0_3_1_0 = (RuleCall)cRefAssignment_2_0_1_0_3_1.eContents().get(0);
		private final Keyword cReferenceKeyword_2_0_1_0_3_2 = (Keyword)cGroup_2_0_1_0_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_1_0_3_3 = (Keyword)cGroup_2_0_1_0_3.eContents().get(3);
		private final Assignment cDstAssignment_2_0_1_0_3_4 = (Assignment)cGroup_2_0_1_0_3.eContents().get(4);
		private final RuleCall cDstClassParserRuleCall_2_0_1_0_3_4_0 = (RuleCall)cDstAssignment_2_0_1_0_3_4.eContents().get(0);
		private final Keyword cClassKeyword_2_0_1_0_3_5 = (Keyword)cGroup_2_0_1_0_3.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_2_0_1_1 = (Keyword)cGroup_2_0_1.eContents().get(1);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_1_0 = (Keyword)cAlternatives_2_1.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cAlternatives_2_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cFeatureSettersdefAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cFeatureSettersdefFeatureSetters_defParserRuleCall_2_1_1_1_0 = (RuleCall)cFeatureSettersdefAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_1_2 = (Keyword)cGroup_2_1_1.eContents().get(2);
		
		//OpDef:
		//	(opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
		//	settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//	"}" | ";") | complex+=ComplexOperator) //|complex+=ComplexOperator
		//
		//	| opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
		//
		//	"}" | ";") | (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" |
		//	"deleteAttribute(" ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING
		//	":string" | "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference("
		//	ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference
		//	":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
		//	FeatureSettersdef+=featureSetters_def* "}");
		public ParserRule getRule() { return rule; }

		//(opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
		//settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//"}" | ";") | complex+=ComplexOperator) //|complex+=ComplexOperator
		//
		//| opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
		//
		//"}" | ";") | (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" |
		//"deleteAttribute(" ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING
		//":string" | "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
		//":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
		//"moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
		//FeatureSettersdef+=featureSetters_def* "}")
		public Alternatives getAlternatives() { return cAlternatives; }

		//opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
		//settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//"}" | ";") | complex+=ComplexOperator
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
		//settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//"}" | ";")
		public Group getGroup_0_0() { return cGroup_0_0; }

		//opdef=("changePackage(" | "addPackage(" | "deletePackage(")
		public Assignment getOpdefAssignment_0_0_0() { return cOpdefAssignment_0_0_0; }

		//"changePackage(" | "addPackage(" | "deletePackage("
		public Alternatives getOpdefAlternatives_0_0_0_0() { return cOpdefAlternatives_0_0_0_0; }

		//"changePackage("
		public Keyword getOpdefChangePackageKeyword_0_0_0_0_0() { return cOpdefChangePackageKeyword_0_0_0_0_0; }

		//"addPackage("
		public Keyword getOpdefAddPackageKeyword_0_0_0_0_1() { return cOpdefAddPackageKeyword_0_0_0_0_1; }

		//"deletePackage("
		public Keyword getOpdefDeletePackageKeyword_0_0_0_0_2() { return cOpdefDeletePackageKeyword_0_0_0_0_2; }

		//ref=Package ":package" ")"
		public Group getGroup_0_0_1() { return cGroup_0_0_1; }

		//ref=Package
		public Assignment getRefAssignment_0_0_1_0() { return cRefAssignment_0_0_1_0; }

		//Package
		public RuleCall getRefPackageParserRuleCall_0_0_1_0_0() { return cRefPackageParserRuleCall_0_0_1_0_0; }

		//":package"
		public Keyword getPackageKeyword_0_0_1_1() { return cPackageKeyword_0_0_1_1; }

		//")"
		public Keyword getRightParenthesisKeyword_0_0_1_2() { return cRightParenthesisKeyword_0_0_1_2; }

		//"{" settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//"}" | ";"
		public Alternatives getAlternatives_0_0_2() { return cAlternatives_0_0_2; }

		//"{" settersdef+=packageSetters_def* //|classes+=ClassOp_def
		//
		//"}"
		public Group getGroup_0_0_2_0() { return cGroup_0_0_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0_2_0_0() { return cLeftCurlyBracketKeyword_0_0_2_0_0; }

		//settersdef+=packageSetters_def*
		public Assignment getSettersdefAssignment_0_0_2_0_1() { return cSettersdefAssignment_0_0_2_0_1; }

		//packageSetters_def
		public RuleCall getSettersdefPackageSetters_defParserRuleCall_0_0_2_0_1_0() { return cSettersdefPackageSetters_defParserRuleCall_0_0_2_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_0_0_2_0_2() { return cRightCurlyBracketKeyword_0_0_2_0_2; }

		//";"
		public Keyword getSemicolonKeyword_0_0_2_1() { return cSemicolonKeyword_0_0_2_1; }

		//complex+=ComplexOperator
		public Assignment getComplexAssignment_0_1() { return cComplexAssignment_0_1; }

		//ComplexOperator
		public RuleCall getComplexComplexOperatorParserRuleCall_0_1_0() { return cComplexComplexOperatorParserRuleCall_0_1_0; }

		//opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
		//
		//"}" | ";")
		public Group getGroup_1() { return cGroup_1; }

		//opdef=("changeClass(" | "addClass(" | "deleteClass(")
		public Assignment getOpdefAssignment_1_0() { return cOpdefAssignment_1_0; }

		//"changeClass(" | "addClass(" | "deleteClass("
		public Alternatives getOpdefAlternatives_1_0_0() { return cOpdefAlternatives_1_0_0; }

		//"changeClass("
		public Keyword getOpdefChangeClassKeyword_1_0_0_0() { return cOpdefChangeClassKeyword_1_0_0_0; }

		//"addClass("
		public Keyword getOpdefAddClassKeyword_1_0_0_1() { return cOpdefAddClassKeyword_1_0_0_1; }

		//"deleteClass("
		public Keyword getOpdefDeleteClassKeyword_1_0_0_2() { return cOpdefDeleteClassKeyword_1_0_0_2; }

		//ref=Class
		public Assignment getRefAssignment_1_1() { return cRefAssignment_1_1; }

		//Class
		public RuleCall getRefClassParserRuleCall_1_1_0() { return cRefClassParserRuleCall_1_1_0; }

		//":class"
		public Keyword getClassKeyword_1_2() { return cClassKeyword_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//"{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
		//
		//"}" | ";"
		public Alternatives getAlternatives_1_4() { return cAlternatives_1_4; }

		//"{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
		//
		//"}"
		public Group getGroup_1_4_0() { return cGroup_1_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_4_0_0() { return cLeftCurlyBracketKeyword_1_4_0_0; }

		//settersdef+=classSetters_def*
		public Assignment getSettersdefAssignment_1_4_0_1() { return cSettersdefAssignment_1_4_0_1; }

		//classSetters_def
		public RuleCall getSettersdefClassSetters_defParserRuleCall_1_4_0_1_0() { return cSettersdefClassSetters_defParserRuleCall_1_4_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_4_0_2() { return cRightCurlyBracketKeyword_1_4_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_4_1() { return cSemicolonKeyword_1_4_1; }

		//(("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
		//ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
		//"moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
		//":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
		//"moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
		//FeatureSettersdef+=featureSetters_def* "}")
		public Group getGroup_2() { return cGroup_2; }

		//("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
		//ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
		//"moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
		//":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
		//"moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")"
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }

		//("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
		//ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
		//"moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")"
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }

		//"changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
		//ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
		//"moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class"
		public Alternatives getAlternatives_2_0_0_0() { return cAlternatives_2_0_0_0; }

		//"changeAttribute(" ref=Attribute ":attribute"
		public Group getGroup_2_0_0_0_0() { return cGroup_2_0_0_0_0; }

		//"changeAttribute("
		public Keyword getChangeAttributeKeyword_2_0_0_0_0_0() { return cChangeAttributeKeyword_2_0_0_0_0_0; }

		//ref=Attribute
		public Assignment getRefAssignment_2_0_0_0_0_1() { return cRefAssignment_2_0_0_0_0_1; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_2_0_0_0_0_1_0() { return cRefAttributeParserRuleCall_2_0_0_0_0_1_0; }

		//":attribute"
		public Keyword getAttributeKeyword_2_0_0_0_0_2() { return cAttributeKeyword_2_0_0_0_0_2; }

		//"addAttribute" "(" ref=Attribute ":attribute"
		public Group getGroup_2_0_0_0_1() { return cGroup_2_0_0_0_1; }

		//"addAttribute"
		public Keyword getAddAttributeKeyword_2_0_0_0_1_0() { return cAddAttributeKeyword_2_0_0_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0_0_0_1_1() { return cLeftParenthesisKeyword_2_0_0_0_1_1; }

		//ref=Attribute
		public Assignment getRefAssignment_2_0_0_0_1_2() { return cRefAssignment_2_0_0_0_1_2; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_2_0_0_0_1_2_0() { return cRefAttributeParserRuleCall_2_0_0_0_1_2_0; }

		//":attribute"
		public Keyword getAttributeKeyword_2_0_0_0_1_3() { return cAttributeKeyword_2_0_0_0_1_3; }

		//"deleteAttribute(" ref=Attribute ":attribute"
		public Group getGroup_2_0_0_0_2() { return cGroup_2_0_0_0_2; }

		//"deleteAttribute("
		public Keyword getDeleteAttributeKeyword_2_0_0_0_2_0() { return cDeleteAttributeKeyword_2_0_0_0_2_0; }

		//ref=Attribute
		public Assignment getRefAssignment_2_0_0_0_2_1() { return cRefAssignment_2_0_0_0_2_1; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_2_0_0_0_2_1_0() { return cRefAttributeParserRuleCall_2_0_0_0_2_1_0; }

		//":attribute"
		public Keyword getAttributeKeyword_2_0_0_0_2_2() { return cAttributeKeyword_2_0_0_0_2_2; }

		//"renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string"
		public Group getGroup_2_0_0_0_3() { return cGroup_2_0_0_0_3; }

		//"renameAttribute("
		public Keyword getRenameAttributeKeyword_2_0_0_0_3_0() { return cRenameAttributeKeyword_2_0_0_0_3_0; }

		//ref=Attribute
		public Assignment getRefAssignment_2_0_0_0_3_1() { return cRefAssignment_2_0_0_0_3_1; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_2_0_0_0_3_1_0() { return cRefAttributeParserRuleCall_2_0_0_0_3_1_0; }

		//":attribute"
		public Keyword getAttributeKeyword_2_0_0_0_3_2() { return cAttributeKeyword_2_0_0_0_3_2; }

		//","
		public Keyword getCommaKeyword_2_0_0_0_3_3() { return cCommaKeyword_2_0_0_0_3_3; }

		//string=STRING
		public Assignment getStringAssignment_2_0_0_0_3_4() { return cStringAssignment_2_0_0_0_3_4; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_2_0_0_0_3_4_0() { return cStringSTRINGTerminalRuleCall_2_0_0_0_3_4_0; }

		//":string"
		public Keyword getStringKeyword_2_0_0_0_3_5() { return cStringKeyword_2_0_0_0_3_5; }

		//"moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class"
		public Group getGroup_2_0_0_0_4() { return cGroup_2_0_0_0_4; }

		//"moveAttribute("
		public Keyword getMoveAttributeKeyword_2_0_0_0_4_0() { return cMoveAttributeKeyword_2_0_0_0_4_0; }

		//ref=Attribute
		public Assignment getRefAssignment_2_0_0_0_4_1() { return cRefAssignment_2_0_0_0_4_1; }

		//Attribute
		public RuleCall getRefAttributeParserRuleCall_2_0_0_0_4_1_0() { return cRefAttributeParserRuleCall_2_0_0_0_4_1_0; }

		//":attribute"
		public Keyword getAttributeKeyword_2_0_0_0_4_2() { return cAttributeKeyword_2_0_0_0_4_2; }

		//","
		public Keyword getCommaKeyword_2_0_0_0_4_3() { return cCommaKeyword_2_0_0_0_4_3; }

		//dst=Class
		public Assignment getDstAssignment_2_0_0_0_4_4() { return cDstAssignment_2_0_0_0_4_4; }

		//Class
		public RuleCall getDstClassParserRuleCall_2_0_0_0_4_4_0() { return cDstClassParserRuleCall_2_0_0_0_4_4_0; }

		//":class"
		public Keyword getClassKeyword_2_0_0_0_4_5() { return cClassKeyword_2_0_0_0_4_5; }

		//")"
		public Keyword getRightParenthesisKeyword_2_0_0_1() { return cRightParenthesisKeyword_2_0_0_1; }

		//("changeReference(" ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference("
		//ref=Reference ":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")"
		public Group getGroup_2_0_1() { return cGroup_2_0_1; }

		//"changeReference(" ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference("
		//ref=Reference ":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class"
		public Alternatives getAlternatives_2_0_1_0() { return cAlternatives_2_0_1_0; }

		//"changeReference(" ref=Reference ":reference"
		public Group getGroup_2_0_1_0_0() { return cGroup_2_0_1_0_0; }

		//"changeReference("
		public Keyword getChangeReferenceKeyword_2_0_1_0_0_0() { return cChangeReferenceKeyword_2_0_1_0_0_0; }

		//ref=Reference
		public Assignment getRefAssignment_2_0_1_0_0_1() { return cRefAssignment_2_0_1_0_0_1; }

		//Reference
		public RuleCall getRefReferenceParserRuleCall_2_0_1_0_0_1_0() { return cRefReferenceParserRuleCall_2_0_1_0_0_1_0; }

		//":reference"
		public Keyword getReferenceKeyword_2_0_1_0_0_2() { return cReferenceKeyword_2_0_1_0_0_2; }

		//"addReference(" ref=Reference ":reference"
		public Group getGroup_2_0_1_0_1() { return cGroup_2_0_1_0_1; }

		//"addReference("
		public Keyword getAddReferenceKeyword_2_0_1_0_1_0() { return cAddReferenceKeyword_2_0_1_0_1_0; }

		//ref=Reference
		public Assignment getRefAssignment_2_0_1_0_1_1() { return cRefAssignment_2_0_1_0_1_1; }

		//Reference
		public RuleCall getRefReferenceParserRuleCall_2_0_1_0_1_1_0() { return cRefReferenceParserRuleCall_2_0_1_0_1_1_0; }

		//":reference"
		public Keyword getReferenceKeyword_2_0_1_0_1_2() { return cReferenceKeyword_2_0_1_0_1_2; }

		//"deleteReference(" ref=Reference ":reference"
		public Group getGroup_2_0_1_0_2() { return cGroup_2_0_1_0_2; }

		//"deleteReference("
		public Keyword getDeleteReferenceKeyword_2_0_1_0_2_0() { return cDeleteReferenceKeyword_2_0_1_0_2_0; }

		//ref=Reference
		public Assignment getRefAssignment_2_0_1_0_2_1() { return cRefAssignment_2_0_1_0_2_1; }

		//Reference
		public RuleCall getRefReferenceParserRuleCall_2_0_1_0_2_1_0() { return cRefReferenceParserRuleCall_2_0_1_0_2_1_0; }

		//":reference"
		public Keyword getReferenceKeyword_2_0_1_0_2_2() { return cReferenceKeyword_2_0_1_0_2_2; }

		//"moveReference(" ref=Reference ":reference" "," dst=Class ":class"
		public Group getGroup_2_0_1_0_3() { return cGroup_2_0_1_0_3; }

		//"moveReference("
		public Keyword getMoveReferenceKeyword_2_0_1_0_3_0() { return cMoveReferenceKeyword_2_0_1_0_3_0; }

		//ref=Reference
		public Assignment getRefAssignment_2_0_1_0_3_1() { return cRefAssignment_2_0_1_0_3_1; }

		//Reference
		public RuleCall getRefReferenceParserRuleCall_2_0_1_0_3_1_0() { return cRefReferenceParserRuleCall_2_0_1_0_3_1_0; }

		//":reference"
		public Keyword getReferenceKeyword_2_0_1_0_3_2() { return cReferenceKeyword_2_0_1_0_3_2; }

		//","
		public Keyword getCommaKeyword_2_0_1_0_3_3() { return cCommaKeyword_2_0_1_0_3_3; }

		//dst=Class
		public Assignment getDstAssignment_2_0_1_0_3_4() { return cDstAssignment_2_0_1_0_3_4; }

		//Class
		public RuleCall getDstClassParserRuleCall_2_0_1_0_3_4_0() { return cDstClassParserRuleCall_2_0_1_0_3_4_0; }

		//":class"
		public Keyword getClassKeyword_2_0_1_0_3_5() { return cClassKeyword_2_0_1_0_3_5; }

		//")"
		public Keyword getRightParenthesisKeyword_2_0_1_1() { return cRightParenthesisKeyword_2_0_1_1; }

		//";" | "{" FeatureSettersdef+=featureSetters_def* "}"
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//";"
		public Keyword getSemicolonKeyword_2_1_0() { return cSemicolonKeyword_2_1_0; }

		//"{" FeatureSettersdef+=featureSetters_def* "}"
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_1_0() { return cLeftCurlyBracketKeyword_2_1_1_0; }

		//FeatureSettersdef+=featureSetters_def*
		public Assignment getFeatureSettersdefAssignment_2_1_1_1() { return cFeatureSettersdefAssignment_2_1_1_1; }

		//featureSetters_def
		public RuleCall getFeatureSettersdefFeatureSetters_defParserRuleCall_2_1_1_1_0() { return cFeatureSettersdefFeatureSetters_defParserRuleCall_2_1_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_1_2() { return cRightCurlyBracketKeyword_2_1_1_2; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Package returns ecore::EPackage: //'(' 
		//
		//	{Package} name=ID;
		public ParserRule getRule() { return rule; }

		////'(' 
		//
		//{Package} name=ID
		public Group getGroup() { return cGroup; }

		////'(' 
		//
		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class CHANGECLASSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CHANGECLASS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpChangeClassKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefEClassCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefEClassIDTerminalRuleCall_1_0_1 = (RuleCall)cRefEClassCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		///////////////////class operations/////////////////
		//
		////"{"
		//
		////(('setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');' )? &
		//
		//// ("setAbstract("abstract=EBoolean");")? )       
		//
		////( (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp) ( "," (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp))* )*
		//
		////    
		//
		////"}"
		//
		//CHANGECLASS:
		//	op="changeClass(" ref=[ecore::EClass] ")";
		public ParserRule getRule() { return rule; }

		//op="changeClass(" ref=[ecore::EClass] ")"
		public Group getGroup() { return cGroup; }

		//op="changeClass("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"changeClass("
		public Keyword getOpChangeClassKeyword_0_0() { return cOpChangeClassKeyword_0_0; }

		//ref=[ecore::EClass]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ecore::EClass]
		public CrossReference getRefEClassCrossReference_1_0() { return cRefEClassCrossReference_1_0; }

		//ID
		public RuleCall getRefEClassIDTerminalRuleCall_1_0_1() { return cRefEClassIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class ADDCLASSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ADDCLASS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpAddClassKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cNewAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNewSTRINGTerminalRuleCall_1_0 = (RuleCall)cNewAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ADDCLASS:
		//	op="addClass(" new=STRING ")";
		public ParserRule getRule() { return rule; }

		//op="addClass(" new=STRING ")"
		public Group getGroup() { return cGroup; }

		//op="addClass("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"addClass("
		public Keyword getOpAddClassKeyword_0_0() { return cOpAddClassKeyword_0_0; }

		//new=STRING
		public Assignment getNewAssignment_1() { return cNewAssignment_1; }

		//STRING
		public RuleCall getNewSTRINGTerminalRuleCall_1_0() { return cNewSTRINGTerminalRuleCall_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class DELETECLASSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DELETECLASS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOpDeleteClassKeyword_0_0 = (Keyword)cOpAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefEClassCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefEClassIDTerminalRuleCall_1_0_1 = (RuleCall)cRefEClassCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DELETECLASS:
		//	op="deleteClass(" ref=[ecore::EClass] ")";
		public ParserRule getRule() { return rule; }

		//op="deleteClass(" ref=[ecore::EClass] ")"
		public Group getGroup() { return cGroup; }

		//op="deleteClass("
		public Assignment getOpAssignment_0() { return cOpAssignment_0; }

		//"deleteClass("
		public Keyword getOpDeleteClassKeyword_0_0() { return cOpDeleteClassKeyword_0_0; }

		//ref=[ecore::EClass]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ecore::EClass]
		public CrossReference getRefEClassCrossReference_1_0() { return cRefEClassCrossReference_1_0; }

		//ID
		public RuleCall getRefEClassIDTerminalRuleCall_1_0_1() { return cRefEClassIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class ClassSetterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "classSetter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Assignment cValueRefAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final CrossReference cValueRefEObjectCrossReference_3_1_0 = (CrossReference)cValueRefAssignment_3_1.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_3_1_0_1 = (RuleCall)cValueRefEObjectCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueRefAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cValueRefEObjectCrossReference_4_1_0 = (CrossReference)cValueRefAssignment_4_1.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_4_1_0_1 = (RuleCall)cValueRefEObjectCrossReference_4_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////classSetters:set=setAbstract|set=setSuperTypes|set=setClassName;
		//
		//classSetter:
		//	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
		//	valueRef+=[ecore::EObject])* ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
		//valueRef+=[ecore::EObject])* ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2() { return cColonEqualsSignKeyword_2; }

		//value=STRING | valueRef+=[ecore::EObject]
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//value=STRING
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0_0() { return cValueSTRINGTerminalRuleCall_3_0_0; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_3_1() { return cValueRefAssignment_3_1; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_3_1_0() { return cValueRefEObjectCrossReference_3_1_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_3_1_0_1() { return cValueRefEObjectIDTerminalRuleCall_3_1_0_1; }

		//("," valueRef+=[ecore::EObject])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_4_1() { return cValueRefAssignment_4_1; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_4_1_0() { return cValueRefEObjectCrossReference_4_1_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_4_1_0_1() { return cValueRefEObjectIDTerminalRuleCall_4_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ClassSetters_defElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "classSetters_def");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParParameterParserRuleCall_3_0 = (RuleCall)cParAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParParameterParserRuleCall_4_1_0 = (RuleCall)cParAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//classSetters_def:
		//	"set" metafeature=[ecore::EStructuralFeature] ":=" par+=Parameter ("," par+=Parameter)* ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] ":=" par+=Parameter ("," par+=Parameter)* ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2() { return cColonEqualsSignKeyword_2; }

		//par+=Parameter
		public Assignment getParAssignment_3() { return cParAssignment_3; }

		//Parameter
		public RuleCall getParParameterParserRuleCall_3_0() { return cParParameterParserRuleCall_3_0; }

		//("," par+=Parameter)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//par+=Parameter
		public Assignment getParAssignment_4_1() { return cParAssignment_4_1; }

		//Parameter
		public RuleCall getParParameterParserRuleCall_4_1_0() { return cParParameterParserRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ClassOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarClassParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cOpCHANGECLASSParserRuleCall_1_0_0_0_0 = (RuleCall)cOpAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final RuleCall cOpADDCLASSParserRuleCall_1_0_0_1_0 = (RuleCall)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final RuleCall cOpDELETECLASSParserRuleCall_1_0_0_2_0 = (RuleCall)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1_0_1 = (Alternatives)cGroup_1_0_1_0.eContents().get(1);
		private final Assignment cSettersAssignment_1_0_1_0_1_0 = (Assignment)cAlternatives_1_0_1_0_1.eContents().get(0);
		private final RuleCall cSettersClassSetterParserRuleCall_1_0_1_0_1_0_0 = (RuleCall)cSettersAssignment_1_0_1_0_1_0.eContents().get(0);
		private final Assignment cAttributesAssignment_1_0_1_0_1_1 = (Assignment)cAlternatives_1_0_1_0_1.eContents().get(1);
		private final RuleCall cAttributesAttributeOpParserRuleCall_1_0_1_0_1_1_0 = (RuleCall)cAttributesAssignment_1_0_1_0_1_1.eContents().get(0);
		private final Assignment cReferencesAssignment_1_0_1_0_1_2 = (Assignment)cAlternatives_1_0_1_0_1.eContents().get(2);
		private final RuleCall cReferencesReferenceOpParserRuleCall_1_0_1_0_1_2_0 = (RuleCall)cReferencesAssignment_1_0_1_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Assignment cComplexAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cComplexCallOperatorParserRuleCall_1_1_0 = (RuleCall)cComplexAssignment_1_1.eContents().get(0);
		
		////(type="STRING" par=ID| typeEcore+=[ecore::EDataType] par=ID) ( "," typeEcore+=[ecore::EDataType] par=ID)*";";
		//
		////classSetters_def:setAbstract_def|setSuperTypes_def|setClassName_def;
		//
		////setSuperTypes:op='setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');';
		//
		////setSuperTypes_def:op='setSuperTypes' '(' 'list' eSuperTypes+=ID  ');';
		//
		////
		//
		////
		//
		////setAbstract :op="setAbstract("abstract=EBoolean");" ; 
		//
		//// setAbstract_def:op="setAbstract(" "boolean" abstract=ID");" ;
		//
		//// 
		//
		////setClassName :op="setName("name=STRING");";
		//
		////setClassName_def:op="setName(" "string" name=ID");";
		//
		//ClassOp:
		//	("class" var=Class "=") ((op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter |
		//	attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";") //changed from change_op
		//
		//	| complex+=CallOperator);
		public ParserRule getRule() { return rule; }

		//("class" var=Class "=") ((op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter |
		//attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";") //changed from change_op
		//
		//| complex+=CallOperator)
		public Group getGroup() { return cGroup; }

		//"class" var=Class "="
		public Group getGroup_0() { return cGroup_0; }

		//"class"
		public Keyword getClassKeyword_0_0() { return cClassKeyword_0_0; }

		//var=Class
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Class
		public RuleCall getVarClassParserRuleCall_0_1_0() { return cVarClassParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter | attributes+=AttributeOp |
		//references+=ReferenceOp)* "}" | ";") //changed from change_op
		//
		//| complex+=CallOperator
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//(op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter | attributes+=AttributeOp |
		//references+=ReferenceOp)* "}" | ";")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//op=CHANGECLASS
		public Assignment getOpAssignment_1_0_0_0() { return cOpAssignment_1_0_0_0; }

		//CHANGECLASS
		public RuleCall getOpCHANGECLASSParserRuleCall_1_0_0_0_0() { return cOpCHANGECLASSParserRuleCall_1_0_0_0_0; }

		//op=ADDCLASS
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//ADDCLASS
		public RuleCall getOpADDCLASSParserRuleCall_1_0_0_1_0() { return cOpADDCLASSParserRuleCall_1_0_0_1_0; }

		//op=DELETECLASS
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//DELETECLASS
		public RuleCall getOpDELETECLASSParserRuleCall_1_0_0_2_0() { return cOpDELETECLASSParserRuleCall_1_0_0_2_0; }

		//"{" (setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";"
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//"{" (setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)* "}"
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0_1_0_0() { return cLeftCurlyBracketKeyword_1_0_1_0_0; }

		//(setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)*
		public Alternatives getAlternatives_1_0_1_0_1() { return cAlternatives_1_0_1_0_1; }

		//setters+=classSetter
		public Assignment getSettersAssignment_1_0_1_0_1_0() { return cSettersAssignment_1_0_1_0_1_0; }

		//classSetter
		public RuleCall getSettersClassSetterParserRuleCall_1_0_1_0_1_0_0() { return cSettersClassSetterParserRuleCall_1_0_1_0_1_0_0; }

		//attributes+=AttributeOp
		public Assignment getAttributesAssignment_1_0_1_0_1_1() { return cAttributesAssignment_1_0_1_0_1_1; }

		//AttributeOp
		public RuleCall getAttributesAttributeOpParserRuleCall_1_0_1_0_1_1_0() { return cAttributesAttributeOpParserRuleCall_1_0_1_0_1_1_0; }

		//references+=ReferenceOp
		public Assignment getReferencesAssignment_1_0_1_0_1_2() { return cReferencesAssignment_1_0_1_0_1_2; }

		//ReferenceOp
		public RuleCall getReferencesReferenceOpParserRuleCall_1_0_1_0_1_2_0() { return cReferencesReferenceOpParserRuleCall_1_0_1_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_0_1_0_2() { return cRightCurlyBracketKeyword_1_0_1_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_0_1_1() { return cSemicolonKeyword_1_0_1_1; }

		//complex+=CallOperator
		public Assignment getComplexAssignment_1_1() { return cComplexAssignment_1_1; }

		//CallOperator
		public RuleCall getComplexCallOperatorParserRuleCall_1_1_0() { return cComplexCallOperatorParserRuleCall_1_1_0; }
	}

	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Class returns ecore::EClass:
		//	{Class} name=ID;
		public ParserRule getRule() { return rule; }

		//{Class} name=ID
		public Group getGroup() { return cGroup; }

		//{Class}
		public Action getClassAction_0() { return cClassAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Classifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassifierAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Classifier returns ecore::EClassifier:
		//	{Classifier} name=ID;
		public ParserRule getRule() { return rule; }

		//{Classifier} name=ID
		public Group getGroup() { return cGroup; }

		//{Classifier}
		public Action getClassifierAction_0() { return cClassifierAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EStructuralFeatureOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eStructuralFeatureOp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeOpParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceOpParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///////////////////////eStructuralFeature///////////
		//
		//eStructuralFeatureOp:
		//	AttributeOp | ReferenceOp;
		public ParserRule getRule() { return rule; }

		//AttributeOp | ReferenceOp
		public Alternatives getAlternatives() { return cAlternatives; }

		//AttributeOp
		public RuleCall getAttributeOpParserRuleCall_0() { return cAttributeOpParserRuleCall_0; }

		//ReferenceOp
		public RuleCall getReferenceOpParserRuleCall_1() { return cReferenceOpParserRuleCall_1; }
	}

	public class CHANGEATTRIBUTEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CHANGEATTRIBUTE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAttrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefAttrEAttributeCrossReference_1_0 = (CrossReference)cRefAttrAssignment_1.eContents().get(0);
		private final RuleCall cRefAttrEAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cRefAttrEAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CHANGEATTRIBUTE:
		//	"changeAttribute(" refAttr=[ecore::EAttribute] ")";
		public ParserRule getRule() { return rule; }

		//"changeAttribute(" refAttr=[ecore::EAttribute] ")"
		public Group getGroup() { return cGroup; }

		//"changeAttribute("
		public Keyword getChangeAttributeKeyword_0() { return cChangeAttributeKeyword_0; }

		//refAttr=[ecore::EAttribute]
		public Assignment getRefAttrAssignment_1() { return cRefAttrAssignment_1; }

		//[ecore::EAttribute]
		public CrossReference getRefAttrEAttributeCrossReference_1_0() { return cRefAttrEAttributeCrossReference_1_0; }

		//ID
		public RuleCall getRefAttrEAttributeIDTerminalRuleCall_1_0_1() { return cRefAttrEAttributeIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class ADDATTRIBUTEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ADDATTRIBUTE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewEStringParserRuleCall_2_0 = (RuleCall)cNewAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ADDATTRIBUTE:
		//	"addAttribute" "(" new=EString ")";
		public ParserRule getRule() { return rule; }

		//"addAttribute" "(" new=EString ")"
		public Group getGroup() { return cGroup; }

		//"addAttribute"
		public Keyword getAddAttributeKeyword_0() { return cAddAttributeKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//new=EString
		public Assignment getNewAssignment_2() { return cNewAssignment_2; }

		//EString
		public RuleCall getNewEStringParserRuleCall_2_0() { return cNewEStringParserRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class DELETEATTRIBUTEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DELETEATTRIBUTE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAttrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefAttrEAttributeCrossReference_1_0 = (CrossReference)cRefAttrAssignment_1.eContents().get(0);
		private final RuleCall cRefAttrEAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cRefAttrEAttributeCrossReference_1_0.eContents().get(1);
		
		//DELETEATTRIBUTE:
		//	"deleteAttribute(" refAttr=[ecore::EAttribute];
		public ParserRule getRule() { return rule; }

		//"deleteAttribute(" refAttr=[ecore::EAttribute]
		public Group getGroup() { return cGroup; }

		//"deleteAttribute("
		public Keyword getDeleteAttributeKeyword_0() { return cDeleteAttributeKeyword_0; }

		//refAttr=[ecore::EAttribute]
		public Assignment getRefAttrAssignment_1() { return cRefAttrAssignment_1; }

		//[ecore::EAttribute]
		public CrossReference getRefAttrEAttributeCrossReference_1_0() { return cRefAttrEAttributeCrossReference_1_0; }

		//ID
		public RuleCall getRefAttrEAttributeIDTerminalRuleCall_1_0_1() { return cRefAttrEAttributeIDTerminalRuleCall_1_0_1; }
	}

	public class RENAMEATTRIBUTEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RENAMEATTRIBUTE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRenameAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAttrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefAttrEAttributeCrossReference_1_0 = (CrossReference)cRefAttrAssignment_1.eContents().get(0);
		private final RuleCall cRefAttrEAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cRefAttrEAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNewNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNewNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNewNameAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RENAMEATTRIBUTE:
		//	"renameAttribute(" refAttr=[ecore::EAttribute] "," newName=STRING ")";
		public ParserRule getRule() { return rule; }

		//"renameAttribute(" refAttr=[ecore::EAttribute] "," newName=STRING ")"
		public Group getGroup() { return cGroup; }

		//"renameAttribute("
		public Keyword getRenameAttributeKeyword_0() { return cRenameAttributeKeyword_0; }

		//refAttr=[ecore::EAttribute]
		public Assignment getRefAttrAssignment_1() { return cRefAttrAssignment_1; }

		//[ecore::EAttribute]
		public CrossReference getRefAttrEAttributeCrossReference_1_0() { return cRefAttrEAttributeCrossReference_1_0; }

		//ID
		public RuleCall getRefAttrEAttributeIDTerminalRuleCall_1_0_1() { return cRefAttrEAttributeIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//newName=STRING
		public Assignment getNewNameAssignment_3() { return cNewNameAssignment_3; }

		//STRING
		public RuleCall getNewNameSTRINGTerminalRuleCall_3_0() { return cNewNameSTRINGTerminalRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class MOVEATTRIBUTEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MOVEATTRIBUTE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMoveAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAttrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefAttrEAttributeCrossReference_1_0 = (CrossReference)cRefAttrAssignment_1.eContents().get(0);
		private final RuleCall cRefAttrEAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cRefAttrEAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDstAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDstEClassCrossReference_3_0 = (CrossReference)cDstAssignment_3.eContents().get(0);
		private final RuleCall cDstEClassIDTerminalRuleCall_3_0_1 = (RuleCall)cDstEClassCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MOVEATTRIBUTE:
		//	"moveAttribute(" refAttr=[ecore::EAttribute] "," dst=[ecore::EClass] ")";
		public ParserRule getRule() { return rule; }

		//"moveAttribute(" refAttr=[ecore::EAttribute] "," dst=[ecore::EClass] ")"
		public Group getGroup() { return cGroup; }

		//"moveAttribute("
		public Keyword getMoveAttributeKeyword_0() { return cMoveAttributeKeyword_0; }

		//refAttr=[ecore::EAttribute]
		public Assignment getRefAttrAssignment_1() { return cRefAttrAssignment_1; }

		//[ecore::EAttribute]
		public CrossReference getRefAttrEAttributeCrossReference_1_0() { return cRefAttrEAttributeCrossReference_1_0; }

		//ID
		public RuleCall getRefAttrEAttributeIDTerminalRuleCall_1_0_1() { return cRefAttrEAttributeIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//dst=[ecore::EClass]
		public Assignment getDstAssignment_3() { return cDstAssignment_3; }

		//[ecore::EClass]
		public CrossReference getDstEClassCrossReference_3_0() { return cDstEClassCrossReference_3_0; }

		//ID
		public RuleCall getDstEClassIDTerminalRuleCall_3_0_1() { return cDstEClassIDTerminalRuleCall_3_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class FeatureSettersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureSetters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetafeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMetafeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cMetafeatureAssignment_1.eContents().get(0);
		private final RuleCall cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cMetafeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueEStringAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueEStringSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cValueEStringAssignment_3_0.eContents().get(0);
		private final Assignment cValueEIntAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cValueEIntEIntParserRuleCall_3_1_0 = (RuleCall)cValueEIntAssignment_3_1.eContents().get(0);
		private final Assignment cValueEBoolAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cValueEBoolEBooleanParserRuleCall_3_2_0 = (RuleCall)cValueEBoolAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cAlternatives_3.eContents().get(3);
		private final Assignment cValueRefAssignment_3_3_0 = (Assignment)cGroup_3_3.eContents().get(0);
		private final CrossReference cValueRefEObjectCrossReference_3_3_0_0 = (CrossReference)cValueRefAssignment_3_3_0.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_3_3_0_0_1 = (RuleCall)cValueRefEObjectCrossReference_3_3_0_0.eContents().get(1);
		private final Group cGroup_3_3_1 = (Group)cGroup_3_3.eContents().get(1);
		private final Keyword cFullStopKeyword_3_3_1_0 = (Keyword)cGroup_3_3_1.eContents().get(0);
		private final Assignment cValueFeatureAssignment_3_3_1_1 = (Assignment)cGroup_3_3_1.eContents().get(1);
		private final CrossReference cValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0 = (CrossReference)cValueFeatureAssignment_3_3_1_1.eContents().get(0);
		private final RuleCall cValueFeatureEStructuralFeatureIDTerminalRuleCall_3_3_1_1_0_1 = (RuleCall)cValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueRefAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cValueRefEObjectCrossReference_4_1_0 = (CrossReference)cValueRefAssignment_4_1.eContents().get(0);
		private final RuleCall cValueRefEObjectIDTerminalRuleCall_4_1_0_1 = (RuleCall)cValueRefEObjectCrossReference_4_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////FeatureSetters:setLower|setUpper|setType|setOpposite|setOwner|setName;
		//
		//FeatureSetters:
		//	"set" metafeature=[ecore::EStructuralFeature] ":=" (valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean |
		//	valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?) ("," valueRef+=[ecore::EObject])* ";";
		public ParserRule getRule() { return rule; }

		//"set" metafeature=[ecore::EStructuralFeature] ":=" (valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean |
		//valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?) ("," valueRef+=[ecore::EObject])* ";"
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//metafeature=[ecore::EStructuralFeature]
		public Assignment getMetafeatureAssignment_1() { return cMetafeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMetafeatureEStructuralFeatureCrossReference_1_0() { return cMetafeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cMetafeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2() { return cColonEqualsSignKeyword_2; }

		//valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean | valueRef+=[ecore::EObject] ("."
		//valueFeature=[ecore::EStructuralFeature])?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//valueEString=STRING
		public Assignment getValueEStringAssignment_3_0() { return cValueEStringAssignment_3_0; }

		//STRING
		public RuleCall getValueEStringSTRINGTerminalRuleCall_3_0_0() { return cValueEStringSTRINGTerminalRuleCall_3_0_0; }

		//valueEInt=EInt
		public Assignment getValueEIntAssignment_3_1() { return cValueEIntAssignment_3_1; }

		//EInt
		public RuleCall getValueEIntEIntParserRuleCall_3_1_0() { return cValueEIntEIntParserRuleCall_3_1_0; }

		//valueEBool=EBoolean
		public Assignment getValueEBoolAssignment_3_2() { return cValueEBoolAssignment_3_2; }

		//EBoolean
		public RuleCall getValueEBoolEBooleanParserRuleCall_3_2_0() { return cValueEBoolEBooleanParserRuleCall_3_2_0; }

		//valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_3_3_0() { return cValueRefAssignment_3_3_0; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_3_3_0_0() { return cValueRefEObjectCrossReference_3_3_0_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_3_3_0_0_1() { return cValueRefEObjectIDTerminalRuleCall_3_3_0_0_1; }

		//("." valueFeature=[ecore::EStructuralFeature])?
		public Group getGroup_3_3_1() { return cGroup_3_3_1; }

		//"."
		public Keyword getFullStopKeyword_3_3_1_0() { return cFullStopKeyword_3_3_1_0; }

		//valueFeature=[ecore::EStructuralFeature]
		public Assignment getValueFeatureAssignment_3_3_1_1() { return cValueFeatureAssignment_3_3_1_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0() { return cValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0; }

		//ID
		public RuleCall getValueFeatureEStructuralFeatureIDTerminalRuleCall_3_3_1_1_0_1() { return cValueFeatureEStructuralFeatureIDTerminalRuleCall_3_3_1_1_0_1; }

		//("," valueRef+=[ecore::EObject])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//valueRef+=[ecore::EObject]
		public Assignment getValueRefAssignment_4_1() { return cValueRefAssignment_4_1; }

		//[ecore::EObject]
		public CrossReference getValueRefEObjectCrossReference_4_1_0() { return cValueRefEObjectCrossReference_4_1_0; }

		//ID
		public RuleCall getValueRefEObjectIDTerminalRuleCall_4_1_0_1() { return cValueRefEObjectIDTerminalRuleCall_4_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class AttributeOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarAttributeParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cOpCHANGEATTRIBUTEParserRuleCall_1_0_0_0_0 = (RuleCall)cOpAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final RuleCall cOpADDATTRIBUTEParserRuleCall_1_0_0_1_0 = (RuleCall)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final RuleCall cOpDELETEATTRIBUTEParserRuleCall_1_0_0_2_0 = (RuleCall)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_3 = (Assignment)cAlternatives_1_0_0.eContents().get(3);
		private final RuleCall cOpRENAMEATTRIBUTEParserRuleCall_1_0_0_3_0 = (RuleCall)cOpAssignment_1_0_0_3.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_4 = (Assignment)cAlternatives_1_0_0.eContents().get(4);
		private final RuleCall cOpMOVEATTRIBUTEParserRuleCall_1_0_0_4_0 = (RuleCall)cOpAssignment_1_0_0_4.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Assignment cSettersAssignment_1_0_1_0_1 = (Assignment)cGroup_1_0_1_0.eContents().get(1);
		private final RuleCall cSettersFeatureSettersParserRuleCall_1_0_1_0_1_0 = (RuleCall)cSettersAssignment_1_0_1_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Assignment cComplexAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cComplexCallOperatorParserRuleCall_1_1_0 = (RuleCall)cComplexAssignment_1_1.eContents().get(0);
		
		//AttributeOp:
		//	("attribute" var=Attribute "=") ((op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE |
		//	op=MOVEATTRIBUTE) ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
		public ParserRule getRule() { return rule; }

		//("attribute" var=Attribute "=") ((op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE |
		//op=MOVEATTRIBUTE) ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator)
		public Group getGroup() { return cGroup; }

		//"attribute" var=Attribute "="
		public Group getGroup_0() { return cGroup_0; }

		//"attribute"
		public Keyword getAttributeKeyword_0_0() { return cAttributeKeyword_0_0; }

		//var=Attribute
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Attribute
		public RuleCall getVarAttributeParserRuleCall_0_1_0() { return cVarAttributeParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE) ("{"
		//setters+=FeatureSetters* "}" | ";") | complex+=CallOperator
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//(op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE) ("{"
		//setters+=FeatureSetters* "}" | ";")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//op=CHANGEATTRIBUTE
		public Assignment getOpAssignment_1_0_0_0() { return cOpAssignment_1_0_0_0; }

		//CHANGEATTRIBUTE
		public RuleCall getOpCHANGEATTRIBUTEParserRuleCall_1_0_0_0_0() { return cOpCHANGEATTRIBUTEParserRuleCall_1_0_0_0_0; }

		//op=ADDATTRIBUTE
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//ADDATTRIBUTE
		public RuleCall getOpADDATTRIBUTEParserRuleCall_1_0_0_1_0() { return cOpADDATTRIBUTEParserRuleCall_1_0_0_1_0; }

		//op=DELETEATTRIBUTE
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//DELETEATTRIBUTE
		public RuleCall getOpDELETEATTRIBUTEParserRuleCall_1_0_0_2_0() { return cOpDELETEATTRIBUTEParserRuleCall_1_0_0_2_0; }

		//op=RENAMEATTRIBUTE
		public Assignment getOpAssignment_1_0_0_3() { return cOpAssignment_1_0_0_3; }

		//RENAMEATTRIBUTE
		public RuleCall getOpRENAMEATTRIBUTEParserRuleCall_1_0_0_3_0() { return cOpRENAMEATTRIBUTEParserRuleCall_1_0_0_3_0; }

		//op=MOVEATTRIBUTE
		public Assignment getOpAssignment_1_0_0_4() { return cOpAssignment_1_0_0_4; }

		//MOVEATTRIBUTE
		public RuleCall getOpMOVEATTRIBUTEParserRuleCall_1_0_0_4_0() { return cOpMOVEATTRIBUTEParserRuleCall_1_0_0_4_0; }

		//"{" setters+=FeatureSetters* "}" | ";"
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//"{" setters+=FeatureSetters* "}"
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0_1_0_0() { return cLeftCurlyBracketKeyword_1_0_1_0_0; }

		//setters+=FeatureSetters*
		public Assignment getSettersAssignment_1_0_1_0_1() { return cSettersAssignment_1_0_1_0_1; }

		//FeatureSetters
		public RuleCall getSettersFeatureSettersParserRuleCall_1_0_1_0_1_0() { return cSettersFeatureSettersParserRuleCall_1_0_1_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_0_1_0_2() { return cRightCurlyBracketKeyword_1_0_1_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_0_1_1() { return cSemicolonKeyword_1_0_1_1; }

		//complex+=CallOperator
		public Assignment getComplexAssignment_1_1() { return cComplexAssignment_1_1; }

		//CallOperator
		public RuleCall getComplexCallOperatorParserRuleCall_1_1_0() { return cComplexCallOperatorParserRuleCall_1_1_0; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Attribute returns ecore::EAttribute:
		//	{Attribute} name=ID;
		public ParserRule getRule() { return rule; }

		//{Attribute} name=ID
		public Group getGroup() { return cGroup; }

		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class CHANGEREFERENCEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CHANGEREFERENCE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefRefEReferenceCrossReference_1_0 = (CrossReference)cRefRefAssignment_1.eContents().get(0);
		private final RuleCall cRefRefEReferenceIDTerminalRuleCall_1_0_1 = (RuleCall)cRefRefEReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CHANGEREFERENCE:
		//	"changeReference(" refRef=[ecore::EReference] ")";
		public ParserRule getRule() { return rule; }

		//"changeReference(" refRef=[ecore::EReference] ")"
		public Group getGroup() { return cGroup; }

		//"changeReference("
		public Keyword getChangeReferenceKeyword_0() { return cChangeReferenceKeyword_0; }

		//refRef=[ecore::EReference]
		public Assignment getRefRefAssignment_1() { return cRefRefAssignment_1; }

		//[ecore::EReference]
		public CrossReference getRefRefEReferenceCrossReference_1_0() { return cRefRefEReferenceCrossReference_1_0; }

		//ID
		public RuleCall getRefRefEReferenceIDTerminalRuleCall_1_0_1() { return cRefRefEReferenceIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class ADDREFERENCEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ADDREFERENCE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNewAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNewEStringParserRuleCall_1_0 = (RuleCall)cNewAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ADDREFERENCE:
		//	"addReference(" new=EString ")";
		public ParserRule getRule() { return rule; }

		//"addReference(" new=EString ")"
		public Group getGroup() { return cGroup; }

		//"addReference("
		public Keyword getAddReferenceKeyword_0() { return cAddReferenceKeyword_0; }

		//new=EString
		public Assignment getNewAssignment_1() { return cNewAssignment_1; }

		//EString
		public RuleCall getNewEStringParserRuleCall_1_0() { return cNewEStringParserRuleCall_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class DELETEREFERENCEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DELETEREFERENCE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefRefEReferenceCrossReference_1_0 = (CrossReference)cRefRefAssignment_1.eContents().get(0);
		private final RuleCall cRefRefEReferenceIDTerminalRuleCall_1_0_1 = (RuleCall)cRefRefEReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DELETEREFERENCE:
		//	"deleteReference(" refRef=[ecore::EReference] ")";
		public ParserRule getRule() { return rule; }

		//"deleteReference(" refRef=[ecore::EReference] ")"
		public Group getGroup() { return cGroup; }

		//"deleteReference("
		public Keyword getDeleteReferenceKeyword_0() { return cDeleteReferenceKeyword_0; }

		//refRef=[ecore::EReference]
		public Assignment getRefRefAssignment_1() { return cRefRefAssignment_1; }

		//[ecore::EReference]
		public CrossReference getRefRefEReferenceCrossReference_1_0() { return cRefRefEReferenceCrossReference_1_0; }

		//ID
		public RuleCall getRefRefEReferenceIDTerminalRuleCall_1_0_1() { return cRefRefEReferenceIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class MOVEREFERENCEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MOVEREFERENCE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMoveReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefRefEReferenceCrossReference_1_0 = (CrossReference)cRefRefAssignment_1.eContents().get(0);
		private final RuleCall cRefRefEReferenceIDTerminalRuleCall_1_0_1 = (RuleCall)cRefRefEReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDstAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDstEClassCrossReference_3_0 = (CrossReference)cDstAssignment_3.eContents().get(0);
		private final RuleCall cDstEClassIDTerminalRuleCall_3_0_1 = (RuleCall)cDstEClassCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MOVEREFERENCE:
		//	"moveReference(" refRef=[ecore::EReference] "," dst=[ecore::EClass] ")";
		public ParserRule getRule() { return rule; }

		//"moveReference(" refRef=[ecore::EReference] "," dst=[ecore::EClass] ")"
		public Group getGroup() { return cGroup; }

		//"moveReference("
		public Keyword getMoveReferenceKeyword_0() { return cMoveReferenceKeyword_0; }

		//refRef=[ecore::EReference]
		public Assignment getRefRefAssignment_1() { return cRefRefAssignment_1; }

		//[ecore::EReference]
		public CrossReference getRefRefEReferenceCrossReference_1_0() { return cRefRefEReferenceCrossReference_1_0; }

		//ID
		public RuleCall getRefRefEReferenceIDTerminalRuleCall_1_0_1() { return cRefRefEReferenceIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//dst=[ecore::EClass]
		public Assignment getDstAssignment_3() { return cDstAssignment_3; }

		//[ecore::EClass]
		public CrossReference getDstEClassCrossReference_3_0() { return cDstEClassCrossReference_3_0; }

		//ID
		public RuleCall getDstEClassIDTerminalRuleCall_3_0_1() { return cDstEClassIDTerminalRuleCall_3_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class FeatureSetters_defElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "featureSetters_def");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cSetLowerBoundKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cLowerBoundAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cLowerBoundEIntParserRuleCall_0_0_1_0 = (RuleCall)cLowerBoundAssignment_0_0_1.eContents().get(0);
		private final Keyword cIntKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Keyword cSetUpperBoundKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cLowerBoundAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cLowerBoundEIntParserRuleCall_0_1_1_0 = (RuleCall)cLowerBoundAssignment_0_1_1.eContents().get(0);
		private final Keyword cIntKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Keyword cSetTypeKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cETypeAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cETypeClassifierParserRuleCall_0_2_1_0 = (RuleCall)cETypeAssignment_0_2_1.eContents().get(0);
		private final Keyword cClassifierKeyword_0_2_2 = (Keyword)cGroup_0_2.eContents().get(2);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Keyword cSetOppositeKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cOppositeAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cOppositeReferenceParserRuleCall_0_3_1_0 = (RuleCall)cOppositeAssignment_0_3_1.eContents().get(0);
		private final Keyword cReferenceKeyword_0_3_2 = (Keyword)cGroup_0_3.eContents().get(2);
		private final Group cGroup_0_4 = (Group)cAlternatives_0.eContents().get(4);
		private final Keyword cSetOwnerKeyword_0_4_0 = (Keyword)cGroup_0_4.eContents().get(0);
		private final Assignment cOppositeAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cOppositeClassParserRuleCall_0_4_1_0 = (RuleCall)cOppositeAssignment_0_4_1.eContents().get(0);
		private final Keyword cClassKeyword_0_4_2 = (Keyword)cGroup_0_4.eContents().get(2);
		private final Group cGroup_0_5 = (Group)cAlternatives_0.eContents().get(5);
		private final Keyword cSetNameKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Assignment cNameAssignment_0_5_1 = (Assignment)cGroup_0_5.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_0_5_1_0 = (RuleCall)cNameAssignment_0_5_1.eContents().get(0);
		private final Keyword cStringKeyword_0_5_2 = (Keyword)cGroup_0_5.eContents().get(2);
		private final Keyword cRightParenthesisSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//featureSetters_def:
		//	("setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
		//	":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
		//	name=EString ":string") ");";
		public ParserRule getRule() { return rule; }

		//("setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
		//":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
		//name=EString ":string") ");"
		public Group getGroup() { return cGroup; }

		//"setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
		//":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
		//name=EString ":string"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"setLowerBound(" lowerBound=EInt ":int"
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"setLowerBound("
		public Keyword getSetLowerBoundKeyword_0_0_0() { return cSetLowerBoundKeyword_0_0_0; }

		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_0_0_1() { return cLowerBoundAssignment_0_0_1; }

		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_0_0_1_0() { return cLowerBoundEIntParserRuleCall_0_0_1_0; }

		//":int"
		public Keyword getIntKeyword_0_0_2() { return cIntKeyword_0_0_2; }

		//"setUpperBound(" lowerBound=EInt ":int"
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"setUpperBound("
		public Keyword getSetUpperBoundKeyword_0_1_0() { return cSetUpperBoundKeyword_0_1_0; }

		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_0_1_1() { return cLowerBoundAssignment_0_1_1; }

		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_0_1_1_0() { return cLowerBoundEIntParserRuleCall_0_1_1_0; }

		//":int"
		public Keyword getIntKeyword_0_1_2() { return cIntKeyword_0_1_2; }

		//"setType(" eType=Classifier ":classifier"
		public Group getGroup_0_2() { return cGroup_0_2; }

		//"setType("
		public Keyword getSetTypeKeyword_0_2_0() { return cSetTypeKeyword_0_2_0; }

		//eType=Classifier
		public Assignment getETypeAssignment_0_2_1() { return cETypeAssignment_0_2_1; }

		//Classifier
		public RuleCall getETypeClassifierParserRuleCall_0_2_1_0() { return cETypeClassifierParserRuleCall_0_2_1_0; }

		//":classifier"
		public Keyword getClassifierKeyword_0_2_2() { return cClassifierKeyword_0_2_2; }

		//"setOpposite(" opposite=Reference ":reference"
		public Group getGroup_0_3() { return cGroup_0_3; }

		//"setOpposite("
		public Keyword getSetOppositeKeyword_0_3_0() { return cSetOppositeKeyword_0_3_0; }

		//opposite=Reference
		public Assignment getOppositeAssignment_0_3_1() { return cOppositeAssignment_0_3_1; }

		//Reference
		public RuleCall getOppositeReferenceParserRuleCall_0_3_1_0() { return cOppositeReferenceParserRuleCall_0_3_1_0; }

		//":reference"
		public Keyword getReferenceKeyword_0_3_2() { return cReferenceKeyword_0_3_2; }

		//"setOwner(" opposite=Class ":class"
		public Group getGroup_0_4() { return cGroup_0_4; }

		//"setOwner("
		public Keyword getSetOwnerKeyword_0_4_0() { return cSetOwnerKeyword_0_4_0; }

		//opposite=Class
		public Assignment getOppositeAssignment_0_4_1() { return cOppositeAssignment_0_4_1; }

		//Class
		public RuleCall getOppositeClassParserRuleCall_0_4_1_0() { return cOppositeClassParserRuleCall_0_4_1_0; }

		//":class"
		public Keyword getClassKeyword_0_4_2() { return cClassKeyword_0_4_2; }

		//"setName(" name=EString ":string"
		public Group getGroup_0_5() { return cGroup_0_5; }

		//"setName("
		public Keyword getSetNameKeyword_0_5_0() { return cSetNameKeyword_0_5_0; }

		//name=EString
		public Assignment getNameAssignment_0_5_1() { return cNameAssignment_0_5_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_0_5_1_0() { return cNameEStringParserRuleCall_0_5_1_0; }

		//":string"
		public Keyword getStringKeyword_0_5_2() { return cStringKeyword_0_5_2; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_1() { return cRightParenthesisSemicolonKeyword_1; }
	}

	public class ReferenceOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cReferenceKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVarReferenceParserRuleCall_0_1_0 = (RuleCall)cVarAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Assignment cCHANGE_opAssignment_1_0_0_0 = (Assignment)cAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cCHANGE_opCHANGEREFERENCEParserRuleCall_1_0_0_0_0 = (RuleCall)cCHANGE_opAssignment_1_0_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final RuleCall cOpADDREFERENCEParserRuleCall_1_0_0_1_0 = (RuleCall)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final RuleCall cOpDELETEREFERENCEParserRuleCall_1_0_0_2_0 = (RuleCall)cOpAssignment_1_0_0_2.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_3 = (Assignment)cAlternatives_1_0_0.eContents().get(3);
		private final RuleCall cOpMOVEREFERENCEParserRuleCall_1_0_0_3_0 = (RuleCall)cOpAssignment_1_0_0_3.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Assignment cSettersAssignment_1_0_1_0_1 = (Assignment)cGroup_1_0_1_0.eContents().get(1);
		private final RuleCall cSettersFeatureSettersParserRuleCall_1_0_1_0_1_0 = (RuleCall)cSettersAssignment_1_0_1_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Assignment cComplexAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cComplexCallOperatorParserRuleCall_1_1_0 = (RuleCall)cComplexAssignment_1_1.eContents().get(0);
		
		//ReferenceOp:
		//	("reference" var=Reference "=") ((CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE)
		//	("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
		public ParserRule getRule() { return rule; }

		//("reference" var=Reference "=") ((CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE)
		//("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator)
		public Group getGroup() { return cGroup; }

		//"reference" var=Reference "="
		public Group getGroup_0() { return cGroup_0; }

		//"reference"
		public Keyword getReferenceKeyword_0_0() { return cReferenceKeyword_0_0; }

		//var=Reference
		public Assignment getVarAssignment_0_1() { return cVarAssignment_0_1; }

		//Reference
		public RuleCall getVarReferenceParserRuleCall_0_1_0() { return cVarReferenceParserRuleCall_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }

		//(CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE) ("{" setters+=FeatureSetters* "}"
		//| ";") | complex+=CallOperator
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//(CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE) ("{" setters+=FeatureSetters* "}"
		//| ";")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }

		//CHANGE_op=CHANGEREFERENCE
		public Assignment getCHANGE_opAssignment_1_0_0_0() { return cCHANGE_opAssignment_1_0_0_0; }

		//CHANGEREFERENCE
		public RuleCall getCHANGE_opCHANGEREFERENCEParserRuleCall_1_0_0_0_0() { return cCHANGE_opCHANGEREFERENCEParserRuleCall_1_0_0_0_0; }

		//op=ADDREFERENCE
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//ADDREFERENCE
		public RuleCall getOpADDREFERENCEParserRuleCall_1_0_0_1_0() { return cOpADDREFERENCEParserRuleCall_1_0_0_1_0; }

		//op=DELETEREFERENCE
		public Assignment getOpAssignment_1_0_0_2() { return cOpAssignment_1_0_0_2; }

		//DELETEREFERENCE
		public RuleCall getOpDELETEREFERENCEParserRuleCall_1_0_0_2_0() { return cOpDELETEREFERENCEParserRuleCall_1_0_0_2_0; }

		//op=MOVEREFERENCE
		public Assignment getOpAssignment_1_0_0_3() { return cOpAssignment_1_0_0_3; }

		//MOVEREFERENCE
		public RuleCall getOpMOVEREFERENCEParserRuleCall_1_0_0_3_0() { return cOpMOVEREFERENCEParserRuleCall_1_0_0_3_0; }

		//"{" setters+=FeatureSetters* "}" | ";"
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//"{" setters+=FeatureSetters* "}"
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0_1_0_0() { return cLeftCurlyBracketKeyword_1_0_1_0_0; }

		//setters+=FeatureSetters*
		public Assignment getSettersAssignment_1_0_1_0_1() { return cSettersAssignment_1_0_1_0_1; }

		//FeatureSetters
		public RuleCall getSettersFeatureSettersParserRuleCall_1_0_1_0_1_0() { return cSettersFeatureSettersParserRuleCall_1_0_1_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_0_1_0_2() { return cRightCurlyBracketKeyword_1_0_1_0_2; }

		//";"
		public Keyword getSemicolonKeyword_1_0_1_1() { return cSemicolonKeyword_1_0_1_1; }

		//complex+=CallOperator
		public Assignment getComplexAssignment_1_1() { return cComplexAssignment_1_1; }

		//CallOperator
		public RuleCall getComplexCallOperatorParserRuleCall_1_1_0() { return cComplexCallOperatorParserRuleCall_1_1_0; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Reference returns ecore::EReference:
		//	{Reference} name=ID;
		public ParserRule getRule() { return rule; }

		//{Reference} name=ID
		public Group getGroup() { return cGroup; }

		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///////////////////////////////////////////
		//
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class ComplexOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComplexOperator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParamsParameterParserRuleCall_2_1_0 = (RuleCall)cParamsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cParamsParameterParserRuleCall_2_2_1_0 = (RuleCall)cParamsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cClassOperationsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cClassOperationsClassOpParserRuleCall_4_0_0 = (RuleCall)cClassOperationsAssignment_4_0.eContents().get(0);
		private final Assignment cAttributeOperationsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cAttributeOperationsAttributeOpParserRuleCall_4_1_0 = (RuleCall)cAttributeOperationsAssignment_4_1.eContents().get(0);
		private final Assignment cReferenceOperationsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cReferenceOperationsReferenceOpParserRuleCall_4_2_0 = (RuleCall)cReferenceOperationsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//////////////////complex operators//////////////////////////
		//
		//ComplexOperator:
		//	"def change" name=ID ("(" params+=Parameter? ("," params+=Parameter)* ")") "{" (classOperations+=ClassOp |
		//	attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)* "}";
		public ParserRule getRule() { return rule; }

		//"def change" name=ID ("(" params+=Parameter? ("," params+=Parameter)* ")") "{" (classOperations+=ClassOp |
		//attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)* "}"
		public Group getGroup() { return cGroup; }

		//"def change"
		public Keyword getDefChangeKeyword_0() { return cDefChangeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"(" params+=Parameter? ("," params+=Parameter)* ")"
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//params+=Parameter?
		public Assignment getParamsAssignment_2_1() { return cParamsAssignment_2_1; }

		//Parameter
		public RuleCall getParamsParameterParserRuleCall_2_1_0() { return cParamsParameterParserRuleCall_2_1_0; }

		//("," params+=Parameter)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//params+=Parameter
		public Assignment getParamsAssignment_2_2_1() { return cParamsAssignment_2_2_1; }

		//Parameter
		public RuleCall getParamsParameterParserRuleCall_2_2_1_0() { return cParamsParameterParserRuleCall_2_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(classOperations+=ClassOp | attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//classOperations+=ClassOp
		public Assignment getClassOperationsAssignment_4_0() { return cClassOperationsAssignment_4_0; }

		//ClassOp
		public RuleCall getClassOperationsClassOpParserRuleCall_4_0_0() { return cClassOperationsClassOpParserRuleCall_4_0_0; }

		//attributeOperations+=AttributeOp
		public Assignment getAttributeOperationsAssignment_4_1() { return cAttributeOperationsAssignment_4_1; }

		//AttributeOp
		public RuleCall getAttributeOperationsAttributeOpParserRuleCall_4_1_0() { return cAttributeOperationsAttributeOpParserRuleCall_4_1_0; }

		//referenceOperations+=ReferenceOp
		public Assignment getReferenceOperationsAssignment_4_2() { return cReferenceOperationsAssignment_4_2; }

		//ReferenceOp
		public RuleCall getReferenceOperationsReferenceOpParserRuleCall_4_2_0() { return cReferenceOperationsReferenceOpParserRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEReferenceParParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEAttributeParParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEClassParParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEPackageParParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEStringParParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEBoolParParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEIntParParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		////name=ID ":" type=[ecore::EClassifier] 
		//
		////"class" Class|"attribute" Attribute|"reference" Reference|"string" EString|"int" EInt |"bool" EBoolean
		//
		//Parameter returns ecore::EObject:
		//	EReferencePar | EAttributePar | EClassPar | EPackagePar | EStringPar | EBoolPar | EIntPar;
		public ParserRule getRule() { return rule; }

		//EReferencePar | EAttributePar | EClassPar | EPackagePar | EStringPar | EBoolPar | EIntPar
		public Alternatives getAlternatives() { return cAlternatives; }

		//EReferencePar
		public RuleCall getEReferenceParParserRuleCall_0() { return cEReferenceParParserRuleCall_0; }

		//EAttributePar
		public RuleCall getEAttributeParParserRuleCall_1() { return cEAttributeParParserRuleCall_1; }

		//EClassPar
		public RuleCall getEClassParParserRuleCall_2() { return cEClassParParserRuleCall_2; }

		//EPackagePar
		public RuleCall getEPackageParParserRuleCall_3() { return cEPackageParParserRuleCall_3; }

		//EStringPar
		public RuleCall getEStringParParserRuleCall_4() { return cEStringParParserRuleCall_4; }

		//EBoolPar
		public RuleCall getEBoolParParserRuleCall_5() { return cEBoolParParserRuleCall_5; }

		//EIntPar
		public RuleCall getEIntParParserRuleCall_6() { return cEIntParParserRuleCall_6; }
	}

	public class EReferenceParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EReferencePar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEReferenceParAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReferenceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//EReferencePar returns ecore::EReference:
		//	{EReferencePar} name=ID ":" "Reference";
		public ParserRule getRule() { return rule; }

		//{EReferencePar} name=ID ":" "Reference"
		public Group getGroup() { return cGroup; }

		//{EReferencePar}
		public Action getEReferenceParAction_0() { return cEReferenceParAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"Reference"
		public Keyword getReferenceKeyword_3() { return cReferenceKeyword_3; }
	}

	public class EAttributeParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAttributePar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEAttributeParAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAttributeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//EAttributePar returns ecore::EAttribute:
		//	{EAttributePar} name=ID ":" "Attribute";
		public ParserRule getRule() { return rule; }

		//{EAttributePar} name=ID ":" "Attribute"
		public Group getGroup() { return cGroup; }

		//{EAttributePar}
		public Action getEAttributeParAction_0() { return cEAttributeParAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"Attribute"
		public Keyword getAttributeKeyword_3() { return cAttributeKeyword_3; }
	}

	public class EClassParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassPar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEClassParAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cClassKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//EClassPar returns ecore::EClass:
		//	{EClassPar} name=ID ":" "Class";
		public ParserRule getRule() { return rule; }

		//{EClassPar} name=ID ":" "Class"
		public Group getGroup() { return cGroup; }

		//{EClassPar}
		public Action getEClassParAction_0() { return cEClassParAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"Class"
		public Keyword getClassKeyword_3() { return cClassKeyword_3; }
	}

	public class EPackageParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPackagePar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPackageParAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPackageKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//EPackagePar returns ecore::EPackage:
		//	{EPackagePar} name=ID ":" "Package";
		public ParserRule getRule() { return rule; }

		//{EPackagePar} name=ID ":" "Package"
		public Group getGroup() { return cGroup; }

		//{EPackagePar}
		public Action getEPackageParAction_0() { return cEPackageParAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"Package"
		public Keyword getPackageKeyword_3() { return cPackageKeyword_3; }
	}

	public class EIntParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EIntPar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIntKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EIntPar returns INT:
		//	name=ID ":" "Int";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "Int"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"Int"
		public Keyword getIntKeyword_2() { return cIntKeyword_2; }
	}

	public class EStringParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EStringPar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cStringKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EStringPar returns STRING:
		//	name=ID ":" "String";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "String"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"String"
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }
	}

	public class EBoolParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolPar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBoolKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EBoolPar:
		//	name=ID ":" "Bool";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "Bool"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"Bool"
		public Keyword getBoolKeyword_2() { return cBoolKeyword_2; }
	}

	public class CallOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CallOperator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFunAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFunComplexOperatorCrossReference_0_0 = (CrossReference)cFunAssignment_0.eContents().get(0);
		private final RuleCall cFunComplexOperatorIDTerminalRuleCall_0_0_1 = (RuleCall)cFunComplexOperatorCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsArgumentParserRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgsArgumentParserRuleCall_3_1_0 = (RuleCall)cArgsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///////////call complex operator//////////////////////
		//
		//CallOperator:
		//	fun=[ComplexOperator] "(" args+=Argument? ("," args+=Argument)* ");";
		public ParserRule getRule() { return rule; }

		//fun=[ComplexOperator] "(" args+=Argument? ("," args+=Argument)* ");"
		public Group getGroup() { return cGroup; }

		//fun=[ComplexOperator]
		public Assignment getFunAssignment_0() { return cFunAssignment_0; }

		//[ComplexOperator]
		public CrossReference getFunComplexOperatorCrossReference_0_0() { return cFunComplexOperatorCrossReference_0_0; }

		//ID
		public RuleCall getFunComplexOperatorIDTerminalRuleCall_0_0_1() { return cFunComplexOperatorIDTerminalRuleCall_0_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//args+=Argument?
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }

		//Argument
		public RuleCall getArgsArgumentParserRuleCall_2_0() { return cArgsArgumentParserRuleCall_2_0; }

		//("," args+=Argument)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//args+=Argument
		public Assignment getArgsAssignment_3_1() { return cArgsAssignment_3_1; }

		//Argument
		public RuleCall getArgsArgumentParserRuleCall_3_1_0() { return cArgsArgumentParserRuleCall_3_1_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_4() { return cRightParenthesisSemicolonKeyword_4; }
	}

	public class ArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Argument");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cArgumentAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cArgAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cArgEObjectCrossReference_0_1_0 = (CrossReference)cArgAssignment_0_1.eContents().get(0);
		private final RuleCall cArgEObjectIDTerminalRuleCall_0_1_0_1 = (RuleCall)cArgEObjectCrossReference_0_1_0.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Argument:
		//	{Argument} arg=[ecore::EObject] | STRING | INT;
		public ParserRule getRule() { return rule; }

		//{Argument} arg=[ecore::EObject] | STRING | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//{Argument} arg=[ecore::EObject]
		public Group getGroup_0() { return cGroup_0; }

		//{Argument}
		public Action getArgumentAction_0_0() { return cArgumentAction_0_0; }

		//arg=[ecore::EObject]
		public Assignment getArgAssignment_0_1() { return cArgAssignment_0_1; }

		//[ecore::EObject]
		public CrossReference getArgEObjectCrossReference_0_1_0() { return cArgEObjectCrossReference_0_1_0; }

		//ID
		public RuleCall getArgEObjectIDTerminalRuleCall_0_1_0_1() { return cArgEObjectIDTerminalRuleCall_0_1_0_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MigrationProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigrationProgram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cIncludeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLibsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLibsSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cLibsAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMigrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMigrMigrateKeyword_1_0 = (Keyword)cMigrAssignment_1.eContents().get(0);
		private final Keyword cTransformationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cTransformationPackageAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final CrossReference cTransformationPackageEPackageCrossReference_5_0_0 = (CrossReference)cTransformationPackageAssignment_5_0.eContents().get(0);
		private final RuleCall cTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1 = (RuleCall)cTransformationPackageEPackageCrossReference_5_0_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cTransformationPackageAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cTransformationPackageEPackageCrossReference_5_1_1_0 = (CrossReference)cTransformationPackageAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cTransformationPackageEPackageCrossReference_5_1_1_0.eContents().get(1);
		private final Keyword cWithKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDeltaAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDeltaSTRINGTerminalRuleCall_7_0 = (RuleCall)cDeltaAssignment_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRulesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRulesRuleParserRuleCall_9_0 = (RuleCall)cRulesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		////////////////////////////////ATLMigration////////////////////////////////
		//
		//MigrationProgram:
		//	("include" libs+=STRING ";")* migr="migrate" "transformation" path=STRING ":"
		//	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
		//	rules+=Rule* "}";
		public ParserRule getRule() { return rule; }

		//("include" libs+=STRING ";")* migr="migrate" "transformation" path=STRING ":" (transformationPackage+=[ecore::EPackage]
		//("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{" rules+=Rule* "}"
		public Group getGroup() { return cGroup; }

		//("include" libs+=STRING ";")*
		public Group getGroup_0() { return cGroup_0; }

		//"include"
		public Keyword getIncludeKeyword_0_0() { return cIncludeKeyword_0_0; }

		//libs+=STRING
		public Assignment getLibsAssignment_0_1() { return cLibsAssignment_0_1; }

		//STRING
		public RuleCall getLibsSTRINGTerminalRuleCall_0_1_0() { return cLibsSTRINGTerminalRuleCall_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//migr="migrate"
		public Assignment getMigrAssignment_1() { return cMigrAssignment_1; }

		//"migrate"
		public Keyword getMigrMigrateKeyword_1_0() { return cMigrMigrateKeyword_1_0; }

		//"transformation"
		public Keyword getTransformationKeyword_2() { return cTransformationKeyword_2; }

		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])
		public Group getGroup_5() { return cGroup_5; }

		//transformationPackage+=[ecore::EPackage]
		public Assignment getTransformationPackageAssignment_5_0() { return cTransformationPackageAssignment_5_0; }

		//[ecore::EPackage]
		public CrossReference getTransformationPackageEPackageCrossReference_5_0_0() { return cTransformationPackageEPackageCrossReference_5_0_0; }

		//ID
		public RuleCall getTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1() { return cTransformationPackageEPackageIDTerminalRuleCall_5_0_0_1; }

		//"," transformationPackage+=[ecore::EPackage]
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//transformationPackage+=[ecore::EPackage]
		public Assignment getTransformationPackageAssignment_5_1_1() { return cTransformationPackageAssignment_5_1_1; }

		//[ecore::EPackage]
		public CrossReference getTransformationPackageEPackageCrossReference_5_1_1_0() { return cTransformationPackageEPackageCrossReference_5_1_1_0; }

		//ID
		public RuleCall getTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1() { return cTransformationPackageEPackageIDTerminalRuleCall_5_1_1_0_1; }

		//"with"
		public Keyword getWithKeyword_6() { return cWithKeyword_6; }

		//delta=STRING
		public Assignment getDeltaAssignment_7() { return cDeltaAssignment_7; }

		//STRING
		public RuleCall getDeltaSTRINGTerminalRuleCall_7_0() { return cDeltaSTRINGTerminalRuleCall_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//rules+=Rule*
		public Assignment getRulesAssignment_9() { return cRulesAssignment_9; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_9_0() { return cRulesRuleParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilterAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFilterOpDefParserRuleCall_3_0 = (RuleCall)cFilterAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRewritingRulesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRewritingRulesRewritingRuleParserRuleCall_6_0 = (RuleCall)cRewritingRulesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Rule:
		//	"rule" name=ID "[" filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
		public ParserRule getRule() { return rule; }

		//"rule" name=ID "[" filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}"
		public Group getGroup() { return cGroup; }

		//"rule"
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//filter=OpDef
		public Assignment getFilterAssignment_3() { return cFilterAssignment_3; }

		//OpDef
		public RuleCall getFilterOpDefParserRuleCall_3_0() { return cFilterOpDefParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//rewritingRules+=RewritingRule*
		public Assignment getRewritingRulesAssignment_6() { return cRewritingRulesAssignment_6; }

		//RewritingRule
		public RuleCall getRewritingRulesRewritingRuleParserRuleCall_6_0() { return cRewritingRulesRewritingRuleParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RewritingRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RewritingRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMigratorsSXAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMigratorsSXMigratorSXParserRuleCall_0_0_0 = (RuleCall)cMigratorsSXAssignment_0_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMigratorDXAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cMigratorDXMigratorDXParserRuleCall_0_2_0 = (RuleCall)cMigratorDXAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAmpersandKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMigratorSXAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMigratorSXMigratorSXParserRuleCall_1_1_0 = (RuleCall)cMigratorSXAssignment_1_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMigratorDXAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cMigratorDXMigratorDXParserRuleCall_1_3_0 = (RuleCall)cMigratorDXAssignment_1_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//RewritingRule:
		//	(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)* ";";
		public ParserRule getRule() { return rule; }

		//(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)* ";"
		public Group getGroup() { return cGroup; }

		//migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX
		public Group getGroup_0() { return cGroup_0; }

		//migratorsSX+=MigratorSX
		public Assignment getMigratorsSXAssignment_0_0() { return cMigratorsSXAssignment_0_0; }

		//MigratorSX
		public RuleCall getMigratorsSXMigratorSXParserRuleCall_0_0_0() { return cMigratorsSXMigratorSXParserRuleCall_0_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_0_1() { return cHyphenMinusGreaterThanSignKeyword_0_1; }

		//migratorDX+=MigratorDX
		public Assignment getMigratorDXAssignment_0_2() { return cMigratorDXAssignment_0_2; }

		//MigratorDX
		public RuleCall getMigratorDXMigratorDXParserRuleCall_0_2_0() { return cMigratorDXMigratorDXParserRuleCall_0_2_0; }

		//("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
		public Group getGroup_1() { return cGroup_1; }

		//"&"
		public Keyword getAmpersandKeyword_1_0() { return cAmpersandKeyword_1_0; }

		//migratorSX+=MigratorSX
		public Assignment getMigratorSXAssignment_1_1() { return cMigratorSXAssignment_1_1; }

		//MigratorSX
		public RuleCall getMigratorSXMigratorSXParserRuleCall_1_1_0() { return cMigratorSXMigratorSXParserRuleCall_1_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_2() { return cHyphenMinusGreaterThanSignKeyword_1_2; }

		//migratorDX+=MigratorDX
		public Assignment getMigratorDXAssignment_1_3() { return cMigratorDXAssignment_1_3; }

		//MigratorDX
		public RuleCall getMigratorDXMigratorDXParserRuleCall_1_3_0() { return cMigratorDXMigratorDXParserRuleCall_1_3_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class MigratorSXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigratorSX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cElementSXAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cElementSXEClassCrossReference_1_0 = (CrossReference)cElementSXAssignment_1.eContents().get(0);
		private final RuleCall cElementSXEClassIDTerminalRuleCall_1_0_1 = (RuleCall)cElementSXEClassCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFilterSXAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFilterSXFilterMigratorParserRuleCall_5_0 = (RuleCall)cFilterSXAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAmpersandKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFilterSXAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFilterSXFilterMigratorParserRuleCall_6_1_0 = (RuleCall)cFilterSXAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MigratorSX:
		//	"<" elementSX=[ecore::EClass] name=ID ">" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)* "]";
		public ParserRule getRule() { return rule; }

		//"<" elementSX=[ecore::EClass] name=ID ">" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)* "]"
		public Group getGroup() { return cGroup; }

		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }

		//elementSX=[ecore::EClass]
		public Assignment getElementSXAssignment_1() { return cElementSXAssignment_1; }

		//[ecore::EClass]
		public CrossReference getElementSXEClassCrossReference_1_0() { return cElementSXEClassCrossReference_1_0; }

		//ID
		public RuleCall getElementSXEClassIDTerminalRuleCall_1_0_1() { return cElementSXEClassIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//filterSX+=FilterMigrator
		public Assignment getFilterSXAssignment_5() { return cFilterSXAssignment_5; }

		//FilterMigrator
		public RuleCall getFilterSXFilterMigratorParserRuleCall_5_0() { return cFilterSXFilterMigratorParserRuleCall_5_0; }

		//("&" filterSX+=FilterMigrator)*
		public Group getGroup_6() { return cGroup_6; }

		//"&"
		public Keyword getAmpersandKeyword_6_0() { return cAmpersandKeyword_6_0; }

		//filterSX+=FilterMigrator
		public Assignment getFilterSXAssignment_6_1() { return cFilterSXAssignment_6_1; }

		//FilterMigrator
		public RuleCall getFilterSXFilterMigratorParserRuleCall_6_1_0() { return cFilterSXFilterMigratorParserRuleCall_6_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
	}

	public class MigratorDXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigratorDX");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLessThanSignKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cElementDXAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cElementDXEClassCrossReference_0_1_0 = (CrossReference)cElementDXAssignment_0_1.eContents().get(0);
		private final RuleCall cElementDXEClassIDTerminalRuleCall_0_1_0_1 = (RuleCall)cElementDXEClassCrossReference_0_1_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cFilterDXAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cFilterDXFilterMigratorParserRuleCall_0_5_0 = (RuleCall)cFilterDXAssignment_0_5.eContents().get(0);
		private final Group cGroup_0_6 = (Group)cGroup_0.eContents().get(6);
		private final Keyword cAmpersandKeyword_0_6_0 = (Keyword)cGroup_0_6.eContents().get(0);
		private final Assignment cFilterDXAssignment_0_6_1 = (Assignment)cGroup_0_6.eContents().get(1);
		private final RuleCall cFilterDXFilterMigratorParserRuleCall_0_6_1_0 = (RuleCall)cFilterDXAssignment_0_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final Keyword cNullKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//MigratorDX:
		//	"<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]" | "null";
		public ParserRule getRule() { return rule; }

		//"<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]" | "null"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]"
		public Group getGroup_0() { return cGroup_0; }

		//"<"
		public Keyword getLessThanSignKeyword_0_0() { return cLessThanSignKeyword_0_0; }

		//elementDX=[ecore::EClass]
		public Assignment getElementDXAssignment_0_1() { return cElementDXAssignment_0_1; }

		//[ecore::EClass]
		public CrossReference getElementDXEClassCrossReference_0_1_0() { return cElementDXEClassCrossReference_0_1_0; }

		//ID
		public RuleCall getElementDXEClassIDTerminalRuleCall_0_1_0_1() { return cElementDXEClassIDTerminalRuleCall_0_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_0_3() { return cGreaterThanSignKeyword_0_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_4() { return cLeftSquareBracketKeyword_0_4; }

		//filterDX+=FilterMigrator
		public Assignment getFilterDXAssignment_0_5() { return cFilterDXAssignment_0_5; }

		//FilterMigrator
		public RuleCall getFilterDXFilterMigratorParserRuleCall_0_5_0() { return cFilterDXFilterMigratorParserRuleCall_0_5_0; }

		//("&" filterDX+=FilterMigrator)*
		public Group getGroup_0_6() { return cGroup_0_6; }

		//"&"
		public Keyword getAmpersandKeyword_0_6_0() { return cAmpersandKeyword_0_6_0; }

		//filterDX+=FilterMigrator
		public Assignment getFilterDXAssignment_0_6_1() { return cFilterDXAssignment_0_6_1; }

		//FilterMigrator
		public RuleCall getFilterDXFilterMigratorParserRuleCall_0_6_1_0() { return cFilterDXFilterMigratorParserRuleCall_0_6_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_7() { return cRightSquareBracketKeyword_0_7; }

		//"null"
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}

	public class FilterMigratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterMigrator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFeatureEStructuralFeatureCrossReference_1_0 = (CrossReference)cFeatureAssignment_1.eContents().get(0);
		private final RuleCall cFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cFeatureEStructuralFeatureCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInternalFeatureAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cInternalFeatureEStructuralFeatureCrossReference_2_1_0 = (CrossReference)cInternalFeatureAssignment_2_1.eContents().get(0);
		private final RuleCall cInternalFeatureEStructuralFeatureIDTerminalRuleCall_2_1_0_1 = (RuleCall)cInternalFeatureEStructuralFeatureCrossReference_2_1_0.eContents().get(1);
		private final Assignment cOpAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOpFilterOperationParserRuleCall_3_0 = (RuleCall)cOpAssignment_3.eContents().get(0);
		private final Assignment cDxobjAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cDxobjEObjectCrossReference_4_0 = (CrossReference)cDxobjAssignment_4.eContents().get(0);
		private final RuleCall cDxobjEObjectIDTerminalRuleCall_4_0_1 = (RuleCall)cDxobjEObjectCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFullStopKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDxgettersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cDxgettersEStructuralFeatureCrossReference_5_1_0 = (CrossReference)cDxgettersAssignment_5_1.eContents().get(0);
		private final RuleCall cDxgettersEStructuralFeatureIDTerminalRuleCall_5_1_0_1 = (RuleCall)cDxgettersEStructuralFeatureCrossReference_5_1_0.eContents().get(1);
		
		//FilterMigrator:
		//	"#" feature=[ecore::EStructuralFeature] ("." internalFeature=[ecore::EStructuralFeature])? op=filterOperation
		//	dxobj=[ecore::EObject] ("." dxgetters=[ecore::EStructuralFeature])?;
		public ParserRule getRule() { return rule; }

		//"#" feature=[ecore::EStructuralFeature] ("." internalFeature=[ecore::EStructuralFeature])? op=filterOperation
		//dxobj=[ecore::EObject] ("." dxgetters=[ecore::EStructuralFeature])?
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//feature=[ecore::EStructuralFeature]
		public Assignment getFeatureAssignment_1() { return cFeatureAssignment_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getFeatureEStructuralFeatureCrossReference_1_0() { return cFeatureEStructuralFeatureCrossReference_1_0; }

		//ID
		public RuleCall getFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1() { return cFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1; }

		//("." internalFeature=[ecore::EStructuralFeature])?
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//internalFeature=[ecore::EStructuralFeature]
		public Assignment getInternalFeatureAssignment_2_1() { return cInternalFeatureAssignment_2_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getInternalFeatureEStructuralFeatureCrossReference_2_1_0() { return cInternalFeatureEStructuralFeatureCrossReference_2_1_0; }

		//ID
		public RuleCall getInternalFeatureEStructuralFeatureIDTerminalRuleCall_2_1_0_1() { return cInternalFeatureEStructuralFeatureIDTerminalRuleCall_2_1_0_1; }

		//op=filterOperation
		public Assignment getOpAssignment_3() { return cOpAssignment_3; }

		//filterOperation
		public RuleCall getOpFilterOperationParserRuleCall_3_0() { return cOpFilterOperationParserRuleCall_3_0; }

		//dxobj=[ecore::EObject]
		public Assignment getDxobjAssignment_4() { return cDxobjAssignment_4; }

		//[ecore::EObject]
		public CrossReference getDxobjEObjectCrossReference_4_0() { return cDxobjEObjectCrossReference_4_0; }

		//ID
		public RuleCall getDxobjEObjectIDTerminalRuleCall_4_0_1() { return cDxobjEObjectIDTerminalRuleCall_4_0_1; }

		//("." dxgetters=[ecore::EStructuralFeature])?
		public Group getGroup_5() { return cGroup_5; }

		//"."
		public Keyword getFullStopKeyword_5_0() { return cFullStopKeyword_5_0; }

		//dxgetters=[ecore::EStructuralFeature]
		public Assignment getDxgettersAssignment_5_1() { return cDxgettersAssignment_5_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getDxgettersEStructuralFeatureCrossReference_5_1_0() { return cDxgettersEStructuralFeatureCrossReference_5_1_0; }

		//ID
		public RuleCall getDxgettersEStructuralFeatureIDTerminalRuleCall_5_1_0_1() { return cDxgettersEStructuralFeatureIDTerminalRuleCall_5_1_0_1; }
	}

	public class FilterOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "filterOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSTRINGAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cOperatorAlternatives_1_0 = (Alternatives)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cOperatorEqualsSignKeyword_1_0_0 = (Keyword)cOperatorAlternatives_1_0.eContents().get(0);
		private final Keyword cOperatorLessThanSignGreaterThanSignKeyword_1_0_1 = (Keyword)cOperatorAlternatives_1_0.eContents().get(1);
		private final Keyword cOperatorColonEqualsSignKeyword_1_0_2 = (Keyword)cOperatorAlternatives_1_0.eContents().get(2);
		private final Keyword cOperatorContainsKeyword_1_0_3 = (Keyword)cOperatorAlternatives_1_0.eContents().get(3);
		
		//filterOperation returns STRING:
		//	{STRING} operator=("=" | "<>" | ":=" | "contains:");
		public ParserRule getRule() { return rule; }

		//{STRING} operator=("=" | "<>" | ":=" | "contains:")
		public Group getGroup() { return cGroup; }

		//{STRING}
		public Action getSTRINGAction_0() { return cSTRINGAction_0; }

		//operator=("=" | "<>" | ":=" | "contains:")
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }

		//"=" | "<>" | ":=" | "contains:"
		public Alternatives getOperatorAlternatives_1_0() { return cOperatorAlternatives_1_0; }

		//"="
		public Keyword getOperatorEqualsSignKeyword_1_0_0() { return cOperatorEqualsSignKeyword_1_0_0; }

		//"<>"
		public Keyword getOperatorLessThanSignGreaterThanSignKeyword_1_0_1() { return cOperatorLessThanSignGreaterThanSignKeyword_1_0_1; }

		//":="
		public Keyword getOperatorColonEqualsSignKeyword_1_0_2() { return cOperatorColonEqualsSignKeyword_1_0_2; }

		//"contains:"
		public Keyword getOperatorContainsKeyword_1_0_3() { return cOperatorContainsKeyword_1_0_3; }
	}
	
	
	private ModelElements pModel;
	private PackageSettersElements pPackageSetters;
	private PackageSetters_defElements pPackageSetters_def;
	private SetNsUriElements pSetNsUri;
	private SetNsUri_defElements pSetNsUri_def;
	private SetNsPrefixElements pSetNsPrefix;
	private SetNsPrefix_defElements pSetNsPrefix_def;
	private CHANGEPACKAGEElements pCHANGEPACKAGE;
	private ADDPACKAGEElements pADDPACKAGE;
	private DELETEPACKAGEElements pDELETEPACKAGE;
	private PackageOpElements pPackageOp;
	private OpDefElements pOpDef;
	private PackageElements pPackage;
	private CHANGECLASSElements pCHANGECLASS;
	private ADDCLASSElements pADDCLASS;
	private DELETECLASSElements pDELETECLASS;
	private ClassSetterElements pClassSetter;
	private ClassSetters_defElements pClassSetters_def;
	private ClassOpElements pClassOp;
	private ClassElements pClass;
	private ClassifierElements pClassifier;
	private EStructuralFeatureOpElements pEStructuralFeatureOp;
	private CHANGEATTRIBUTEElements pCHANGEATTRIBUTE;
	private ADDATTRIBUTEElements pADDATTRIBUTE;
	private DELETEATTRIBUTEElements pDELETEATTRIBUTE;
	private RENAMEATTRIBUTEElements pRENAMEATTRIBUTE;
	private MOVEATTRIBUTEElements pMOVEATTRIBUTE;
	private FeatureSettersElements pFeatureSetters;
	private AttributeOpElements pAttributeOp;
	private AttributeElements pAttribute;
	private CHANGEREFERENCEElements pCHANGEREFERENCE;
	private ADDREFERENCEElements pADDREFERENCE;
	private DELETEREFERENCEElements pDELETEREFERENCE;
	private MOVEREFERENCEElements pMOVEREFERENCE;
	private FeatureSetters_defElements pFeatureSetters_def;
	private ReferenceOpElements pReferenceOp;
	private ReferenceElements pReference;
	private EStringElements pEString;
	private EBooleanElements pEBoolean;
	private EIntElements pEInt;
	private ComplexOperatorElements pComplexOperator;
	private ParameterElements pParameter;
	private EReferenceParElements pEReferencePar;
	private EAttributeParElements pEAttributePar;
	private EClassParElements pEClassPar;
	private EPackageParElements pEPackagePar;
	private EIntParElements pEIntPar;
	private EStringParElements pEStringPar;
	private EBoolParElements pEBoolPar;
	private CallOperatorElements pCallOperator;
	private ArgumentElements pArgument;
	private MigrationProgramElements pMigrationProgram;
	private RuleElements pRule;
	private RewritingRuleElements pRewritingRule;
	private MigratorSXElements pMigratorSX;
	private MigratorDXElements pMigratorDX;
	private FilterMigratorElements pFilterMigrator;
	private FilterOperationElements pFilterOperation;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MigrationGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////import "/it.univaq.coevolution.migration/src/it/univaq/coevolution/ATL.ecore" as atl
	//
	//Model:
	//	packages+=PackageOp* | "Library" title=STRING "{" operators+=ComplexOperator* "}" | MigrationProgr=MigrationProgram;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	///////////////////////////EDELTA grammar//////////////////////////////
	//
	///////////////////////package setters////////////////////////////////////
	//
	////packageSetters:set=setNsUri|set=setNsPrefix;
	//
	//packageSetters:
	//	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
	//	valueRef+=[ecore::EObject])* ";";
	public PackageSettersElements getPackageSettersAccess() {
		return (pPackageSetters != null) ? pPackageSetters : (pPackageSetters = new PackageSettersElements());
	}
	
	public ParserRule getPackageSettersRule() {
		return getPackageSettersAccess().getRule();
	}

	////packageSetters_def:set=setNsUri_def|set=setNsPrefix_def;
	//
	//packageSetters_def:
	//	"set" metafeature=[ecore::EStructuralFeature] ":=" "STRING" par=ID ";";
	public PackageSetters_defElements getPackageSetters_defAccess() {
		return (pPackageSetters_def != null) ? pPackageSetters_def : (pPackageSetters_def = new PackageSetters_defElements());
	}
	
	public ParserRule getPackageSetters_defRule() {
		return getPackageSetters_defAccess().getRule();
	}

	//setNsUri:
	//	op="setNsUri(" nsURI=STRING ");";
	public SetNsUriElements getSetNsUriAccess() {
		return (pSetNsUri != null) ? pSetNsUri : (pSetNsUri = new SetNsUriElements());
	}
	
	public ParserRule getSetNsUriRule() {
		return getSetNsUriAccess().getRule();
	}

	//setNsUri_def:
	//	op="setNsUri(" "STRING" nsUri=ID ");";
	public SetNsUri_defElements getSetNsUri_defAccess() {
		return (pSetNsUri_def != null) ? pSetNsUri_def : (pSetNsUri_def = new SetNsUri_defElements());
	}
	
	public ParserRule getSetNsUri_defRule() {
		return getSetNsUri_defAccess().getRule();
	}

	//setNsPrefix:
	//	op="setNsPrefix(" nsPrefix=STRING ");";
	public SetNsPrefixElements getSetNsPrefixAccess() {
		return (pSetNsPrefix != null) ? pSetNsPrefix : (pSetNsPrefix = new SetNsPrefixElements());
	}
	
	public ParserRule getSetNsPrefixRule() {
		return getSetNsPrefixAccess().getRule();
	}

	//setNsPrefix_def:
	//	op="setNsPrefix(" "STRING" nsPrefix=ID ");";
	public SetNsPrefix_defElements getSetNsPrefix_defAccess() {
		return (pSetNsPrefix_def != null) ? pSetNsPrefix_def : (pSetNsPrefix_def = new SetNsPrefix_defElements());
	}
	
	public ParserRule getSetNsPrefix_defRule() {
		return getSetNsPrefix_defAccess().getRule();
	}

	//////////////////////package operations////////////////////////
	//
	////Op:PackageOp|ClassOp|AttributeOp|ReferenceOp;
	//
	//CHANGEPACKAGE:
	//	op="changePackage(" ref=[ecore::EPackage] ")";
	public CHANGEPACKAGEElements getCHANGEPACKAGEAccess() {
		return (pCHANGEPACKAGE != null) ? pCHANGEPACKAGE : (pCHANGEPACKAGE = new CHANGEPACKAGEElements());
	}
	
	public ParserRule getCHANGEPACKAGERule() {
		return getCHANGEPACKAGEAccess().getRule();
	}

	//ADDPACKAGE:
	//	op="addPackage(" new=STRING ")";
	public ADDPACKAGEElements getADDPACKAGEAccess() {
		return (pADDPACKAGE != null) ? pADDPACKAGE : (pADDPACKAGE = new ADDPACKAGEElements());
	}
	
	public ParserRule getADDPACKAGERule() {
		return getADDPACKAGEAccess().getRule();
	}

	////ADDPACKAGE_DEF:"addPackage(" ref+=Package ")";
	//
	//DELETEPACKAGE:
	//	op="deletePackage(" ref=[ecore::EPackage] ")";
	public DELETEPACKAGEElements getDELETEPACKAGEAccess() {
		return (pDELETEPACKAGE != null) ? pDELETEPACKAGE : (pDELETEPACKAGE = new DELETEPACKAGEElements());
	}
	
	public ParserRule getDELETEPACKAGERule() {
		return getDELETEPACKAGEAccess().getRule();
	}

	////DELETEPACKAGE_DEF:"deletePackage(package "ref+=Package")";
	//
	//PackageOp:
	//	("package" var=Package "=") ((op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters |
	//	classes+=ClassOp)* "}" | ";") | complex+=CallOperator);
	public PackageOpElements getPackageOpAccess() {
		return (pPackageOp != null) ? pPackageOp : (pPackageOp = new PackageOpElements());
	}
	
	public ParserRule getPackageOpRule() {
		return getPackageOpAccess().getRule();
	}

	//OpDef:
	//	(opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
	//	settersdef+=packageSetters_def* //|classes+=ClassOp_def
	//
	//	"}" | ";") | complex+=ComplexOperator) //|complex+=ComplexOperator
	//
	//	| opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
	//
	//	"}" | ";") | (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" |
	//	"deleteAttribute(" ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING
	//	":string" | "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference("
	//	ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference
	//	":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
	//	FeatureSettersdef+=featureSetters_def* "}");
	public OpDefElements getOpDefAccess() {
		return (pOpDef != null) ? pOpDef : (pOpDef = new OpDefElements());
	}
	
	public ParserRule getOpDefRule() {
		return getOpDefAccess().getRule();
	}

	//Package returns ecore::EPackage: //'(' 
	//
	//	{Package} name=ID;
	public PackageElements getPackageAccess() {
		return (pPackage != null) ? pPackage : (pPackage = new PackageElements());
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	///////////////////class operations/////////////////
	//
	////"{"
	//
	////(('setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');' )? &
	//
	//// ("setAbstract("abstract=EBoolean");")? )       
	//
	////( (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp) ( "," (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp))* )*
	//
	////    
	//
	////"}"
	//
	//CHANGECLASS:
	//	op="changeClass(" ref=[ecore::EClass] ")";
	public CHANGECLASSElements getCHANGECLASSAccess() {
		return (pCHANGECLASS != null) ? pCHANGECLASS : (pCHANGECLASS = new CHANGECLASSElements());
	}
	
	public ParserRule getCHANGECLASSRule() {
		return getCHANGECLASSAccess().getRule();
	}

	//ADDCLASS:
	//	op="addClass(" new=STRING ")";
	public ADDCLASSElements getADDCLASSAccess() {
		return (pADDCLASS != null) ? pADDCLASS : (pADDCLASS = new ADDCLASSElements());
	}
	
	public ParserRule getADDCLASSRule() {
		return getADDCLASSAccess().getRule();
	}

	//DELETECLASS:
	//	op="deleteClass(" ref=[ecore::EClass] ")";
	public DELETECLASSElements getDELETECLASSAccess() {
		return (pDELETECLASS != null) ? pDELETECLASS : (pDELETECLASS = new DELETECLASSElements());
	}
	
	public ParserRule getDELETECLASSRule() {
		return getDELETECLASSAccess().getRule();
	}

	////classSetters:set=setAbstract|set=setSuperTypes|set=setClassName;
	//
	//classSetter:
	//	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
	//	valueRef+=[ecore::EObject])* ";";
	public ClassSetterElements getClassSetterAccess() {
		return (pClassSetter != null) ? pClassSetter : (pClassSetter = new ClassSetterElements());
	}
	
	public ParserRule getClassSetterRule() {
		return getClassSetterAccess().getRule();
	}

	//classSetters_def:
	//	"set" metafeature=[ecore::EStructuralFeature] ":=" par+=Parameter ("," par+=Parameter)* ";";
	public ClassSetters_defElements getClassSetters_defAccess() {
		return (pClassSetters_def != null) ? pClassSetters_def : (pClassSetters_def = new ClassSetters_defElements());
	}
	
	public ParserRule getClassSetters_defRule() {
		return getClassSetters_defAccess().getRule();
	}

	////(type="STRING" par=ID| typeEcore+=[ecore::EDataType] par=ID) ( "," typeEcore+=[ecore::EDataType] par=ID)*";";
	//
	////classSetters_def:setAbstract_def|setSuperTypes_def|setClassName_def;
	//
	////setSuperTypes:op='setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');';
	//
	////setSuperTypes_def:op='setSuperTypes' '(' 'list' eSuperTypes+=ID  ');';
	//
	////
	//
	////
	//
	////setAbstract :op="setAbstract("abstract=EBoolean");" ; 
	//
	//// setAbstract_def:op="setAbstract(" "boolean" abstract=ID");" ;
	//
	//// 
	//
	////setClassName :op="setName("name=STRING");";
	//
	////setClassName_def:op="setName(" "string" name=ID");";
	//
	//ClassOp:
	//	("class" var=Class "=") ((op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter |
	//	attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";") //changed from change_op
	//
	//	| complex+=CallOperator);
	public ClassOpElements getClassOpAccess() {
		return (pClassOp != null) ? pClassOp : (pClassOp = new ClassOpElements());
	}
	
	public ParserRule getClassOpRule() {
		return getClassOpAccess().getRule();
	}

	//Class returns ecore::EClass:
	//	{Class} name=ID;
	public ClassElements getClassAccess() {
		return (pClass != null) ? pClass : (pClass = new ClassElements());
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}

	//Classifier returns ecore::EClassifier:
	//	{Classifier} name=ID;
	public ClassifierElements getClassifierAccess() {
		return (pClassifier != null) ? pClassifier : (pClassifier = new ClassifierElements());
	}
	
	public ParserRule getClassifierRule() {
		return getClassifierAccess().getRule();
	}

	///////////////////////eStructuralFeature///////////
	//
	//eStructuralFeatureOp:
	//	AttributeOp | ReferenceOp;
	public EStructuralFeatureOpElements getEStructuralFeatureOpAccess() {
		return (pEStructuralFeatureOp != null) ? pEStructuralFeatureOp : (pEStructuralFeatureOp = new EStructuralFeatureOpElements());
	}
	
	public ParserRule getEStructuralFeatureOpRule() {
		return getEStructuralFeatureOpAccess().getRule();
	}

	//CHANGEATTRIBUTE:
	//	"changeAttribute(" refAttr=[ecore::EAttribute] ")";
	public CHANGEATTRIBUTEElements getCHANGEATTRIBUTEAccess() {
		return (pCHANGEATTRIBUTE != null) ? pCHANGEATTRIBUTE : (pCHANGEATTRIBUTE = new CHANGEATTRIBUTEElements());
	}
	
	public ParserRule getCHANGEATTRIBUTERule() {
		return getCHANGEATTRIBUTEAccess().getRule();
	}

	//ADDATTRIBUTE:
	//	"addAttribute" "(" new=EString ")";
	public ADDATTRIBUTEElements getADDATTRIBUTEAccess() {
		return (pADDATTRIBUTE != null) ? pADDATTRIBUTE : (pADDATTRIBUTE = new ADDATTRIBUTEElements());
	}
	
	public ParserRule getADDATTRIBUTERule() {
		return getADDATTRIBUTEAccess().getRule();
	}

	//DELETEATTRIBUTE:
	//	"deleteAttribute(" refAttr=[ecore::EAttribute];
	public DELETEATTRIBUTEElements getDELETEATTRIBUTEAccess() {
		return (pDELETEATTRIBUTE != null) ? pDELETEATTRIBUTE : (pDELETEATTRIBUTE = new DELETEATTRIBUTEElements());
	}
	
	public ParserRule getDELETEATTRIBUTERule() {
		return getDELETEATTRIBUTEAccess().getRule();
	}

	//RENAMEATTRIBUTE:
	//	"renameAttribute(" refAttr=[ecore::EAttribute] "," newName=STRING ")";
	public RENAMEATTRIBUTEElements getRENAMEATTRIBUTEAccess() {
		return (pRENAMEATTRIBUTE != null) ? pRENAMEATTRIBUTE : (pRENAMEATTRIBUTE = new RENAMEATTRIBUTEElements());
	}
	
	public ParserRule getRENAMEATTRIBUTERule() {
		return getRENAMEATTRIBUTEAccess().getRule();
	}

	//MOVEATTRIBUTE:
	//	"moveAttribute(" refAttr=[ecore::EAttribute] "," dst=[ecore::EClass] ")";
	public MOVEATTRIBUTEElements getMOVEATTRIBUTEAccess() {
		return (pMOVEATTRIBUTE != null) ? pMOVEATTRIBUTE : (pMOVEATTRIBUTE = new MOVEATTRIBUTEElements());
	}
	
	public ParserRule getMOVEATTRIBUTERule() {
		return getMOVEATTRIBUTEAccess().getRule();
	}

	////FeatureSetters:setLower|setUpper|setType|setOpposite|setOwner|setName;
	//
	//FeatureSetters:
	//	"set" metafeature=[ecore::EStructuralFeature] ":=" (valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean |
	//	valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?) ("," valueRef+=[ecore::EObject])* ";";
	public FeatureSettersElements getFeatureSettersAccess() {
		return (pFeatureSetters != null) ? pFeatureSetters : (pFeatureSetters = new FeatureSettersElements());
	}
	
	public ParserRule getFeatureSettersRule() {
		return getFeatureSettersAccess().getRule();
	}

	//AttributeOp:
	//	("attribute" var=Attribute "=") ((op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE |
	//	op=MOVEATTRIBUTE) ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
	public AttributeOpElements getAttributeOpAccess() {
		return (pAttributeOp != null) ? pAttributeOp : (pAttributeOp = new AttributeOpElements());
	}
	
	public ParserRule getAttributeOpRule() {
		return getAttributeOpAccess().getRule();
	}

	//Attribute returns ecore::EAttribute:
	//	{Attribute} name=ID;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//CHANGEREFERENCE:
	//	"changeReference(" refRef=[ecore::EReference] ")";
	public CHANGEREFERENCEElements getCHANGEREFERENCEAccess() {
		return (pCHANGEREFERENCE != null) ? pCHANGEREFERENCE : (pCHANGEREFERENCE = new CHANGEREFERENCEElements());
	}
	
	public ParserRule getCHANGEREFERENCERule() {
		return getCHANGEREFERENCEAccess().getRule();
	}

	//ADDREFERENCE:
	//	"addReference(" new=EString ")";
	public ADDREFERENCEElements getADDREFERENCEAccess() {
		return (pADDREFERENCE != null) ? pADDREFERENCE : (pADDREFERENCE = new ADDREFERENCEElements());
	}
	
	public ParserRule getADDREFERENCERule() {
		return getADDREFERENCEAccess().getRule();
	}

	//DELETEREFERENCE:
	//	"deleteReference(" refRef=[ecore::EReference] ")";
	public DELETEREFERENCEElements getDELETEREFERENCEAccess() {
		return (pDELETEREFERENCE != null) ? pDELETEREFERENCE : (pDELETEREFERENCE = new DELETEREFERENCEElements());
	}
	
	public ParserRule getDELETEREFERENCERule() {
		return getDELETEREFERENCEAccess().getRule();
	}

	//MOVEREFERENCE:
	//	"moveReference(" refRef=[ecore::EReference] "," dst=[ecore::EClass] ")";
	public MOVEREFERENCEElements getMOVEREFERENCEAccess() {
		return (pMOVEREFERENCE != null) ? pMOVEREFERENCE : (pMOVEREFERENCE = new MOVEREFERENCEElements());
	}
	
	public ParserRule getMOVEREFERENCERule() {
		return getMOVEREFERENCEAccess().getRule();
	}

	//featureSetters_def:
	//	("setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
	//	":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
	//	name=EString ":string") ");";
	public FeatureSetters_defElements getFeatureSetters_defAccess() {
		return (pFeatureSetters_def != null) ? pFeatureSetters_def : (pFeatureSetters_def = new FeatureSetters_defElements());
	}
	
	public ParserRule getFeatureSetters_defRule() {
		return getFeatureSetters_defAccess().getRule();
	}

	//ReferenceOp:
	//	("reference" var=Reference "=") ((CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE)
	//	("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
	public ReferenceOpElements getReferenceOpAccess() {
		return (pReferenceOp != null) ? pReferenceOp : (pReferenceOp = new ReferenceOpElements());
	}
	
	public ParserRule getReferenceOpRule() {
		return getReferenceOpAccess().getRule();
	}

	//Reference returns ecore::EReference:
	//	{Reference} name=ID;
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	///////////////////////////////////////////
	//
	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//////////////////complex operators//////////////////////////
	//
	//ComplexOperator:
	//	"def change" name=ID ("(" params+=Parameter? ("," params+=Parameter)* ")") "{" (classOperations+=ClassOp |
	//	attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)* "}";
	public ComplexOperatorElements getComplexOperatorAccess() {
		return (pComplexOperator != null) ? pComplexOperator : (pComplexOperator = new ComplexOperatorElements());
	}
	
	public ParserRule getComplexOperatorRule() {
		return getComplexOperatorAccess().getRule();
	}

	////name=ID ":" type=[ecore::EClassifier] 
	//
	////"class" Class|"attribute" Attribute|"reference" Reference|"string" EString|"int" EInt |"bool" EBoolean
	//
	//Parameter returns ecore::EObject:
	//	EReferencePar | EAttributePar | EClassPar | EPackagePar | EStringPar | EBoolPar | EIntPar;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//EReferencePar returns ecore::EReference:
	//	{EReferencePar} name=ID ":" "Reference";
	public EReferenceParElements getEReferenceParAccess() {
		return (pEReferencePar != null) ? pEReferencePar : (pEReferencePar = new EReferenceParElements());
	}
	
	public ParserRule getEReferenceParRule() {
		return getEReferenceParAccess().getRule();
	}

	//EAttributePar returns ecore::EAttribute:
	//	{EAttributePar} name=ID ":" "Attribute";
	public EAttributeParElements getEAttributeParAccess() {
		return (pEAttributePar != null) ? pEAttributePar : (pEAttributePar = new EAttributeParElements());
	}
	
	public ParserRule getEAttributeParRule() {
		return getEAttributeParAccess().getRule();
	}

	//EClassPar returns ecore::EClass:
	//	{EClassPar} name=ID ":" "Class";
	public EClassParElements getEClassParAccess() {
		return (pEClassPar != null) ? pEClassPar : (pEClassPar = new EClassParElements());
	}
	
	public ParserRule getEClassParRule() {
		return getEClassParAccess().getRule();
	}

	//EPackagePar returns ecore::EPackage:
	//	{EPackagePar} name=ID ":" "Package";
	public EPackageParElements getEPackageParAccess() {
		return (pEPackagePar != null) ? pEPackagePar : (pEPackagePar = new EPackageParElements());
	}
	
	public ParserRule getEPackageParRule() {
		return getEPackageParAccess().getRule();
	}

	//EIntPar returns INT:
	//	name=ID ":" "Int";
	public EIntParElements getEIntParAccess() {
		return (pEIntPar != null) ? pEIntPar : (pEIntPar = new EIntParElements());
	}
	
	public ParserRule getEIntParRule() {
		return getEIntParAccess().getRule();
	}

	//EStringPar returns STRING:
	//	name=ID ":" "String";
	public EStringParElements getEStringParAccess() {
		return (pEStringPar != null) ? pEStringPar : (pEStringPar = new EStringParElements());
	}
	
	public ParserRule getEStringParRule() {
		return getEStringParAccess().getRule();
	}

	//EBoolPar:
	//	name=ID ":" "Bool";
	public EBoolParElements getEBoolParAccess() {
		return (pEBoolPar != null) ? pEBoolPar : (pEBoolPar = new EBoolParElements());
	}
	
	public ParserRule getEBoolParRule() {
		return getEBoolParAccess().getRule();
	}

	///////////call complex operator//////////////////////
	//
	//CallOperator:
	//	fun=[ComplexOperator] "(" args+=Argument? ("," args+=Argument)* ");";
	public CallOperatorElements getCallOperatorAccess() {
		return (pCallOperator != null) ? pCallOperator : (pCallOperator = new CallOperatorElements());
	}
	
	public ParserRule getCallOperatorRule() {
		return getCallOperatorAccess().getRule();
	}

	//Argument:
	//	{Argument} arg=[ecore::EObject] | STRING | INT;
	public ArgumentElements getArgumentAccess() {
		return (pArgument != null) ? pArgument : (pArgument = new ArgumentElements());
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}

	////////////////////////////////ATLMigration////////////////////////////////
	//
	//MigrationProgram:
	//	("include" libs+=STRING ";")* migr="migrate" "transformation" path=STRING ":"
	//	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
	//	rules+=Rule* "}";
	public MigrationProgramElements getMigrationProgramAccess() {
		return (pMigrationProgram != null) ? pMigrationProgram : (pMigrationProgram = new MigrationProgramElements());
	}
	
	public ParserRule getMigrationProgramRule() {
		return getMigrationProgramAccess().getRule();
	}

	//Rule:
	//	"rule" name=ID "[" filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
	public RuleElements getRuleAccess() {
		return (pRule != null) ? pRule : (pRule = new RuleElements());
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	//RewritingRule:
	//	(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)* ";";
	public RewritingRuleElements getRewritingRuleAccess() {
		return (pRewritingRule != null) ? pRewritingRule : (pRewritingRule = new RewritingRuleElements());
	}
	
	public ParserRule getRewritingRuleRule() {
		return getRewritingRuleAccess().getRule();
	}

	//MigratorSX:
	//	"<" elementSX=[ecore::EClass] name=ID ">" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)* "]";
	public MigratorSXElements getMigratorSXAccess() {
		return (pMigratorSX != null) ? pMigratorSX : (pMigratorSX = new MigratorSXElements());
	}
	
	public ParserRule getMigratorSXRule() {
		return getMigratorSXAccess().getRule();
	}

	//MigratorDX:
	//	"<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]" | "null";
	public MigratorDXElements getMigratorDXAccess() {
		return (pMigratorDX != null) ? pMigratorDX : (pMigratorDX = new MigratorDXElements());
	}
	
	public ParserRule getMigratorDXRule() {
		return getMigratorDXAccess().getRule();
	}

	//FilterMigrator:
	//	"#" feature=[ecore::EStructuralFeature] ("." internalFeature=[ecore::EStructuralFeature])? op=filterOperation
	//	dxobj=[ecore::EObject] ("." dxgetters=[ecore::EStructuralFeature])?;
	public FilterMigratorElements getFilterMigratorAccess() {
		return (pFilterMigrator != null) ? pFilterMigrator : (pFilterMigrator = new FilterMigratorElements());
	}
	
	public ParserRule getFilterMigratorRule() {
		return getFilterMigratorAccess().getRule();
	}

	//filterOperation returns STRING:
	//	{STRING} operator=("=" | "<>" | ":=" | "contains:");
	public FilterOperationElements getFilterOperationAccess() {
		return (pFilterOperation != null) ? pFilterOperation : (pFilterOperation = new FilterOperationElements());
	}
	
	public ParserRule getFilterOperationRule() {
		return getFilterOperationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
