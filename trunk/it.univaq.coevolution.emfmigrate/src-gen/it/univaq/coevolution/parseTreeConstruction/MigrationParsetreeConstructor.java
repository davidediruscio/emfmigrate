/*
* generated by Xtext
*/
package it.univaq.coevolution.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import it.univaq.coevolution.services.MigrationGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class MigrationParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private MigrationGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Alternatives(this, this, 0, inst);
			case 1: return new PackageSetters_Group(this, this, 1, inst);
			case 2: return new PackageSetters_def_Group(this, this, 2, inst);
			case 3: return new SetNsUri_Group(this, this, 3, inst);
			case 4: return new SetNsUri_def_Group(this, this, 4, inst);
			case 5: return new SetNsPrefix_Group(this, this, 5, inst);
			case 6: return new SetNsPrefix_def_Group(this, this, 6, inst);
			case 7: return new CHANGEPACKAGE_Group(this, this, 7, inst);
			case 8: return new ADDPACKAGE_Group(this, this, 8, inst);
			case 9: return new DELETEPACKAGE_Group(this, this, 9, inst);
			case 10: return new PackageOp_Group(this, this, 10, inst);
			case 11: return new OpDef_Alternatives(this, this, 11, inst);
			case 12: return new Package_Group(this, this, 12, inst);
			case 13: return new CHANGECLASS_Group(this, this, 13, inst);
			case 14: return new ADDCLASS_Group(this, this, 14, inst);
			case 15: return new DELETECLASS_Group(this, this, 15, inst);
			case 16: return new ClassSetter_Group(this, this, 16, inst);
			case 17: return new ClassSetters_def_Group(this, this, 17, inst);
			case 18: return new ClassOp_Group(this, this, 18, inst);
			case 19: return new Class_Group(this, this, 19, inst);
			case 20: return new Classifier_Group(this, this, 20, inst);
			case 21: return new EStructuralFeatureOp_Alternatives(this, this, 21, inst);
			case 22: return new CHANGEATTRIBUTE_Group(this, this, 22, inst);
			case 23: return new ADDATTRIBUTE_Group(this, this, 23, inst);
			case 24: return new DELETEATTRIBUTE_Group(this, this, 24, inst);
			case 25: return new RENAMEATTRIBUTE_Group(this, this, 25, inst);
			case 26: return new MOVEATTRIBUTE_Group(this, this, 26, inst);
			case 27: return new FeatureSetters_Group(this, this, 27, inst);
			case 28: return new AttributeOp_Group(this, this, 28, inst);
			case 29: return new Attribute_Group(this, this, 29, inst);
			case 30: return new CHANGEREFERENCE_Group(this, this, 30, inst);
			case 31: return new ADDREFERENCE_Group(this, this, 31, inst);
			case 32: return new DELETEREFERENCE_Group(this, this, 32, inst);
			case 33: return new MOVEREFERENCE_Group(this, this, 33, inst);
			case 34: return new FeatureSetters_def_Group(this, this, 34, inst);
			case 35: return new ReferenceOp_Group(this, this, 35, inst);
			case 36: return new Reference_Group(this, this, 36, inst);
			case 37: return new ComplexOperator_Group(this, this, 37, inst);
			case 38: return new Parameter_Alternatives(this, this, 38, inst);
			case 39: return new EReferencePar_Group(this, this, 39, inst);
			case 40: return new EAttributePar_Group(this, this, 40, inst);
			case 41: return new EClassPar_Group(this, this, 41, inst);
			case 42: return new EPackagePar_Group(this, this, 42, inst);
			case 43: return new EIntPar_Group(this, this, 43, inst);
			case 44: return new EStringPar_Group(this, this, 44, inst);
			case 45: return new EBoolPar_Group(this, this, 45, inst);
			case 46: return new CallOperator_Group(this, this, 46, inst);
			case 47: return new Argument_Alternatives(this, this, 47, inst);
			case 48: return new MigrationProgram_Group(this, this, 48, inst);
			case 49: return new Rule_Group(this, this, 49, inst);
			case 50: return new RewritingRule_Group(this, this, 50, inst);
			case 51: return new MigratorSX_Group(this, this, 51, inst);
			case 52: return new MigratorDX_Alternatives(this, this, 52, inst);
			case 53: return new FilterMigrator_Group(this, this, 53, inst);
			case 54: return new FilterOperation_Group(this, this, 54, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * //import "/it.univaq.coevolution.migration/src/it/univaq/coevolution/ATL.ecore" as atl
 * 
 * Model:
 * 	packages+=PackageOp* | "Library" title=STRING "{" operators+=ComplexOperator* "}" | MigrationProgr=MigrationProgram;
 *
 **/

// packages+=PackageOp* | "Library" title=STRING "{" operators+=ComplexOperator* "}" | MigrationProgr=MigrationProgram
protected class Model_Alternatives extends AlternativesToken {

	public Model_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_PackagesAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_MigrationProgrAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 3, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// packages+=PackageOp*
protected class Model_PackagesAssignment_0 extends AssignmentToken  {
	
	public Model_PackagesAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getPackagesAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("packages",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("packages");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getPackagesPackageOpParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_PackagesAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

// "Library" title=STRING "{" operators+=ComplexOperator* "}"
protected class Model_Group_1 extends GroupToken {
	
	public Model_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_RightCurlyBracketKeyword_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Library"
protected class Model_LibraryKeyword_1_0 extends KeywordToken  {
	
	public Model_LibraryKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getLibraryKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// title=STRING
protected class Model_TitleAssignment_1_1 extends AssignmentToken  {
	
	public Model_TitleAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getTitleAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_LibraryKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("title",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("title");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getTitleSTRINGTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getTitleSTRINGTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Model_LeftCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public Model_LeftCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_TitleAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operators+=ComplexOperator*
protected class Model_OperatorsAssignment_1_3 extends AssignmentToken  {
	
	public Model_OperatorsAssignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getOperatorsAssignment_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operators",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComplexOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getOperatorsComplexOperatorParserRuleCall_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_OperatorsAssignment_1_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_LeftCurlyBracketKeyword_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Model_RightCurlyBracketKeyword_1_4 extends KeywordToken  {
	
	public Model_RightCurlyBracketKeyword_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_OperatorsAssignment_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_LeftCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// MigrationProgr=MigrationProgram
protected class Model_MigrationProgrAssignment_2 extends AssignmentToken  {
	
	public Model_MigrationProgrAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getMigrationProgrAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("MigrationProgr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("MigrationProgr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getMigrationProgrMigrationProgramParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


/************ end Rule Model ****************/


/************ begin Rule packageSetters ****************
 *
 * /////////////////////////EDELTA grammar//////////////////////////////
 * 
 * /////////////////////package setters////////////////////////////////////
 * 
 * //packageSetters:set=setNsUri|set=setNsPrefix;
 * 
 * packageSetters:
 * 	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
 * 	valueRef+=[ecore::EObject])* ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
// valueRef+=[ecore::EObject])* ";"
protected class PackageSetters_Group extends GroupToken {
	
	public PackageSetters_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageSettersRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class PackageSetters_SetKeyword_0 extends KeywordToken  {
	
	public PackageSetters_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class PackageSetters_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public PackageSetters_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSettersAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageSettersAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":="
protected class PackageSetters_ColonEqualsSignKeyword_2 extends KeywordToken  {
	
	public PackageSetters_ColonEqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getColonEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=STRING | valueRef+=[ecore::EObject]
protected class PackageSetters_Alternatives_3 extends AlternativesToken {

	public PackageSetters_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_ValueAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageSetters_ValueRefAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// value=STRING
protected class PackageSetters_ValueAssignment_3_0 extends AssignmentToken  {
	
	public PackageSetters_ValueAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getValueAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageSettersAccess().getValueSTRINGTerminalRuleCall_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPackageSettersAccess().getValueSTRINGTerminalRuleCall_3_0_0();
			return obj;
		}
		return null;
	}

}

// valueRef+=[ecore::EObject]
protected class PackageSetters_ValueRefAssignment_3_1 extends AssignmentToken  {
	
	public PackageSetters_ValueRefAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getValueRefAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSettersAccess().getValueRefEObjectCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageSettersAccess().getValueRefEObjectCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("," valueRef+=[ecore::EObject])*
protected class PackageSetters_Group_4 extends GroupToken {
	
	public PackageSetters_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_ValueRefAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class PackageSetters_CommaKeyword_4_0 extends KeywordToken  {
	
	public PackageSetters_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageSetters_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// valueRef+=[ecore::EObject]
protected class PackageSetters_ValueRefAssignment_4_1 extends AssignmentToken  {
	
	public PackageSetters_ValueRefAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getValueRefAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_CommaKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSettersAccess().getValueRefEObjectCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageSettersAccess().getValueRefEObjectCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class PackageSetters_SemicolonKeyword_5 extends KeywordToken  {
	
	public PackageSetters_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSettersAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageSetters_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule packageSetters ****************/


/************ begin Rule packageSetters_def ****************
 *
 * //packageSetters_def:set=setNsUri_def|set=setNsPrefix_def;
 * 
 * packageSetters_def:
 * 	"set" metafeature=[ecore::EStructuralFeature] ":=" "STRING" par=ID ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] ":=" "STRING" par=ID ";"
protected class PackageSetters_def_Group extends GroupToken {
	
	public PackageSetters_def_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageSetters_defRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class PackageSetters_def_SetKeyword_0 extends KeywordToken  {
	
	public PackageSetters_def_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class PackageSetters_def_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public PackageSetters_def_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSetters_defAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageSetters_defAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":="
protected class PackageSetters_def_ColonEqualsSignKeyword_2 extends KeywordToken  {
	
	public PackageSetters_def_ColonEqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getColonEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "STRING"
protected class PackageSetters_def_STRINGKeyword_3 extends KeywordToken  {
	
	public PackageSetters_def_STRINGKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getSTRINGKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// par=ID
protected class PackageSetters_def_ParAssignment_4 extends AssignmentToken  {
	
	public PackageSetters_def_ParAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getParAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_STRINGKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("par",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("par");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageSetters_defAccess().getParIDTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPackageSetters_defAccess().getParIDTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class PackageSetters_def_SemicolonKeyword_5 extends KeywordToken  {
	
	public PackageSetters_def_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageSetters_defAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_ParAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule packageSetters_def ****************/


/************ begin Rule setNsUri ****************
 *
 * setNsUri:
 * 	op="setNsUri(" nsURI=STRING ");";
 *
 **/

// op="setNsUri(" nsURI=STRING ");"
protected class SetNsUri_Group extends GroupToken {
	
	public SetNsUri_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetNsUriAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_RightParenthesisSemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetNsUriRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="setNsUri("
protected class SetNsUri_OpAssignment_0 extends AssignmentToken  {
	
	public SetNsUri_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsUriAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsUriAccess().getOpSetNsUriKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSetNsUriAccess().getOpSetNsUriKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// nsURI=STRING
protected class SetNsUri_NsURIAssignment_1 extends AssignmentToken  {
	
	public SetNsUri_NsURIAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsUriAccess().getNsURIAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nsURI",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nsURI");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsUriAccess().getNsURISTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetNsUriAccess().getNsURISTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ");"
protected class SetNsUri_RightParenthesisSemicolonKeyword_2 extends KeywordToken  {
	
	public SetNsUri_RightParenthesisSemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsUriAccess().getRightParenthesisSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_NsURIAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule setNsUri ****************/


/************ begin Rule setNsUri_def ****************
 *
 * setNsUri_def:
 * 	op="setNsUri(" "STRING" nsUri=ID ");";
 *
 **/

// op="setNsUri(" "STRING" nsUri=ID ");"
protected class SetNsUri_def_Group extends GroupToken {
	
	public SetNsUri_def_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetNsUri_defAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_def_RightParenthesisSemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetNsUri_defRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="setNsUri("
protected class SetNsUri_def_OpAssignment_0 extends AssignmentToken  {
	
	public SetNsUri_def_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsUri_defAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsUri_defAccess().getOpSetNsUriKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSetNsUri_defAccess().getOpSetNsUriKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// "STRING"
protected class SetNsUri_def_STRINGKeyword_1 extends KeywordToken  {
	
	public SetNsUri_def_STRINGKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsUri_defAccess().getSTRINGKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_def_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nsUri=ID
protected class SetNsUri_def_NsUriAssignment_2 extends AssignmentToken  {
	
	public SetNsUri_def_NsUriAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsUri_defAccess().getNsUriAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_def_STRINGKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nsUri",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nsUri");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsUri_defAccess().getNsUriIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetNsUri_defAccess().getNsUriIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ");"
protected class SetNsUri_def_RightParenthesisSemicolonKeyword_3 extends KeywordToken  {
	
	public SetNsUri_def_RightParenthesisSemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsUri_defAccess().getRightParenthesisSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsUri_def_NsUriAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule setNsUri_def ****************/


/************ begin Rule setNsPrefix ****************
 *
 * setNsPrefix:
 * 	op="setNsPrefix(" nsPrefix=STRING ");";
 *
 **/

// op="setNsPrefix(" nsPrefix=STRING ");"
protected class SetNsPrefix_Group extends GroupToken {
	
	public SetNsPrefix_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetNsPrefixAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_RightParenthesisSemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetNsPrefixRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="setNsPrefix("
protected class SetNsPrefix_OpAssignment_0 extends AssignmentToken  {
	
	public SetNsPrefix_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsPrefixAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsPrefixAccess().getOpSetNsPrefixKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSetNsPrefixAccess().getOpSetNsPrefixKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// nsPrefix=STRING
protected class SetNsPrefix_NsPrefixAssignment_1 extends AssignmentToken  {
	
	public SetNsPrefix_NsPrefixAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsPrefixAccess().getNsPrefixAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nsPrefix",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nsPrefix");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsPrefixAccess().getNsPrefixSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetNsPrefixAccess().getNsPrefixSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ");"
protected class SetNsPrefix_RightParenthesisSemicolonKeyword_2 extends KeywordToken  {
	
	public SetNsPrefix_RightParenthesisSemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsPrefixAccess().getRightParenthesisSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_NsPrefixAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule setNsPrefix ****************/


/************ begin Rule setNsPrefix_def ****************
 *
 * setNsPrefix_def:
 * 	op="setNsPrefix(" "STRING" nsPrefix=ID ");";
 *
 **/

// op="setNsPrefix(" "STRING" nsPrefix=ID ");"
protected class SetNsPrefix_def_Group extends GroupToken {
	
	public SetNsPrefix_def_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetNsPrefix_defAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_def_RightParenthesisSemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetNsPrefix_defRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="setNsPrefix("
protected class SetNsPrefix_def_OpAssignment_0 extends AssignmentToken  {
	
	public SetNsPrefix_def_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsPrefix_defAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsPrefix_defAccess().getOpSetNsPrefixKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSetNsPrefix_defAccess().getOpSetNsPrefixKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// "STRING"
protected class SetNsPrefix_def_STRINGKeyword_1 extends KeywordToken  {
	
	public SetNsPrefix_def_STRINGKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsPrefix_defAccess().getSTRINGKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_def_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nsPrefix=ID
protected class SetNsPrefix_def_NsPrefixAssignment_2 extends AssignmentToken  {
	
	public SetNsPrefix_def_NsPrefixAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetNsPrefix_defAccess().getNsPrefixAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_def_STRINGKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nsPrefix",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nsPrefix");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetNsPrefix_defAccess().getNsPrefixIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetNsPrefix_defAccess().getNsPrefixIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ");"
protected class SetNsPrefix_def_RightParenthesisSemicolonKeyword_3 extends KeywordToken  {
	
	public SetNsPrefix_def_RightParenthesisSemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetNsPrefix_defAccess().getRightParenthesisSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetNsPrefix_def_NsPrefixAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule setNsPrefix_def ****************/


/************ begin Rule CHANGEPACKAGE ****************
 *
 * ////////////////////package operations////////////////////////
 * 
 * //Op:PackageOp|ClassOp|AttributeOp|ReferenceOp;
 * 
 * CHANGEPACKAGE:
 * 	op="changePackage(" ref=[ecore::EPackage] ")";
 *
 **/

// op="changePackage(" ref=[ecore::EPackage] ")"
protected class CHANGEPACKAGE_Group extends GroupToken {
	
	public CHANGEPACKAGE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCHANGEPACKAGEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEPACKAGE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCHANGEPACKAGERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="changePackage("
protected class CHANGEPACKAGE_OpAssignment_0 extends AssignmentToken  {
	
	public CHANGEPACKAGE_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGEPACKAGEAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getCHANGEPACKAGEAccess().getOpChangePackageKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getCHANGEPACKAGEAccess().getOpChangePackageKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// ref=[ecore::EPackage]
protected class CHANGEPACKAGE_RefAssignment_1 extends AssignmentToken  {
	
	public CHANGEPACKAGE_RefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGEPACKAGEAccess().getRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEPACKAGE_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEPACKAGEAccess().getRefEPackageCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCHANGEPACKAGEAccess().getRefEPackageCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class CHANGEPACKAGE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public CHANGEPACKAGE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGEPACKAGEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEPACKAGE_RefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CHANGEPACKAGE ****************/


/************ begin Rule ADDPACKAGE ****************
 *
 * ADDPACKAGE:
 * 	op="addPackage(" new=STRING ")";
 *
 **/

// op="addPackage(" new=STRING ")"
protected class ADDPACKAGE_Group extends GroupToken {
	
	public ADDPACKAGE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getADDPACKAGEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDPACKAGE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getADDPACKAGERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="addPackage("
protected class ADDPACKAGE_OpAssignment_0 extends AssignmentToken  {
	
	public ADDPACKAGE_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDPACKAGEAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getADDPACKAGEAccess().getOpAddPackageKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getADDPACKAGEAccess().getOpAddPackageKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// new=STRING
protected class ADDPACKAGE_NewAssignment_1 extends AssignmentToken  {
	
	public ADDPACKAGE_NewAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDPACKAGEAccess().getNewAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDPACKAGE_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("new",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("new");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getADDPACKAGEAccess().getNewSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getADDPACKAGEAccess().getNewSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ADDPACKAGE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public ADDPACKAGE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDPACKAGEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDPACKAGE_NewAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ADDPACKAGE ****************/


/************ begin Rule DELETEPACKAGE ****************
 *
 * //ADDPACKAGE_DEF:"addPackage(" ref+=Package ")";
 * 
 * DELETEPACKAGE:
 * 	op="deletePackage(" ref=[ecore::EPackage] ")";
 *
 **/

// op="deletePackage(" ref=[ecore::EPackage] ")"
protected class DELETEPACKAGE_Group extends GroupToken {
	
	public DELETEPACKAGE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDELETEPACKAGEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEPACKAGE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDELETEPACKAGERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="deletePackage("
protected class DELETEPACKAGE_OpAssignment_0 extends AssignmentToken  {
	
	public DELETEPACKAGE_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETEPACKAGEAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getDELETEPACKAGEAccess().getOpDeletePackageKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDELETEPACKAGEAccess().getOpDeletePackageKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// ref=[ecore::EPackage]
protected class DELETEPACKAGE_RefAssignment_1 extends AssignmentToken  {
	
	public DELETEPACKAGE_RefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETEPACKAGEAccess().getRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEPACKAGE_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEPACKAGEAccess().getRefEPackageCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDELETEPACKAGEAccess().getRefEPackageCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class DELETEPACKAGE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public DELETEPACKAGE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDELETEPACKAGEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEPACKAGE_RefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DELETEPACKAGE ****************/


/************ begin Rule PackageOp ****************
 *
 * //DELETEPACKAGE_DEF:"deletePackage(package "ref+=Package")";
 * 
 * PackageOp:
 * 	("package" var=Package "=") ((op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters |
 * 	classes+=ClassOp)* "}" | ";") | complex+=CallOperator);
 *
 **/

// ("package" var=Package "=") ((op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters |
// classes+=ClassOp)* "}" | ";") | complex+=CallOperator)
protected class PackageOp_Group extends GroupToken {
	
	public PackageOp_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageOpRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "package" var=Package "="
protected class PackageOp_Group_0 extends GroupToken {
	
	public PackageOp_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "package"
protected class PackageOp_PackageKeyword_0_0 extends KeywordToken  {
	
	public PackageOp_PackageKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getPackageKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Package
protected class PackageOp_VarAssignment_0_1 extends AssignmentToken  {
	
	public PackageOp_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getVarPackageParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_PackageKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class PackageOp_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public PackageOp_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";") |
// complex+=CallOperator
protected class PackageOp_Alternatives_1 extends AlternativesToken {

	public PackageOp_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageOp_ComplexAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE) ("{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";")
protected class PackageOp_Group_1_0 extends GroupToken {
	
	public PackageOp_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op=CHANGEPACKAGE | op=ADDPACKAGE | op=DELETEPACKAGE
protected class PackageOp_Alternatives_1_0_0 extends AlternativesToken {

	public PackageOp_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_OpAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageOp_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PackageOp_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op=CHANGEPACKAGE
protected class PackageOp_OpAssignment_1_0_0_0 extends AssignmentToken  {
	
	public PackageOp_OpAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getOpAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEPACKAGE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEPACKAGERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getOpCHANGEPACKAGEParserRuleCall_1_0_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=ADDPACKAGE
protected class PackageOp_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public PackageOp_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDPACKAGE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getADDPACKAGERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getOpADDPACKAGEParserRuleCall_1_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=DELETEPACKAGE
protected class PackageOp_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public PackageOp_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEPACKAGE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEPACKAGERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getOpDELETEPACKAGEParserRuleCall_1_0_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "{" (setters+=packageSetters | classes+=ClassOp)* "}" | ";"
protected class PackageOp_Alternatives_1_0_1 extends AlternativesToken {

	public PackageOp_Alternatives_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getAlternatives_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Group_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageOp_SemicolonKeyword_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" (setters+=packageSetters | classes+=ClassOp)* "}"
protected class PackageOp_Group_1_0_1_0 extends GroupToken {
	
	public PackageOp_Group_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getGroup_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_RightCurlyBracketKeyword_1_0_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class PackageOp_LeftCurlyBracketKeyword_1_0_1_0_0 extends KeywordToken  {
	
	public PackageOp_LeftCurlyBracketKeyword_1_0_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getLeftCurlyBracketKeyword_1_0_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (setters+=packageSetters | classes+=ClassOp)*
protected class PackageOp_Alternatives_1_0_1_0_1 extends AlternativesToken {

	public PackageOp_Alternatives_1_0_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getAlternatives_1_0_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_SettersAssignment_1_0_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PackageOp_ClassesAssignment_1_0_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// setters+=packageSetters
protected class PackageOp_SettersAssignment_1_0_1_0_1_0 extends AssignmentToken  {
	
	public PackageOp_SettersAssignment_1_0_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getSettersAssignment_1_0_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSettersRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getSettersPackageSettersParserRuleCall_1_0_1_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PackageOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// classes+=ClassOp
protected class PackageOp_ClassesAssignment_1_0_1_0_1_1 extends AssignmentToken  {
	
	public PackageOp_ClassesAssignment_1_0_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getClassesAssignment_1_0_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getClassesClassOpParserRuleCall_1_0_1_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PackageOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class PackageOp_RightCurlyBracketKeyword_1_0_1_0_2 extends KeywordToken  {
	
	public PackageOp_RightCurlyBracketKeyword_1_0_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getRightCurlyBracketKeyword_1_0_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class PackageOp_SemicolonKeyword_1_0_1_1 extends KeywordToken  {
	
	public PackageOp_SemicolonKeyword_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getSemicolonKeyword_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// complex+=CallOperator
protected class PackageOp_ComplexAssignment_1_1 extends AssignmentToken  {
	
	public PackageOp_ComplexAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageOpAccess().getComplexAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("complex",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("complex");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPackageOpAccess().getComplexCallOperatorParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PackageOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule PackageOp ****************/


/************ begin Rule OpDef ****************
 *
 * OpDef:
 * 	(opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
 * 	settersdef+=packageSetters_def* //|classes+=ClassOp_def
 * 
 * 	"}" | ";") | complex+=ComplexOperator) //|complex+=ComplexOperator
 * 
 * 	| opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
 * 
 * 	"}" | ";") | (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" |
 * 	"deleteAttribute(" ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING
 * 	":string" | "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference("
 * 	ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference
 * 	":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
 * 	FeatureSettersdef+=featureSetters_def* "}");
 *
 **/

// (opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
// settersdef+=packageSetters_def* //|classes+=ClassOp_def
// 
// "}" | ";") | complex+=ComplexOperator) //|complex+=ComplexOperator
// 
// | opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
// 
// "}" | ";") | (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" |
// "deleteAttribute(" ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING
// ":string" | "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
// ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
// "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
// FeatureSettersdef+=featureSetters_def* "}")
protected class OpDef_Alternatives extends AlternativesToken {

	public OpDef_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new OpDef_Group_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOpDefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
// settersdef+=packageSetters_def* //|classes+=ClassOp_def
// 
// "}" | ";") | complex+=ComplexOperator
protected class OpDef_Alternatives_0 extends AlternativesToken {

	public OpDef_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_ComplexAssignment_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// opdef=("changePackage(" | "addPackage(" | "deletePackage(") (ref=Package ":package" ")") ("{"
// settersdef+=packageSetters_def* //|classes+=ClassOp_def
// 
// "}" | ";")
protected class OpDef_Group_0_0 extends GroupToken {
	
	public OpDef_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_0_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// opdef=("changePackage(" | "addPackage(" | "deletePackage(")
protected class OpDef_OpdefAssignment_0_0_0 extends AssignmentToken  {
	
	public OpDef_OpdefAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getOpdefAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("opdef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("opdef");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefChangePackageKeyword_0_0_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefChangePackageKeyword_0_0_0_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefAddPackageKeyword_0_0_0_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefAddPackageKeyword_0_0_0_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefDeletePackageKeyword_0_0_0_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefDeletePackageKeyword_0_0_0_0_2();
			return obj;
		}
		return null;
	}

}

// ref=Package ":package" ")"
protected class OpDef_Group_0_0_1 extends GroupToken {
	
	public OpDef_Group_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightParenthesisKeyword_0_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Package
protected class OpDef_RefAssignment_0_0_1_0 extends AssignmentToken  {
	
	public OpDef_RefAssignment_0_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_0_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefPackageParserRuleCall_0_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_OpdefAssignment_0_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":package"
protected class OpDef_PackageKeyword_0_0_1_1 extends KeywordToken  {
	
	public OpDef_PackageKeyword_0_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getPackageKeyword_0_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_0_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ")"
protected class OpDef_RightParenthesisKeyword_0_0_1_2 extends KeywordToken  {
	
	public OpDef_RightParenthesisKeyword_0_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightParenthesisKeyword_0_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_PackageKeyword_0_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "{" settersdef+=packageSetters_def* //|classes+=ClassOp_def
// 
// "}" | ";"
protected class OpDef_Alternatives_0_0_2 extends AlternativesToken {

	public OpDef_Alternatives_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_0_0_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_SemicolonKeyword_0_0_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" settersdef+=packageSetters_def* //|classes+=ClassOp_def
// 
// "}"
protected class OpDef_Group_0_0_2_0 extends GroupToken {
	
	public OpDef_Group_0_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_0_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightCurlyBracketKeyword_0_0_2_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class OpDef_LeftCurlyBracketKeyword_0_0_2_0_0 extends KeywordToken  {
	
	public OpDef_LeftCurlyBracketKeyword_0_0_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getLeftCurlyBracketKeyword_0_0_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// settersdef+=packageSetters_def*
protected class OpDef_SettersdefAssignment_0_0_2_0_1 extends AssignmentToken  {
	
	public OpDef_SettersdefAssignment_0_0_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getSettersdefAssignment_0_0_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageSetters_def_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("settersdef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("settersdef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageSetters_defRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getSettersdefPackageSetters_defParserRuleCall_0_0_2_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_SettersdefAssignment_0_0_2_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new OpDef_LeftCurlyBracketKeyword_0_0_2_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class OpDef_RightCurlyBracketKeyword_0_0_2_0_2 extends KeywordToken  {
	
	public OpDef_RightCurlyBracketKeyword_0_0_2_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightCurlyBracketKeyword_0_0_2_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_SettersdefAssignment_0_0_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class OpDef_SemicolonKeyword_0_0_2_1 extends KeywordToken  {
	
	public OpDef_SemicolonKeyword_0_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getSemicolonKeyword_0_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// complex+=ComplexOperator
protected class OpDef_ComplexAssignment_0_1 extends AssignmentToken  {
	
	public OpDef_ComplexAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getComplexAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("complex",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("complex");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComplexOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getComplexComplexOperatorParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


// opdef=("changeClass(" | "addClass(" | "deleteClass(") ref=Class ":class" ")" ("{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
// 
// "}" | ";")
protected class OpDef_Group_1 extends GroupToken {
	
	public OpDef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// opdef=("changeClass(" | "addClass(" | "deleteClass(")
protected class OpDef_OpdefAssignment_1_0 extends AssignmentToken  {
	
	public OpDef_OpdefAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getOpdefAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("opdef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("opdef");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefChangeClassKeyword_1_0_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefChangeClassKeyword_1_0_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefAddClassKeyword_1_0_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefAddClassKeyword_1_0_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getOpdefDeleteClassKeyword_1_0_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getOpDefAccess().getOpdefDeleteClassKeyword_1_0_0_2();
			return obj;
		}
		return null;
	}

}

// ref=Class
protected class OpDef_RefAssignment_1_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefClassParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_OpdefAssignment_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":class"
protected class OpDef_ClassKeyword_1_2 extends KeywordToken  {
	
	public OpDef_ClassKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getClassKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ")"
protected class OpDef_RightParenthesisKeyword_1_3 extends KeywordToken  {
	
	public OpDef_RightParenthesisKeyword_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightParenthesisKeyword_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ClassKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
// 
// "}" | ";"
protected class OpDef_Alternatives_1_4 extends AlternativesToken {

	public OpDef_Alternatives_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_1_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_SemicolonKeyword_1_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" settersdef+=classSetters_def* //|attributes+= AttributeOp|references+=ReferenceOp
// 
// "}"
protected class OpDef_Group_1_4_0 extends GroupToken {
	
	public OpDef_Group_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightCurlyBracketKeyword_1_4_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class OpDef_LeftCurlyBracketKeyword_1_4_0_0 extends KeywordToken  {
	
	public OpDef_LeftCurlyBracketKeyword_1_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getLeftCurlyBracketKeyword_1_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightParenthesisKeyword_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// settersdef+=classSetters_def*
protected class OpDef_SettersdefAssignment_1_4_0_1 extends AssignmentToken  {
	
	public OpDef_SettersdefAssignment_1_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getSettersdefAssignment_1_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("settersdef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("settersdef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetters_defRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getSettersdefClassSetters_defParserRuleCall_1_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_SettersdefAssignment_1_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new OpDef_LeftCurlyBracketKeyword_1_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class OpDef_RightCurlyBracketKeyword_1_4_0_2 extends KeywordToken  {
	
	public OpDef_RightCurlyBracketKeyword_1_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightCurlyBracketKeyword_1_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_SettersdefAssignment_1_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class OpDef_SemicolonKeyword_1_4_1 extends KeywordToken  {
	
	public OpDef_SemicolonKeyword_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getSemicolonKeyword_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightParenthesisKeyword_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
// ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
// "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
// ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
// "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")") (";" | "{"
// FeatureSettersdef+=featureSetters_def* "}")
protected class OpDef_Group_2 extends GroupToken {
	
	public OpDef_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
// ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
// "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")" | ("changeReference(" ref=Reference
// ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference(" ref=Reference ":reference" |
// "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")"
protected class OpDef_Alternatives_2_0 extends AlternativesToken {

	public OpDef_Alternatives_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_2_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_Group_2_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
// ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
// "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class") ")"
protected class OpDef_Group_2_0_0 extends GroupToken {
	
	public OpDef_Group_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightParenthesisKeyword_2_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "changeAttribute(" ref=Attribute ":attribute" | "addAttribute" "(" ref=Attribute ":attribute" | "deleteAttribute("
// ref=Attribute ":attribute" | "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string" |
// "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class"
protected class OpDef_Alternatives_2_0_0_0 extends AlternativesToken {

	public OpDef_Alternatives_2_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_2_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_2_0_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_Group_2_0_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new OpDef_Group_2_0_0_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new OpDef_Group_2_0_0_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new OpDef_Group_2_0_0_0_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// "changeAttribute(" ref=Attribute ":attribute"
protected class OpDef_Group_2_0_0_0_0 extends GroupToken {
	
	public OpDef_Group_2_0_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AttributeKeyword_2_0_0_0_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "changeAttribute("
protected class OpDef_ChangeAttributeKeyword_2_0_0_0_0_0 extends KeywordToken  {
	
	public OpDef_ChangeAttributeKeyword_2_0_0_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getChangeAttributeKeyword_2_0_0_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Attribute
protected class OpDef_RefAssignment_2_0_0_0_0_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_0_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_0_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefAttributeParserRuleCall_2_0_0_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_ChangeAttributeKeyword_2_0_0_0_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":attribute"
protected class OpDef_AttributeKeyword_2_0_0_0_0_2 extends KeywordToken  {
	
	public OpDef_AttributeKeyword_2_0_0_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAttributeKeyword_2_0_0_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_0_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "addAttribute" "(" ref=Attribute ":attribute"
protected class OpDef_Group_2_0_0_0_1 extends GroupToken {
	
	public OpDef_Group_2_0_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AttributeKeyword_2_0_0_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "addAttribute"
protected class OpDef_AddAttributeKeyword_2_0_0_0_1_0 extends KeywordToken  {
	
	public OpDef_AddAttributeKeyword_2_0_0_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAddAttributeKeyword_2_0_0_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "("
protected class OpDef_LeftParenthesisKeyword_2_0_0_0_1_1 extends KeywordToken  {
	
	public OpDef_LeftParenthesisKeyword_2_0_0_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getLeftParenthesisKeyword_2_0_0_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AddAttributeKeyword_2_0_0_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=Attribute
protected class OpDef_RefAssignment_2_0_0_0_1_2 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_0_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_0_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefAttributeParserRuleCall_2_0_0_0_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_LeftParenthesisKeyword_2_0_0_0_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":attribute"
protected class OpDef_AttributeKeyword_2_0_0_0_1_3 extends KeywordToken  {
	
	public OpDef_AttributeKeyword_2_0_0_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAttributeKeyword_2_0_0_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_0_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "deleteAttribute(" ref=Attribute ":attribute"
protected class OpDef_Group_2_0_0_0_2 extends GroupToken {
	
	public OpDef_Group_2_0_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AttributeKeyword_2_0_0_0_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "deleteAttribute("
protected class OpDef_DeleteAttributeKeyword_2_0_0_0_2_0 extends KeywordToken  {
	
	public OpDef_DeleteAttributeKeyword_2_0_0_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getDeleteAttributeKeyword_2_0_0_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Attribute
protected class OpDef_RefAssignment_2_0_0_0_2_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_0_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_0_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefAttributeParserRuleCall_2_0_0_0_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_DeleteAttributeKeyword_2_0_0_0_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":attribute"
protected class OpDef_AttributeKeyword_2_0_0_0_2_2 extends KeywordToken  {
	
	public OpDef_AttributeKeyword_2_0_0_0_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAttributeKeyword_2_0_0_0_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_0_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "renameAttribute(" ref=Attribute ":attribute" "," string=STRING ":string"
protected class OpDef_Group_2_0_0_0_3 extends GroupToken {
	
	public OpDef_Group_2_0_0_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_StringKeyword_2_0_0_0_3_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "renameAttribute("
protected class OpDef_RenameAttributeKeyword_2_0_0_0_3_0 extends KeywordToken  {
	
	public OpDef_RenameAttributeKeyword_2_0_0_0_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRenameAttributeKeyword_2_0_0_0_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Attribute
protected class OpDef_RefAssignment_2_0_0_0_3_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_0_0_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_0_0_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefAttributeParserRuleCall_2_0_0_0_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_RenameAttributeKeyword_2_0_0_0_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":attribute"
protected class OpDef_AttributeKeyword_2_0_0_0_3_2 extends KeywordToken  {
	
	public OpDef_AttributeKeyword_2_0_0_0_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAttributeKeyword_2_0_0_0_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_0_0_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class OpDef_CommaKeyword_2_0_0_0_3_3 extends KeywordToken  {
	
	public OpDef_CommaKeyword_2_0_0_0_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getCommaKeyword_2_0_0_0_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AttributeKeyword_2_0_0_0_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// string=STRING
protected class OpDef_StringAssignment_2_0_0_0_3_4 extends AssignmentToken  {
	
	public OpDef_StringAssignment_2_0_0_0_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getStringAssignment_2_0_0_0_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_CommaKeyword_2_0_0_0_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOpDefAccess().getStringSTRINGTerminalRuleCall_2_0_0_0_3_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOpDefAccess().getStringSTRINGTerminalRuleCall_2_0_0_0_3_4_0();
			return obj;
		}
		return null;
	}

}

// ":string"
protected class OpDef_StringKeyword_2_0_0_0_3_5 extends KeywordToken  {
	
	public OpDef_StringKeyword_2_0_0_0_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getStringKeyword_2_0_0_0_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_StringAssignment_2_0_0_0_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "moveAttribute(" ref=Attribute ":attribute" "," dst=Class ":class"
protected class OpDef_Group_2_0_0_0_4 extends GroupToken {
	
	public OpDef_Group_2_0_0_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_0_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ClassKeyword_2_0_0_0_4_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "moveAttribute("
protected class OpDef_MoveAttributeKeyword_2_0_0_0_4_0 extends KeywordToken  {
	
	public OpDef_MoveAttributeKeyword_2_0_0_0_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getMoveAttributeKeyword_2_0_0_0_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Attribute
protected class OpDef_RefAssignment_2_0_0_0_4_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_0_0_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_0_0_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefAttributeParserRuleCall_2_0_0_0_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_MoveAttributeKeyword_2_0_0_0_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":attribute"
protected class OpDef_AttributeKeyword_2_0_0_0_4_2 extends KeywordToken  {
	
	public OpDef_AttributeKeyword_2_0_0_0_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAttributeKeyword_2_0_0_0_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_0_0_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class OpDef_CommaKeyword_2_0_0_0_4_3 extends KeywordToken  {
	
	public OpDef_CommaKeyword_2_0_0_0_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getCommaKeyword_2_0_0_0_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_AttributeKeyword_2_0_0_0_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dst=Class
protected class OpDef_DstAssignment_2_0_0_0_4_4 extends AssignmentToken  {
	
	public OpDef_DstAssignment_2_0_0_0_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getDstAssignment_2_0_0_0_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dst",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dst");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getDstClassParserRuleCall_2_0_0_0_4_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_CommaKeyword_2_0_0_0_4_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":class"
protected class OpDef_ClassKeyword_2_0_0_0_4_5 extends KeywordToken  {
	
	public OpDef_ClassKeyword_2_0_0_0_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getClassKeyword_2_0_0_0_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_DstAssignment_2_0_0_0_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ")"
protected class OpDef_RightParenthesisKeyword_2_0_0_1 extends KeywordToken  {
	
	public OpDef_RightParenthesisKeyword_2_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightParenthesisKeyword_2_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_2_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("changeReference(" ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference("
// ref=Reference ":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class") ")"
protected class OpDef_Group_2_0_1 extends GroupToken {
	
	public OpDef_Group_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightParenthesisKeyword_2_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "changeReference(" ref=Reference ":reference" | "addReference(" ref=Reference ":reference" | "deleteReference("
// ref=Reference ":reference" | "moveReference(" ref=Reference ":reference" "," dst=Class ":class"
protected class OpDef_Alternatives_2_0_1_0 extends AlternativesToken {

	public OpDef_Alternatives_2_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_2_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Group_2_0_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_Group_2_0_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new OpDef_Group_2_0_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new OpDef_Group_2_0_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "changeReference(" ref=Reference ":reference"
protected class OpDef_Group_2_0_1_0_0 extends GroupToken {
	
	public OpDef_Group_2_0_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ReferenceKeyword_2_0_1_0_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "changeReference("
protected class OpDef_ChangeReferenceKeyword_2_0_1_0_0_0 extends KeywordToken  {
	
	public OpDef_ChangeReferenceKeyword_2_0_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getChangeReferenceKeyword_2_0_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Reference
protected class OpDef_RefAssignment_2_0_1_0_0_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefReferenceParserRuleCall_2_0_1_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_ChangeReferenceKeyword_2_0_1_0_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":reference"
protected class OpDef_ReferenceKeyword_2_0_1_0_0_2 extends KeywordToken  {
	
	public OpDef_ReferenceKeyword_2_0_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getReferenceKeyword_2_0_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_1_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "addReference(" ref=Reference ":reference"
protected class OpDef_Group_2_0_1_0_1 extends GroupToken {
	
	public OpDef_Group_2_0_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ReferenceKeyword_2_0_1_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "addReference("
protected class OpDef_AddReferenceKeyword_2_0_1_0_1_0 extends KeywordToken  {
	
	public OpDef_AddReferenceKeyword_2_0_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAddReferenceKeyword_2_0_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Reference
protected class OpDef_RefAssignment_2_0_1_0_1_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefReferenceParserRuleCall_2_0_1_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_AddReferenceKeyword_2_0_1_0_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":reference"
protected class OpDef_ReferenceKeyword_2_0_1_0_1_2 extends KeywordToken  {
	
	public OpDef_ReferenceKeyword_2_0_1_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getReferenceKeyword_2_0_1_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_1_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "deleteReference(" ref=Reference ":reference"
protected class OpDef_Group_2_0_1_0_2 extends GroupToken {
	
	public OpDef_Group_2_0_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ReferenceKeyword_2_0_1_0_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "deleteReference("
protected class OpDef_DeleteReferenceKeyword_2_0_1_0_2_0 extends KeywordToken  {
	
	public OpDef_DeleteReferenceKeyword_2_0_1_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getDeleteReferenceKeyword_2_0_1_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Reference
protected class OpDef_RefAssignment_2_0_1_0_2_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_1_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_1_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefReferenceParserRuleCall_2_0_1_0_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_DeleteReferenceKeyword_2_0_1_0_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":reference"
protected class OpDef_ReferenceKeyword_2_0_1_0_2_2 extends KeywordToken  {
	
	public OpDef_ReferenceKeyword_2_0_1_0_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getReferenceKeyword_2_0_1_0_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_1_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "moveReference(" ref=Reference ":reference" "," dst=Class ":class"
protected class OpDef_Group_2_0_1_0_3 extends GroupToken {
	
	public OpDef_Group_2_0_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_0_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ClassKeyword_2_0_1_0_3_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "moveReference("
protected class OpDef_MoveReferenceKeyword_2_0_1_0_3_0 extends KeywordToken  {
	
	public OpDef_MoveReferenceKeyword_2_0_1_0_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getMoveReferenceKeyword_2_0_1_0_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref=Reference
protected class OpDef_RefAssignment_2_0_1_0_3_1 extends AssignmentToken  {
	
	public OpDef_RefAssignment_2_0_1_0_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRefAssignment_2_0_1_0_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getRefReferenceParserRuleCall_2_0_1_0_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_MoveReferenceKeyword_2_0_1_0_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":reference"
protected class OpDef_ReferenceKeyword_2_0_1_0_3_2 extends KeywordToken  {
	
	public OpDef_ReferenceKeyword_2_0_1_0_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getReferenceKeyword_2_0_1_0_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RefAssignment_2_0_1_0_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class OpDef_CommaKeyword_2_0_1_0_3_3 extends KeywordToken  {
	
	public OpDef_CommaKeyword_2_0_1_0_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getCommaKeyword_2_0_1_0_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_ReferenceKeyword_2_0_1_0_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dst=Class
protected class OpDef_DstAssignment_2_0_1_0_3_4 extends AssignmentToken  {
	
	public OpDef_DstAssignment_2_0_1_0_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getDstAssignment_2_0_1_0_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dst",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dst");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getDstClassParserRuleCall_2_0_1_0_3_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_CommaKeyword_2_0_1_0_3_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":class"
protected class OpDef_ClassKeyword_2_0_1_0_3_5 extends KeywordToken  {
	
	public OpDef_ClassKeyword_2_0_1_0_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getClassKeyword_2_0_1_0_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_DstAssignment_2_0_1_0_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ")"
protected class OpDef_RightParenthesisKeyword_2_0_1_1 extends KeywordToken  {
	
	public OpDef_RightParenthesisKeyword_2_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightParenthesisKeyword_2_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_2_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ";" | "{" FeatureSettersdef+=featureSetters_def* "}"
protected class OpDef_Alternatives_2_1 extends AlternativesToken {

	public OpDef_Alternatives_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOpDefAccess().getAlternatives_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_SemicolonKeyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OpDef_Group_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ";"
protected class OpDef_SemicolonKeyword_2_1_0 extends KeywordToken  {
	
	public OpDef_SemicolonKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getSemicolonKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{" FeatureSettersdef+=featureSetters_def* "}"
protected class OpDef_Group_2_1_1 extends GroupToken {
	
	public OpDef_Group_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpDefAccess().getGroup_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_RightCurlyBracketKeyword_2_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class OpDef_LeftCurlyBracketKeyword_2_1_1_0 extends KeywordToken  {
	
	public OpDef_LeftCurlyBracketKeyword_2_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getLeftCurlyBracketKeyword_2_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// FeatureSettersdef+=featureSetters_def*
protected class OpDef_FeatureSettersdefAssignment_2_1_1_1 extends AssignmentToken  {
	
	public OpDef_FeatureSettersdefAssignment_2_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpDefAccess().getFeatureSettersdefAssignment_2_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("FeatureSettersdef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("FeatureSettersdef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSetters_defRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpDefAccess().getFeatureSettersdefFeatureSetters_defParserRuleCall_2_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OpDef_FeatureSettersdefAssignment_2_1_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new OpDef_LeftCurlyBracketKeyword_2_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class OpDef_RightCurlyBracketKeyword_2_1_1_2 extends KeywordToken  {
	
	public OpDef_RightCurlyBracketKeyword_2_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOpDefAccess().getRightCurlyBracketKeyword_2_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_FeatureSettersdefAssignment_2_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}





/************ end Rule OpDef ****************/


/************ begin Rule Package ****************
 *
 * Package returns ecore::EPackage: //'(' 
 * 
 * 	{Package} name=ID;
 *
 **/

// //'(' 
// 
// {Package} name=ID
protected class Package_Group extends GroupToken {
	
	public Package_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageAccess().getPackageAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// //'(' 
// 
// {Package}
protected class Package_PackageAction_0 extends ActionToken  {

	public Package_PackageAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPackageAccess().getPackageAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Package_NameAssignment_1 extends AssignmentToken  {
	
	public Package_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Package_PackageAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Package ****************/


/************ begin Rule CHANGECLASS ****************
 *
 * /////////////////class operations/////////////////
 * 
 * //"{"
 * 
 * //(('setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');' )? &
 * 
 * // ("setAbstract("abstract=EBoolean");")? )       
 * 
 * //( (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp) ( "," (eAttributeOperations+=AttributeOp|eReferenceOperations+=ReferenceOp))* )*
 * 
 * //    
 * 
 * //"}"
 * 
 * CHANGECLASS:
 * 	op="changeClass(" ref=[ecore::EClass] ")";
 *
 **/

// op="changeClass(" ref=[ecore::EClass] ")"
protected class CHANGECLASS_Group extends GroupToken {
	
	public CHANGECLASS_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCHANGECLASSAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGECLASS_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCHANGECLASSRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="changeClass("
protected class CHANGECLASS_OpAssignment_0 extends AssignmentToken  {
	
	public CHANGECLASS_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGECLASSAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getCHANGECLASSAccess().getOpChangeClassKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getCHANGECLASSAccess().getOpChangeClassKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// ref=[ecore::EClass]
protected class CHANGECLASS_RefAssignment_1 extends AssignmentToken  {
	
	public CHANGECLASS_RefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGECLASSAccess().getRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGECLASS_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGECLASSAccess().getRefEClassCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCHANGECLASSAccess().getRefEClassCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class CHANGECLASS_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public CHANGECLASS_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGECLASSAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGECLASS_RefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CHANGECLASS ****************/


/************ begin Rule ADDCLASS ****************
 *
 * ADDCLASS:
 * 	op="addClass(" new=STRING ")";
 *
 **/

// op="addClass(" new=STRING ")"
protected class ADDCLASS_Group extends GroupToken {
	
	public ADDCLASS_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getADDCLASSAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDCLASS_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getADDCLASSRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="addClass("
protected class ADDCLASS_OpAssignment_0 extends AssignmentToken  {
	
	public ADDCLASS_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDCLASSAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getADDCLASSAccess().getOpAddClassKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getADDCLASSAccess().getOpAddClassKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// new=STRING
protected class ADDCLASS_NewAssignment_1 extends AssignmentToken  {
	
	public ADDCLASS_NewAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDCLASSAccess().getNewAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDCLASS_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("new",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("new");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getADDCLASSAccess().getNewSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getADDCLASSAccess().getNewSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ADDCLASS_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public ADDCLASS_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDCLASSAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDCLASS_NewAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ADDCLASS ****************/


/************ begin Rule DELETECLASS ****************
 *
 * DELETECLASS:
 * 	op="deleteClass(" ref=[ecore::EClass] ")";
 *
 **/

// op="deleteClass(" ref=[ecore::EClass] ")"
protected class DELETECLASS_Group extends GroupToken {
	
	public DELETECLASS_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDELETECLASSAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETECLASS_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDELETECLASSRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// op="deleteClass("
protected class DELETECLASS_OpAssignment_0 extends AssignmentToken  {
	
	public DELETECLASS_OpAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETECLASSAccess().getOpAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getDELETECLASSAccess().getOpDeleteClassKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDELETECLASSAccess().getOpDeleteClassKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// ref=[ecore::EClass]
protected class DELETECLASS_RefAssignment_1 extends AssignmentToken  {
	
	public DELETECLASS_RefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETECLASSAccess().getRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETECLASS_OpAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETECLASSAccess().getRefEClassCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDELETECLASSAccess().getRefEClassCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class DELETECLASS_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public DELETECLASS_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDELETECLASSAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETECLASS_RefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DELETECLASS ****************/


/************ begin Rule classSetter ****************
 *
 * //classSetters:set=setAbstract|set=setSuperTypes|set=setClassName;
 * 
 * classSetter:
 * 	"set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
 * 	valueRef+=[ecore::EObject])* ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] ":=" (value=STRING | valueRef+=[ecore::EObject]) (","
// valueRef+=[ecore::EObject])* ";"
protected class ClassSetter_Group extends GroupToken {
	
	public ClassSetter_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassSetterRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class ClassSetter_SetKeyword_0 extends KeywordToken  {
	
	public ClassSetter_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class ClassSetter_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public ClassSetter_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetterAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getClassSetterAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":="
protected class ClassSetter_ColonEqualsSignKeyword_2 extends KeywordToken  {
	
	public ClassSetter_ColonEqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getColonEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=STRING | valueRef+=[ecore::EObject]
protected class ClassSetter_Alternatives_3 extends AlternativesToken {

	public ClassSetter_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_ValueAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassSetter_ValueRefAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// value=STRING
protected class ClassSetter_ValueAssignment_3_0 extends AssignmentToken  {
	
	public ClassSetter_ValueAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getValueAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getClassSetterAccess().getValueSTRINGTerminalRuleCall_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getClassSetterAccess().getValueSTRINGTerminalRuleCall_3_0_0();
			return obj;
		}
		return null;
	}

}

// valueRef+=[ecore::EObject]
protected class ClassSetter_ValueRefAssignment_3_1 extends AssignmentToken  {
	
	public ClassSetter_ValueRefAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getValueRefAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetterAccess().getValueRefEObjectCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getClassSetterAccess().getValueRefEObjectCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("," valueRef+=[ecore::EObject])*
protected class ClassSetter_Group_4 extends GroupToken {
	
	public ClassSetter_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_ValueRefAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ClassSetter_CommaKeyword_4_0 extends KeywordToken  {
	
	public ClassSetter_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassSetter_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// valueRef+=[ecore::EObject]
protected class ClassSetter_ValueRefAssignment_4_1 extends AssignmentToken  {
	
	public ClassSetter_ValueRefAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getValueRefAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_CommaKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetterAccess().getValueRefEObjectCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getClassSetterAccess().getValueRefEObjectCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class ClassSetter_SemicolonKeyword_5 extends KeywordToken  {
	
	public ClassSetter_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetterAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassSetter_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule classSetter ****************/


/************ begin Rule classSetters_def ****************
 *
 * classSetters_def:
 * 	"set" metafeature=[ecore::EStructuralFeature] ":=" par+=Parameter ("," par+=Parameter)* ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] ":=" par+=Parameter ("," par+=Parameter)* ";"
protected class ClassSetters_def_Group extends GroupToken {
	
	public ClassSetters_def_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassSetters_defRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class ClassSetters_def_SetKeyword_0 extends KeywordToken  {
	
	public ClassSetters_def_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class ClassSetters_def_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public ClassSetters_def_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetters_defAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getClassSetters_defAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":="
protected class ClassSetters_def_ColonEqualsSignKeyword_2 extends KeywordToken  {
	
	public ClassSetters_def_ColonEqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getColonEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// par+=Parameter
protected class ClassSetters_def_ParAssignment_3 extends AssignmentToken  {
	
	public ClassSetters_def_ParAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getParAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("par",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("par");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassSetters_defAccess().getParParameterParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassSetters_def_ColonEqualsSignKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," par+=Parameter)*
protected class ClassSetters_def_Group_4 extends GroupToken {
	
	public ClassSetters_def_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_ParAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ClassSetters_def_CommaKeyword_4_0 extends KeywordToken  {
	
	public ClassSetters_def_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassSetters_def_ParAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// par+=Parameter
protected class ClassSetters_def_ParAssignment_4_1 extends AssignmentToken  {
	
	public ClassSetters_def_ParAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getParAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("par",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("par");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassSetters_defAccess().getParParameterParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassSetters_def_CommaKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ";"
protected class ClassSetters_def_SemicolonKeyword_5 extends KeywordToken  {
	
	public ClassSetters_def_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassSetters_defAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetters_def_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassSetters_def_ParAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule classSetters_def ****************/


/************ begin Rule ClassOp ****************
 *
 * //(type="STRING" par=ID| typeEcore+=[ecore::EDataType] par=ID) ( "," typeEcore+=[ecore::EDataType] par=ID)*";";
 * 
 * //classSetters_def:setAbstract_def|setSuperTypes_def|setClassName_def;
 * 
 * //setSuperTypes:op='setSuperTypes' '(' eSuperTypes+=[ecore::EClass] ( "," eSuperTypes+=[ecore::EClass])* ');';
 * 
 * //setSuperTypes_def:op='setSuperTypes' '(' 'list' eSuperTypes+=ID  ');';
 * 
 * //
 * 
 * //
 * 
 * //setAbstract :op="setAbstract("abstract=EBoolean");" ; 
 * 
 * // setAbstract_def:op="setAbstract(" "boolean" abstract=ID");" ;
 * 
 * // 
 * 
 * //setClassName :op="setName("name=STRING");";
 * 
 * //setClassName_def:op="setName(" "string" name=ID");";
 * 
 * ClassOp:
 * 	("class" var=Class "=") ((op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter |
 * 	attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";") //changed from change_op
 * 
 * 	| complex+=CallOperator);
 *
 **/

// ("class" var=Class "=") ((op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter |
// attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";") //changed from change_op
// 
// | complex+=CallOperator)
protected class ClassOp_Group extends GroupToken {
	
	public ClassOp_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassOpAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassOpRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "class" var=Class "="
protected class ClassOp_Group_0 extends GroupToken {
	
	public ClassOp_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassOpAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "class"
protected class ClassOp_ClassKeyword_0_0 extends KeywordToken  {
	
	public ClassOp_ClassKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassOpAccess().getClassKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Class
protected class ClassOp_VarAssignment_0_1 extends AssignmentToken  {
	
	public ClassOp_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getVarClassParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_ClassKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class ClassOp_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public ClassOp_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassOpAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter | attributes+=AttributeOp |
// references+=ReferenceOp)* "}" | ";") //changed from change_op
// 
// | complex+=CallOperator
protected class ClassOp_Alternatives_1 extends AlternativesToken {

	public ClassOp_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getClassOpAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassOp_ComplexAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS) ("{" (setters+=classSetter | attributes+=AttributeOp |
// references+=ReferenceOp)* "}" | ";")
protected class ClassOp_Group_1_0 extends GroupToken {
	
	public ClassOp_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassOpAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op=CHANGECLASS | op=ADDCLASS | op=DELETECLASS
protected class ClassOp_Alternatives_1_0_0 extends AlternativesToken {

	public ClassOp_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getClassOpAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_OpAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassOp_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ClassOp_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// op=CHANGECLASS
protected class ClassOp_OpAssignment_1_0_0_0 extends AssignmentToken  {
	
	public ClassOp_OpAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getOpAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGECLASS_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGECLASSRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getOpCHANGECLASSParserRuleCall_1_0_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=ADDCLASS
protected class ClassOp_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public ClassOp_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDCLASS_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getADDCLASSRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getOpADDCLASSParserRuleCall_1_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=DELETECLASS
protected class ClassOp_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public ClassOp_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETECLASS_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETECLASSRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getOpDELETECLASSParserRuleCall_1_0_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "{" (setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)* "}" | ";"
protected class ClassOp_Alternatives_1_0_1 extends AlternativesToken {

	public ClassOp_Alternatives_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getClassOpAccess().getAlternatives_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Group_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassOp_SemicolonKeyword_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" (setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)* "}"
protected class ClassOp_Group_1_0_1_0 extends GroupToken {
	
	public ClassOp_Group_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassOpAccess().getGroup_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_RightCurlyBracketKeyword_1_0_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class ClassOp_LeftCurlyBracketKeyword_1_0_1_0_0 extends KeywordToken  {
	
	public ClassOp_LeftCurlyBracketKeyword_1_0_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassOpAccess().getLeftCurlyBracketKeyword_1_0_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (setters+=classSetter | attributes+=AttributeOp | references+=ReferenceOp)*
protected class ClassOp_Alternatives_1_0_1_0_1 extends AlternativesToken {

	public ClassOp_Alternatives_1_0_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getClassOpAccess().getAlternatives_1_0_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_SettersAssignment_1_0_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ClassOp_AttributesAssignment_1_0_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ClassOp_ReferencesAssignment_1_0_1_0_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// setters+=classSetter
protected class ClassOp_SettersAssignment_1_0_1_0_1_0 extends AssignmentToken  {
	
	public ClassOp_SettersAssignment_1_0_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getSettersAssignment_1_0_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassSetter_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassSetterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getSettersClassSetterParserRuleCall_1_0_1_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ClassOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// attributes+=AttributeOp
protected class ClassOp_AttributesAssignment_1_0_1_0_1_1 extends AssignmentToken  {
	
	public ClassOp_AttributesAssignment_1_0_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getAttributesAssignment_1_0_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getAttributesAttributeOpParserRuleCall_1_0_1_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ClassOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// references+=ReferenceOp
protected class ClassOp_ReferencesAssignment_1_0_1_0_1_2 extends AssignmentToken  {
	
	public ClassOp_ReferencesAssignment_1_0_1_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getReferencesAssignment_1_0_1_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("references",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("references");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getReferencesReferenceOpParserRuleCall_1_0_1_0_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ClassOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class ClassOp_RightCurlyBracketKeyword_1_0_1_0_2 extends KeywordToken  {
	
	public ClassOp_RightCurlyBracketKeyword_1_0_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassOpAccess().getRightCurlyBracketKeyword_1_0_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ClassOp_SemicolonKeyword_1_0_1_1 extends KeywordToken  {
	
	public ClassOp_SemicolonKeyword_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassOpAccess().getSemicolonKeyword_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// complex+=CallOperator
protected class ClassOp_ComplexAssignment_1_1 extends AssignmentToken  {
	
	public ClassOp_ComplexAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassOpAccess().getComplexAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("complex",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("complex");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassOpAccess().getComplexCallOperatorParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ClassOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule ClassOp ****************/


/************ begin Rule Class ****************
 *
 * Class returns ecore::EClass:
 * 	{Class} name=ID;
 *
 **/

// {Class} name=ID
protected class Class_Group extends GroupToken {
	
	public Class_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassAccess().getClassAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Class}
protected class Class_ClassAction_0 extends ActionToken  {

	public Class_ClassAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getClassAccess().getClassAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Class_NameAssignment_1 extends AssignmentToken  {
	
	public Class_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_ClassAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Class ****************/


/************ begin Rule Classifier ****************
 *
 * Classifier returns ecore::EClassifier:
 * 	{Classifier} name=ID;
 *
 **/

// {Classifier} name=ID
protected class Classifier_Group extends GroupToken {
	
	public Classifier_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassifierAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Classifier_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassifierAccess().getClassifierAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Classifier}
protected class Classifier_ClassifierAction_0 extends ActionToken  {

	public Classifier_ClassifierAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getClassifierAccess().getClassifierAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Classifier_NameAssignment_1 extends AssignmentToken  {
	
	public Classifier_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassifierAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Classifier_ClassifierAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getClassifierAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getClassifierAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Classifier ****************/


/************ begin Rule eStructuralFeatureOp ****************
 *
 * /////////////////////eStructuralFeature///////////
 * 
 * eStructuralFeatureOp:
 * 	AttributeOp | ReferenceOp;
 *
 **/

// AttributeOp | ReferenceOp
protected class EStructuralFeatureOp_Alternatives extends AlternativesToken {

	public EStructuralFeatureOp_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEStructuralFeatureOpAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EStructuralFeatureOp_AttributeOpParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EStructuralFeatureOp_ReferenceOpParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeOpRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getReferenceOpRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// AttributeOp
protected class EStructuralFeatureOp_AttributeOpParserRuleCall_0 extends RuleCallToken {
	
	public EStructuralFeatureOp_AttributeOpParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getEStructuralFeatureOpAccess().getAttributeOpParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeOpRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AttributeOp_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ReferenceOp
protected class EStructuralFeatureOp_ReferenceOpParserRuleCall_1 extends RuleCallToken {
	
	public EStructuralFeatureOp_ReferenceOpParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getEStructuralFeatureOpAccess().getReferenceOpParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceOpRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ReferenceOp_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule eStructuralFeatureOp ****************/


/************ begin Rule CHANGEATTRIBUTE ****************
 *
 * CHANGEATTRIBUTE:
 * 	"changeAttribute(" refAttr=[ecore::EAttribute] ")";
 *
 **/

// "changeAttribute(" refAttr=[ecore::EAttribute] ")"
protected class CHANGEATTRIBUTE_Group extends GroupToken {
	
	public CHANGEATTRIBUTE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCHANGEATTRIBUTEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEATTRIBUTE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCHANGEATTRIBUTERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "changeAttribute("
protected class CHANGEATTRIBUTE_ChangeAttributeKeyword_0 extends KeywordToken  {
	
	public CHANGEATTRIBUTE_ChangeAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGEATTRIBUTEAccess().getChangeAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refAttr=[ecore::EAttribute]
protected class CHANGEATTRIBUTE_RefAttrAssignment_1 extends AssignmentToken  {
	
	public CHANGEATTRIBUTE_RefAttrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGEATTRIBUTEAccess().getRefAttrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEATTRIBUTE_ChangeAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refAttr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refAttr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCHANGEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class CHANGEATTRIBUTE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public CHANGEATTRIBUTE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGEATTRIBUTEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEATTRIBUTE_RefAttrAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CHANGEATTRIBUTE ****************/


/************ begin Rule ADDATTRIBUTE ****************
 *
 * ADDATTRIBUTE:
 * 	"addAttribute" "(" new=EString ")";
 *
 **/

// "addAttribute" "(" new=EString ")"
protected class ADDATTRIBUTE_Group extends GroupToken {
	
	public ADDATTRIBUTE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getADDATTRIBUTEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDATTRIBUTE_RightParenthesisKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getADDATTRIBUTERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "addAttribute"
protected class ADDATTRIBUTE_AddAttributeKeyword_0 extends KeywordToken  {
	
	public ADDATTRIBUTE_AddAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDATTRIBUTEAccess().getAddAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "("
protected class ADDATTRIBUTE_LeftParenthesisKeyword_1 extends KeywordToken  {
	
	public ADDATTRIBUTE_LeftParenthesisKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDATTRIBUTEAccess().getLeftParenthesisKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDATTRIBUTE_AddAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// new=EString
protected class ADDATTRIBUTE_NewAssignment_2 extends AssignmentToken  {
	
	public ADDATTRIBUTE_NewAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDATTRIBUTEAccess().getNewAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDATTRIBUTE_LeftParenthesisKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("new",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("new");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getADDATTRIBUTEAccess().getNewEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getADDATTRIBUTEAccess().getNewEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ADDATTRIBUTE_RightParenthesisKeyword_3 extends KeywordToken  {
	
	public ADDATTRIBUTE_RightParenthesisKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDATTRIBUTEAccess().getRightParenthesisKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDATTRIBUTE_NewAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ADDATTRIBUTE ****************/


/************ begin Rule DELETEATTRIBUTE ****************
 *
 * DELETEATTRIBUTE:
 * 	"deleteAttribute(" refAttr=[ecore::EAttribute];
 *
 **/

// "deleteAttribute(" refAttr=[ecore::EAttribute]
protected class DELETEATTRIBUTE_Group extends GroupToken {
	
	public DELETEATTRIBUTE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDELETEATTRIBUTEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEATTRIBUTE_RefAttrAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDELETEATTRIBUTERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "deleteAttribute("
protected class DELETEATTRIBUTE_DeleteAttributeKeyword_0 extends KeywordToken  {
	
	public DELETEATTRIBUTE_DeleteAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDELETEATTRIBUTEAccess().getDeleteAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refAttr=[ecore::EAttribute]
protected class DELETEATTRIBUTE_RefAttrAssignment_1 extends AssignmentToken  {
	
	public DELETEATTRIBUTE_RefAttrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETEATTRIBUTEAccess().getRefAttrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEATTRIBUTE_DeleteAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refAttr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refAttr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDELETEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule DELETEATTRIBUTE ****************/


/************ begin Rule RENAMEATTRIBUTE ****************
 *
 * RENAMEATTRIBUTE:
 * 	"renameAttribute(" refAttr=[ecore::EAttribute] "," newName=STRING ")";
 *
 **/

// "renameAttribute(" refAttr=[ecore::EAttribute] "," newName=STRING ")"
protected class RENAMEATTRIBUTE_Group extends GroupToken {
	
	public RENAMEATTRIBUTE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_RightParenthesisKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRENAMEATTRIBUTERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "renameAttribute("
protected class RENAMEATTRIBUTE_RenameAttributeKeyword_0 extends KeywordToken  {
	
	public RENAMEATTRIBUTE_RenameAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getRenameAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refAttr=[ecore::EAttribute]
protected class RENAMEATTRIBUTE_RefAttrAssignment_1 extends AssignmentToken  {
	
	public RENAMEATTRIBUTE_RefAttrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getRefAttrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_RenameAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refAttr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refAttr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRENAMEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRENAMEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ","
protected class RENAMEATTRIBUTE_CommaKeyword_2 extends KeywordToken  {
	
	public RENAMEATTRIBUTE_CommaKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getCommaKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_RefAttrAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newName=STRING
protected class RENAMEATTRIBUTE_NewNameAssignment_3 extends AssignmentToken  {
	
	public RENAMEATTRIBUTE_NewNameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getNewNameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_CommaKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRENAMEATTRIBUTEAccess().getNewNameSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRENAMEATTRIBUTEAccess().getNewNameSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class RENAMEATTRIBUTE_RightParenthesisKeyword_4 extends KeywordToken  {
	
	public RENAMEATTRIBUTE_RightParenthesisKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRENAMEATTRIBUTEAccess().getRightParenthesisKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_NewNameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule RENAMEATTRIBUTE ****************/


/************ begin Rule MOVEATTRIBUTE ****************
 *
 * MOVEATTRIBUTE:
 * 	"moveAttribute(" refAttr=[ecore::EAttribute] "," dst=[ecore::EClass] ")";
 *
 **/

// "moveAttribute(" refAttr=[ecore::EAttribute] "," dst=[ecore::EClass] ")"
protected class MOVEATTRIBUTE_Group extends GroupToken {
	
	public MOVEATTRIBUTE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_RightParenthesisKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMOVEATTRIBUTERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "moveAttribute("
protected class MOVEATTRIBUTE_MoveAttributeKeyword_0 extends KeywordToken  {
	
	public MOVEATTRIBUTE_MoveAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getMoveAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refAttr=[ecore::EAttribute]
protected class MOVEATTRIBUTE_RefAttrAssignment_1 extends AssignmentToken  {
	
	public MOVEATTRIBUTE_RefAttrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getRefAttrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_MoveAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refAttr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refAttr");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMOVEATTRIBUTEAccess().getRefAttrEAttributeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ","
protected class MOVEATTRIBUTE_CommaKeyword_2 extends KeywordToken  {
	
	public MOVEATTRIBUTE_CommaKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getCommaKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_RefAttrAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dst=[ecore::EClass]
protected class MOVEATTRIBUTE_DstAssignment_3 extends AssignmentToken  {
	
	public MOVEATTRIBUTE_DstAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getDstAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_CommaKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dst",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dst");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEATTRIBUTEAccess().getDstEClassCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMOVEATTRIBUTEAccess().getDstEClassCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class MOVEATTRIBUTE_RightParenthesisKeyword_4 extends KeywordToken  {
	
	public MOVEATTRIBUTE_RightParenthesisKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEATTRIBUTEAccess().getRightParenthesisKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_DstAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MOVEATTRIBUTE ****************/


/************ begin Rule FeatureSetters ****************
 *
 * //FeatureSetters:setLower|setUpper|setType|setOpposite|setOwner|setName;
 * 
 * FeatureSetters:
 * 	"set" metafeature=[ecore::EStructuralFeature] ":=" (valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean |
 * 	valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?) ("," valueRef+=[ecore::EObject])* ";";
 *
 **/

// "set" metafeature=[ecore::EStructuralFeature] ":=" (valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean |
// valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?) ("," valueRef+=[ecore::EObject])* ";"
protected class FeatureSetters_Group extends GroupToken {
	
	public FeatureSetters_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureSettersRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "set"
protected class FeatureSetters_SetKeyword_0 extends KeywordToken  {
	
	public FeatureSetters_SetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getSetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metafeature=[ecore::EStructuralFeature]
protected class FeatureSetters_MetafeatureAssignment_1 extends AssignmentToken  {
	
	public FeatureSetters_MetafeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getMetafeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_SetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metafeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metafeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersAccess().getMetafeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureSettersAccess().getMetafeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":="
protected class FeatureSetters_ColonEqualsSignKeyword_2 extends KeywordToken  {
	
	public FeatureSetters_ColonEqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getColonEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_MetafeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueEString=STRING | valueEInt=EInt | valueEBool=EBoolean | valueRef+=[ecore::EObject] ("."
// valueFeature=[ecore::EStructuralFeature])?
protected class FeatureSetters_Alternatives_3 extends AlternativesToken {

	public FeatureSetters_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ValueEStringAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureSetters_ValueEIntAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureSetters_ValueEBoolAssignment_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FeatureSetters_Group_3_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// valueEString=STRING
protected class FeatureSetters_ValueEStringAssignment_3_0 extends AssignmentToken  {
	
	public FeatureSetters_ValueEStringAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueEStringAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueEString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueEString");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSettersAccess().getValueEStringSTRINGTerminalRuleCall_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureSettersAccess().getValueEStringSTRINGTerminalRuleCall_3_0_0();
			return obj;
		}
		return null;
	}

}

// valueEInt=EInt
protected class FeatureSetters_ValueEIntAssignment_3_1 extends AssignmentToken  {
	
	public FeatureSetters_ValueEIntAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueEIntAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueEInt",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueEInt");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSettersAccess().getValueEIntEIntParserRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureSettersAccess().getValueEIntEIntParserRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// valueEBool=EBoolean
protected class FeatureSetters_ValueEBoolAssignment_3_2 extends AssignmentToken  {
	
	public FeatureSetters_ValueEBoolAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueEBoolAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueEBool",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueEBool");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSettersAccess().getValueEBoolEBooleanParserRuleCall_3_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureSettersAccess().getValueEBoolEBooleanParserRuleCall_3_2_0();
			return obj;
		}
		return null;
	}

}

// valueRef+=[ecore::EObject] ("." valueFeature=[ecore::EStructuralFeature])?
protected class FeatureSetters_Group_3_3 extends GroupToken {
	
	public FeatureSetters_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_Group_3_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureSetters_ValueRefAssignment_3_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// valueRef+=[ecore::EObject]
protected class FeatureSetters_ValueRefAssignment_3_3_0 extends AssignmentToken  {
	
	public FeatureSetters_ValueRefAssignment_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueRefAssignment_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ColonEqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersAccess().getValueRefEObjectCrossReference_3_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureSettersAccess().getValueRefEObjectCrossReference_3_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("." valueFeature=[ecore::EStructuralFeature])?
protected class FeatureSetters_Group_3_3_1 extends GroupToken {
	
	public FeatureSetters_Group_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getGroup_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ValueFeatureAssignment_3_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class FeatureSetters_FullStopKeyword_3_3_1_0 extends KeywordToken  {
	
	public FeatureSetters_FullStopKeyword_3_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getFullStopKeyword_3_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ValueRefAssignment_3_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueFeature=[ecore::EStructuralFeature]
protected class FeatureSetters_ValueFeatureAssignment_3_3_1_1 extends AssignmentToken  {
	
	public FeatureSetters_ValueFeatureAssignment_3_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueFeatureAssignment_3_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_FullStopKeyword_3_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueFeature",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersAccess().getValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureSettersAccess().getValueFeatureEStructuralFeatureCrossReference_3_3_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}




// ("," valueRef+=[ecore::EObject])*
protected class FeatureSetters_Group_4 extends GroupToken {
	
	public FeatureSetters_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_ValueRefAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class FeatureSetters_CommaKeyword_4_0 extends KeywordToken  {
	
	public FeatureSetters_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureSetters_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// valueRef+=[ecore::EObject]
protected class FeatureSetters_ValueRefAssignment_4_1 extends AssignmentToken  {
	
	public FeatureSetters_ValueRefAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getValueRefAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_CommaKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueRef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersAccess().getValueRefEObjectCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureSettersAccess().getValueRefEObjectCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class FeatureSetters_SemicolonKeyword_5 extends KeywordToken  {
	
	public FeatureSetters_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSettersAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureSetters_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule FeatureSetters ****************/


/************ begin Rule AttributeOp ****************
 *
 * AttributeOp:
 * 	("attribute" var=Attribute "=") ((op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE |
 * 	op=MOVEATTRIBUTE) ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
 *
 **/

// ("attribute" var=Attribute "=") ((op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE |
// op=MOVEATTRIBUTE) ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator)
protected class AttributeOp_Group extends GroupToken {
	
	public AttributeOp_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeOpRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "attribute" var=Attribute "="
protected class AttributeOp_Group_0 extends GroupToken {
	
	public AttributeOp_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "attribute"
protected class AttributeOp_AttributeKeyword_0_0 extends KeywordToken  {
	
	public AttributeOp_AttributeKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getAttributeKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Attribute
protected class AttributeOp_VarAssignment_0_1 extends AssignmentToken  {
	
	public AttributeOp_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getVarAttributeParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_AttributeKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class AttributeOp_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public AttributeOp_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE) ("{"
// setters+=FeatureSetters* "}" | ";") | complex+=CallOperator
protected class AttributeOp_Alternatives_1 extends AlternativesToken {

	public AttributeOp_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AttributeOp_ComplexAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE) ("{"
// setters+=FeatureSetters* "}" | ";")
protected class AttributeOp_Group_1_0 extends GroupToken {
	
	public AttributeOp_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Alternatives_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// op=CHANGEATTRIBUTE | op=ADDATTRIBUTE | op=DELETEATTRIBUTE | op=RENAMEATTRIBUTE | op=MOVEATTRIBUTE
protected class AttributeOp_Alternatives_1_0_0 extends AlternativesToken {

	public AttributeOp_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_OpAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AttributeOp_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AttributeOp_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AttributeOp_OpAssignment_1_0_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AttributeOp_OpAssignment_1_0_0_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// op=CHANGEATTRIBUTE
protected class AttributeOp_OpAssignment_1_0_0_0 extends AssignmentToken  {
	
	public AttributeOp_OpAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getOpAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEATTRIBUTE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEATTRIBUTERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getOpCHANGEATTRIBUTEParserRuleCall_1_0_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=ADDATTRIBUTE
protected class AttributeOp_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public AttributeOp_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDATTRIBUTE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getADDATTRIBUTERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getOpADDATTRIBUTEParserRuleCall_1_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=DELETEATTRIBUTE
protected class AttributeOp_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public AttributeOp_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEATTRIBUTE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEATTRIBUTERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getOpDELETEATTRIBUTEParserRuleCall_1_0_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=RENAMEATTRIBUTE
protected class AttributeOp_OpAssignment_1_0_0_3 extends AssignmentToken  {
	
	public AttributeOp_OpAssignment_1_0_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getOpAssignment_1_0_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RENAMEATTRIBUTE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRENAMEATTRIBUTERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getOpRENAMEATTRIBUTEParserRuleCall_1_0_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=MOVEATTRIBUTE
protected class AttributeOp_OpAssignment_1_0_0_4 extends AssignmentToken  {
	
	public AttributeOp_OpAssignment_1_0_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getOpAssignment_1_0_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEATTRIBUTE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEATTRIBUTERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getOpMOVEATTRIBUTEParserRuleCall_1_0_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "{" setters+=FeatureSetters* "}" | ";"
protected class AttributeOp_Alternatives_1_0_1 extends AlternativesToken {

	public AttributeOp_Alternatives_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getAlternatives_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Group_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AttributeOp_SemicolonKeyword_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" setters+=FeatureSetters* "}"
protected class AttributeOp_Group_1_0_1_0 extends GroupToken {
	
	public AttributeOp_Group_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getGroup_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_RightCurlyBracketKeyword_1_0_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AttributeOp_LeftCurlyBracketKeyword_1_0_1_0_0 extends KeywordToken  {
	
	public AttributeOp_LeftCurlyBracketKeyword_1_0_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getLeftCurlyBracketKeyword_1_0_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// setters+=FeatureSetters*
protected class AttributeOp_SettersAssignment_1_0_1_0_1 extends AssignmentToken  {
	
	public AttributeOp_SettersAssignment_1_0_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getSettersAssignment_1_0_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getSettersFeatureSettersParserRuleCall_1_0_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_SettersAssignment_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AttributeOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AttributeOp_RightCurlyBracketKeyword_1_0_1_0_2 extends KeywordToken  {
	
	public AttributeOp_RightCurlyBracketKeyword_1_0_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getRightCurlyBracketKeyword_1_0_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_SettersAssignment_1_0_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class AttributeOp_SemicolonKeyword_1_0_1_1 extends KeywordToken  {
	
	public AttributeOp_SemicolonKeyword_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getSemicolonKeyword_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// complex+=CallOperator
protected class AttributeOp_ComplexAssignment_1_1 extends AssignmentToken  {
	
	public AttributeOp_ComplexAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeOpAccess().getComplexAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("complex",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("complex");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeOpAccess().getComplexCallOperatorParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AttributeOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule AttributeOp ****************/


/************ begin Rule Attribute ****************
 *
 * Attribute returns ecore::EAttribute:
 * 	{Attribute} name=ID;
 *
 **/

// {Attribute} name=ID
protected class Attribute_Group extends GroupToken {
	
	public Attribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeAccess().getAttributeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Attribute}
protected class Attribute_AttributeAction_0 extends ActionToken  {

	public Attribute_AttributeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAttributeAccess().getAttributeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Attribute_NameAssignment_1 extends AssignmentToken  {
	
	public Attribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_AttributeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Attribute ****************/


/************ begin Rule CHANGEREFERENCE ****************
 *
 * CHANGEREFERENCE:
 * 	"changeReference(" refRef=[ecore::EReference] ")";
 *
 **/

// "changeReference(" refRef=[ecore::EReference] ")"
protected class CHANGEREFERENCE_Group extends GroupToken {
	
	public CHANGEREFERENCE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCHANGEREFERENCEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEREFERENCE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCHANGEREFERENCERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "changeReference("
protected class CHANGEREFERENCE_ChangeReferenceKeyword_0 extends KeywordToken  {
	
	public CHANGEREFERENCE_ChangeReferenceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGEREFERENCEAccess().getChangeReferenceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refRef=[ecore::EReference]
protected class CHANGEREFERENCE_RefRefAssignment_1 extends AssignmentToken  {
	
	public CHANGEREFERENCE_RefRefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCHANGEREFERENCEAccess().getRefRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEREFERENCE_ChangeReferenceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCHANGEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class CHANGEREFERENCE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public CHANGEREFERENCE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCHANGEREFERENCEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEREFERENCE_RefRefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CHANGEREFERENCE ****************/


/************ begin Rule ADDREFERENCE ****************
 *
 * ADDREFERENCE:
 * 	"addReference(" new=EString ")";
 *
 **/

// "addReference(" new=EString ")"
protected class ADDREFERENCE_Group extends GroupToken {
	
	public ADDREFERENCE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getADDREFERENCEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDREFERENCE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getADDREFERENCERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "addReference("
protected class ADDREFERENCE_AddReferenceKeyword_0 extends KeywordToken  {
	
	public ADDREFERENCE_AddReferenceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDREFERENCEAccess().getAddReferenceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// new=EString
protected class ADDREFERENCE_NewAssignment_1 extends AssignmentToken  {
	
	public ADDREFERENCE_NewAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getADDREFERENCEAccess().getNewAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDREFERENCE_AddReferenceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("new",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("new");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getADDREFERENCEAccess().getNewEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getADDREFERENCEAccess().getNewEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ADDREFERENCE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public ADDREFERENCE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getADDREFERENCEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDREFERENCE_NewAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ADDREFERENCE ****************/


/************ begin Rule DELETEREFERENCE ****************
 *
 * DELETEREFERENCE:
 * 	"deleteReference(" refRef=[ecore::EReference] ")";
 *
 **/

// "deleteReference(" refRef=[ecore::EReference] ")"
protected class DELETEREFERENCE_Group extends GroupToken {
	
	public DELETEREFERENCE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDELETEREFERENCEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEREFERENCE_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDELETEREFERENCERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "deleteReference("
protected class DELETEREFERENCE_DeleteReferenceKeyword_0 extends KeywordToken  {
	
	public DELETEREFERENCE_DeleteReferenceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDELETEREFERENCEAccess().getDeleteReferenceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refRef=[ecore::EReference]
protected class DELETEREFERENCE_RefRefAssignment_1 extends AssignmentToken  {
	
	public DELETEREFERENCE_RefRefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDELETEREFERENCEAccess().getRefRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEREFERENCE_DeleteReferenceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDELETEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class DELETEREFERENCE_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public DELETEREFERENCE_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDELETEREFERENCEAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEREFERENCE_RefRefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DELETEREFERENCE ****************/


/************ begin Rule MOVEREFERENCE ****************
 *
 * MOVEREFERENCE:
 * 	"moveReference(" refRef=[ecore::EReference] "," dst=[ecore::EClass] ")";
 *
 **/

// "moveReference(" refRef=[ecore::EReference] "," dst=[ecore::EClass] ")"
protected class MOVEREFERENCE_Group extends GroupToken {
	
	public MOVEREFERENCE_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_RightParenthesisKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMOVEREFERENCERule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "moveReference("
protected class MOVEREFERENCE_MoveReferenceKeyword_0 extends KeywordToken  {
	
	public MOVEREFERENCE_MoveReferenceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getMoveReferenceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// refRef=[ecore::EReference]
protected class MOVEREFERENCE_RefRefAssignment_1 extends AssignmentToken  {
	
	public MOVEREFERENCE_RefRefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getRefRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_MoveReferenceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMOVEREFERENCEAccess().getRefRefEReferenceCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ","
protected class MOVEREFERENCE_CommaKeyword_2 extends KeywordToken  {
	
	public MOVEREFERENCE_CommaKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getCommaKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_RefRefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dst=[ecore::EClass]
protected class MOVEREFERENCE_DstAssignment_3 extends AssignmentToken  {
	
	public MOVEREFERENCE_DstAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getDstAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_CommaKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dst",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dst");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEREFERENCEAccess().getDstEClassCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMOVEREFERENCEAccess().getDstEClassCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class MOVEREFERENCE_RightParenthesisKeyword_4 extends KeywordToken  {
	
	public MOVEREFERENCE_RightParenthesisKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMOVEREFERENCEAccess().getRightParenthesisKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_DstAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MOVEREFERENCE ****************/


/************ begin Rule featureSetters_def ****************
 *
 * featureSetters_def:
 * 	("setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
 * 	":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
 * 	name=EString ":string") ");";
 *
 **/

// ("setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
// ":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
// name=EString ":string") ");"
protected class FeatureSetters_def_Group extends GroupToken {
	
	public FeatureSetters_def_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_RightParenthesisSemicolonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureSetters_defRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "setLowerBound(" lowerBound=EInt ":int" | "setUpperBound(" lowerBound=EInt ":int" | "setType(" eType=Classifier
// ":classifier" | "setOpposite(" opposite=Reference ":reference" | "setOwner(" opposite=Class ":class" | "setName("
// name=EString ":string"
protected class FeatureSetters_def_Alternatives_0 extends AlternativesToken {

	public FeatureSetters_def_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureSetters_def_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureSetters_def_Group_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FeatureSetters_def_Group_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new FeatureSetters_def_Group_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new FeatureSetters_def_Group_0_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// "setLowerBound(" lowerBound=EInt ":int"
protected class FeatureSetters_def_Group_0_0 extends GroupToken {
	
	public FeatureSetters_def_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_IntKeyword_0_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setLowerBound("
protected class FeatureSetters_def_SetLowerBoundKeyword_0_0_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetLowerBoundKeyword_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetLowerBoundKeyword_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// lowerBound=EInt
protected class FeatureSetters_def_LowerBoundAssignment_0_0_1 extends AssignmentToken  {
	
	public FeatureSetters_def_LowerBoundAssignment_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getLowerBoundAssignment_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_SetLowerBoundKeyword_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSetters_defAccess().getLowerBoundEIntParserRuleCall_0_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureSetters_defAccess().getLowerBoundEIntParserRuleCall_0_0_1_0();
			return obj;
		}
		return null;
	}

}

// ":int"
protected class FeatureSetters_def_IntKeyword_0_0_2 extends KeywordToken  {
	
	public FeatureSetters_def_IntKeyword_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getIntKeyword_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_LowerBoundAssignment_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "setUpperBound(" lowerBound=EInt ":int"
protected class FeatureSetters_def_Group_0_1 extends GroupToken {
	
	public FeatureSetters_def_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_IntKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setUpperBound("
protected class FeatureSetters_def_SetUpperBoundKeyword_0_1_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetUpperBoundKeyword_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetUpperBoundKeyword_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// lowerBound=EInt
protected class FeatureSetters_def_LowerBoundAssignment_0_1_1 extends AssignmentToken  {
	
	public FeatureSetters_def_LowerBoundAssignment_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getLowerBoundAssignment_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_SetUpperBoundKeyword_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSetters_defAccess().getLowerBoundEIntParserRuleCall_0_1_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureSetters_defAccess().getLowerBoundEIntParserRuleCall_0_1_1_0();
			return obj;
		}
		return null;
	}

}

// ":int"
protected class FeatureSetters_def_IntKeyword_0_1_2 extends KeywordToken  {
	
	public FeatureSetters_def_IntKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getIntKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_LowerBoundAssignment_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "setType(" eType=Classifier ":classifier"
protected class FeatureSetters_def_Group_0_2 extends GroupToken {
	
	public FeatureSetters_def_Group_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_ClassifierKeyword_0_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setType("
protected class FeatureSetters_def_SetTypeKeyword_0_2_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetTypeKeyword_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetTypeKeyword_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// eType=Classifier
protected class FeatureSetters_def_ETypeAssignment_0_2_1 extends AssignmentToken  {
	
	public FeatureSetters_def_ETypeAssignment_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getETypeAssignment_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Classifier_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("eType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("eType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassifierRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureSetters_defAccess().getETypeClassifierParserRuleCall_0_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureSetters_def_SetTypeKeyword_0_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":classifier"
protected class FeatureSetters_def_ClassifierKeyword_0_2_2 extends KeywordToken  {
	
	public FeatureSetters_def_ClassifierKeyword_0_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getClassifierKeyword_0_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_ETypeAssignment_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "setOpposite(" opposite=Reference ":reference"
protected class FeatureSetters_def_Group_0_3 extends GroupToken {
	
	public FeatureSetters_def_Group_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_ReferenceKeyword_0_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setOpposite("
protected class FeatureSetters_def_SetOppositeKeyword_0_3_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetOppositeKeyword_0_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetOppositeKeyword_0_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// opposite=Reference
protected class FeatureSetters_def_OppositeAssignment_0_3_1 extends AssignmentToken  {
	
	public FeatureSetters_def_OppositeAssignment_0_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getOppositeAssignment_0_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("opposite",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("opposite");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureSetters_defAccess().getOppositeReferenceParserRuleCall_0_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureSetters_def_SetOppositeKeyword_0_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":reference"
protected class FeatureSetters_def_ReferenceKeyword_0_3_2 extends KeywordToken  {
	
	public FeatureSetters_def_ReferenceKeyword_0_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getReferenceKeyword_0_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_OppositeAssignment_0_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "setOwner(" opposite=Class ":class"
protected class FeatureSetters_def_Group_0_4 extends GroupToken {
	
	public FeatureSetters_def_Group_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_ClassKeyword_0_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setOwner("
protected class FeatureSetters_def_SetOwnerKeyword_0_4_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetOwnerKeyword_0_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetOwnerKeyword_0_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// opposite=Class
protected class FeatureSetters_def_OppositeAssignment_0_4_1 extends AssignmentToken  {
	
	public FeatureSetters_def_OppositeAssignment_0_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getOppositeAssignment_0_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("opposite",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("opposite");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureSetters_defAccess().getOppositeClassParserRuleCall_0_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureSetters_def_SetOwnerKeyword_0_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":class"
protected class FeatureSetters_def_ClassKeyword_0_4_2 extends KeywordToken  {
	
	public FeatureSetters_def_ClassKeyword_0_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getClassKeyword_0_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_OppositeAssignment_0_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "setName(" name=EString ":string"
protected class FeatureSetters_def_Group_0_5 extends GroupToken {
	
	public FeatureSetters_def_Group_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getGroup_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_StringKeyword_0_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "setName("
protected class FeatureSetters_def_SetNameKeyword_0_5_0 extends KeywordToken  {
	
	public FeatureSetters_def_SetNameKeyword_0_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getSetNameKeyword_0_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class FeatureSetters_def_NameAssignment_0_5_1 extends AssignmentToken  {
	
	public FeatureSetters_def_NameAssignment_0_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getNameAssignment_0_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_SetNameKeyword_0_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureSetters_defAccess().getNameEStringParserRuleCall_0_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureSetters_defAccess().getNameEStringParserRuleCall_0_5_1_0();
			return obj;
		}
		return null;
	}

}

// ":string"
protected class FeatureSetters_def_StringKeyword_0_5_2 extends KeywordToken  {
	
	public FeatureSetters_def_StringKeyword_0_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getStringKeyword_0_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_NameAssignment_0_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ");"
protected class FeatureSetters_def_RightParenthesisSemicolonKeyword_1 extends KeywordToken  {
	
	public FeatureSetters_def_RightParenthesisSemicolonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureSetters_defAccess().getRightParenthesisSemicolonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_def_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule featureSetters_def ****************/


/************ begin Rule ReferenceOp ****************
 *
 * ReferenceOp:
 * 	("reference" var=Reference "=") ((CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE)
 * 	("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator);
 *
 **/

// ("reference" var=Reference "=") ((CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE)
// ("{" setters+=FeatureSetters* "}" | ";") | complex+=CallOperator)
protected class ReferenceOp_Group extends GroupToken {
	
	public ReferenceOp_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceOpRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "reference" var=Reference "="
protected class ReferenceOp_Group_0 extends GroupToken {
	
	public ReferenceOp_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_EqualsSignKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "reference"
protected class ReferenceOp_ReferenceKeyword_0_0 extends KeywordToken  {
	
	public ReferenceOp_ReferenceKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getReferenceKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// var=Reference
protected class ReferenceOp_VarAssignment_0_1 extends AssignmentToken  {
	
	public ReferenceOp_VarAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getVarAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("var",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("var");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getVarReferenceParserRuleCall_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_ReferenceKeyword_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "="
protected class ReferenceOp_EqualsSignKeyword_0_2 extends KeywordToken  {
	
	public ReferenceOp_EqualsSignKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getEqualsSignKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_VarAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE) ("{" setters+=FeatureSetters* "}"
// | ";") | complex+=CallOperator
protected class ReferenceOp_Alternatives_1 extends AlternativesToken {

	public ReferenceOp_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ReferenceOp_ComplexAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE) ("{" setters+=FeatureSetters* "}"
// | ";")
protected class ReferenceOp_Group_1_0 extends GroupToken {
	
	public ReferenceOp_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Alternatives_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CHANGE_op=CHANGEREFERENCE | op=ADDREFERENCE | op=DELETEREFERENCE | op=MOVEREFERENCE
protected class ReferenceOp_Alternatives_1_0_0 extends AlternativesToken {

	public ReferenceOp_Alternatives_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getAlternatives_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_CHANGE_opAssignment_1_0_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ReferenceOp_OpAssignment_1_0_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ReferenceOp_OpAssignment_1_0_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ReferenceOp_OpAssignment_1_0_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// CHANGE_op=CHANGEREFERENCE
protected class ReferenceOp_CHANGE_opAssignment_1_0_0_0 extends AssignmentToken  {
	
	public ReferenceOp_CHANGE_opAssignment_1_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getCHANGE_opAssignment_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CHANGEREFERENCE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("CHANGE_op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("CHANGE_op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCHANGEREFERENCERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getCHANGE_opCHANGEREFERENCEParserRuleCall_1_0_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=ADDREFERENCE
protected class ReferenceOp_OpAssignment_1_0_0_1 extends AssignmentToken  {
	
	public ReferenceOp_OpAssignment_1_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getOpAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ADDREFERENCE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getADDREFERENCERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getOpADDREFERENCEParserRuleCall_1_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=DELETEREFERENCE
protected class ReferenceOp_OpAssignment_1_0_0_2 extends AssignmentToken  {
	
	public ReferenceOp_OpAssignment_1_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getOpAssignment_1_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DELETEREFERENCE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDELETEREFERENCERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getOpDELETEREFERENCEParserRuleCall_1_0_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// op=MOVEREFERENCE
protected class ReferenceOp_OpAssignment_1_0_0_3 extends AssignmentToken  {
	
	public ReferenceOp_OpAssignment_1_0_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getOpAssignment_1_0_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MOVEREFERENCE_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMOVEREFERENCERule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getOpMOVEREFERENCEParserRuleCall_1_0_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "{" setters+=FeatureSetters* "}" | ";"
protected class ReferenceOp_Alternatives_1_0_1 extends AlternativesToken {

	public ReferenceOp_Alternatives_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getAlternatives_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Group_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ReferenceOp_SemicolonKeyword_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{" setters+=FeatureSetters* "}"
protected class ReferenceOp_Group_1_0_1_0 extends GroupToken {
	
	public ReferenceOp_Group_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getGroup_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_RightCurlyBracketKeyword_1_0_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class ReferenceOp_LeftCurlyBracketKeyword_1_0_1_0_0 extends KeywordToken  {
	
	public ReferenceOp_LeftCurlyBracketKeyword_1_0_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getLeftCurlyBracketKeyword_1_0_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// setters+=FeatureSetters*
protected class ReferenceOp_SettersAssignment_1_0_1_0_1 extends AssignmentToken  {
	
	public ReferenceOp_SettersAssignment_1_0_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getSettersAssignment_1_0_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureSetters_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("setters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("setters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureSettersRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getSettersFeatureSettersParserRuleCall_1_0_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_SettersAssignment_1_0_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ReferenceOp_LeftCurlyBracketKeyword_1_0_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ReferenceOp_RightCurlyBracketKeyword_1_0_1_0_2 extends KeywordToken  {
	
	public ReferenceOp_RightCurlyBracketKeyword_1_0_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getRightCurlyBracketKeyword_1_0_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_SettersAssignment_1_0_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ReferenceOp_SemicolonKeyword_1_0_1_1 extends KeywordToken  {
	
	public ReferenceOp_SemicolonKeyword_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getSemicolonKeyword_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Alternatives_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// complex+=CallOperator
protected class ReferenceOp_ComplexAssignment_1_1 extends AssignmentToken  {
	
	public ReferenceOp_ComplexAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceOpAccess().getComplexAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("complex",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("complex");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallOperatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceOpAccess().getComplexCallOperatorParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReferenceOp_Group_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule ReferenceOp ****************/


/************ begin Rule Reference ****************
 *
 * Reference returns ecore::EReference:
 * 	{Reference} name=ID;
 *
 **/

// {Reference} name=ID
protected class Reference_Group extends GroupToken {
	
	public Reference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceAccess().getReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Reference}
protected class Reference_ReferenceAction_0 extends ActionToken  {

	public Reference_ReferenceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getReferenceAccess().getReferenceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Reference_NameAssignment_1 extends AssignmentToken  {
	
	public Reference_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Reference_ReferenceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Reference ****************/





/************ begin Rule ComplexOperator ****************
 *
 * ////////////////complex operators//////////////////////////
 * 
 * ComplexOperator:
 * 	"def change" name=ID ("(" params+=Parameter? ("," params+=Parameter)* ")") "{" (classOperations+=ClassOp |
 * 	attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)* "}";
 *
 **/

// "def change" name=ID ("(" params+=Parameter? ("," params+=Parameter)* ")") "{" (classOperations+=ClassOp |
// attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)* "}"
protected class ComplexOperator_Group extends GroupToken {
	
	public ComplexOperator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComplexOperatorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "def change"
protected class ComplexOperator_DefChangeKeyword_0 extends KeywordToken  {
	
	public ComplexOperator_DefChangeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getDefChangeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ComplexOperator_NameAssignment_1 extends AssignmentToken  {
	
	public ComplexOperator_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_DefChangeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplexOperatorAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplexOperatorAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "(" params+=Parameter? ("," params+=Parameter)* ")"
protected class ComplexOperator_Group_2 extends GroupToken {
	
	public ComplexOperator_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_RightParenthesisKeyword_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ComplexOperator_LeftParenthesisKeyword_2_0 extends KeywordToken  {
	
	public ComplexOperator_LeftParenthesisKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getLeftParenthesisKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// params+=Parameter?
protected class ComplexOperator_ParamsAssignment_2_1 extends AssignmentToken  {
	
	public ComplexOperator_ParamsAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getParamsAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("params",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("params");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComplexOperatorAccess().getParamsParameterParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComplexOperator_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," params+=Parameter)*
protected class ComplexOperator_Group_2_2 extends GroupToken {
	
	public ComplexOperator_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_ParamsAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ComplexOperator_CommaKeyword_2_2_0 extends KeywordToken  {
	
	public ComplexOperator_CommaKeyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getCommaKeyword_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComplexOperator_ParamsAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ComplexOperator_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// params+=Parameter
protected class ComplexOperator_ParamsAssignment_2_2_1 extends AssignmentToken  {
	
	public ComplexOperator_ParamsAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getParamsAssignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("params",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("params");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComplexOperatorAccess().getParamsParameterParserRuleCall_2_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComplexOperator_CommaKeyword_2_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ComplexOperator_RightParenthesisKeyword_2_3 extends KeywordToken  {
	
	public ComplexOperator_RightParenthesisKeyword_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getRightParenthesisKeyword_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComplexOperator_ParamsAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ComplexOperator_LeftParenthesisKeyword_2_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


// "{"
protected class ComplexOperator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ComplexOperator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (classOperations+=ClassOp | attributeOperations+=AttributeOp | referenceOperations+=ReferenceOp)*
protected class ComplexOperator_Alternatives_4 extends AlternativesToken {

	public ComplexOperator_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_ClassOperationsAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComplexOperator_AttributeOperationsAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ComplexOperator_ReferenceOperationsAssignment_4_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// classOperations+=ClassOp
protected class ComplexOperator_ClassOperationsAssignment_4_0 extends AssignmentToken  {
	
	public ComplexOperator_ClassOperationsAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getClassOperationsAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classOperations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classOperations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComplexOperatorAccess().getClassOperationsClassOpParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComplexOperator_Alternatives_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ComplexOperator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// attributeOperations+=AttributeOp
protected class ComplexOperator_AttributeOperationsAssignment_4_1 extends AssignmentToken  {
	
	public ComplexOperator_AttributeOperationsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getAttributeOperationsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AttributeOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeOperations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeOperations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComplexOperatorAccess().getAttributeOperationsAttributeOpParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComplexOperator_Alternatives_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ComplexOperator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// referenceOperations+=ReferenceOp
protected class ComplexOperator_ReferenceOperationsAssignment_4_2 extends AssignmentToken  {
	
	public ComplexOperator_ReferenceOperationsAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getReferenceOperationsAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceOp_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referenceOperations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referenceOperations");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReferenceOpRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComplexOperatorAccess().getReferenceOperationsReferenceOpParserRuleCall_4_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComplexOperator_Alternatives_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ComplexOperator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class ComplexOperator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public ComplexOperator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplexOperatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComplexOperator_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComplexOperator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ComplexOperator ****************/


/************ begin Rule Parameter ****************
 *
 * //name=ID ":" type=[ecore::EClassifier] 
 * 
 * //"class" Class|"attribute" Attribute|"reference" Reference|"string" EString|"int" EInt |"bool" EBoolean
 * 
 * Parameter returns ecore::EObject:
 * 	EReferencePar | EAttributePar | EClassPar | EPackagePar | EStringPar | EBoolPar | EIntPar;
 *
 **/

// EReferencePar | EAttributePar | EClassPar | EPackagePar | EStringPar | EBoolPar | EIntPar
protected class Parameter_Alternatives extends AlternativesToken {

	public Parameter_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParameterAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_EReferenceParParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Parameter_EAttributeParParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Parameter_EClassParParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Parameter_EPackageParParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Parameter_EStringParParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Parameter_EBoolParParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Parameter_EIntParParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeParAccess().getEAttributeParAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEBoolParRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEClassParAccess().getEClassParAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEPackageParAccess().getEPackageParAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEReferenceParAccess().getEReferenceParAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEIntParRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEStringParRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// EReferencePar
protected class Parameter_EReferenceParParserRuleCall_0 extends RuleCallToken {
	
	public Parameter_EReferenceParParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEReferenceParParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferencePar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEReferenceParAccess().getEReferenceParAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(EReferencePar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EAttributePar
protected class Parameter_EAttributeParParserRuleCall_1 extends RuleCallToken {
	
	public Parameter_EAttributeParParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEAttributeParParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributePar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeParAccess().getEAttributeParAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(EAttributePar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EClassPar
protected class Parameter_EClassParParserRuleCall_2 extends RuleCallToken {
	
	public Parameter_EClassParParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEClassParParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassPar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEClassParAccess().getEClassParAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(EClassPar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EPackagePar
protected class Parameter_EPackageParParserRuleCall_3 extends RuleCallToken {
	
	public Parameter_EPackageParParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEPackageParParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackagePar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEPackageParAccess().getEPackageParAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(EPackagePar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EStringPar
protected class Parameter_EStringParParserRuleCall_4 extends RuleCallToken {
	
	public Parameter_EStringParParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEStringParParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EStringPar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEStringParRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EStringPar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EBoolPar
protected class Parameter_EBoolParParserRuleCall_5 extends RuleCallToken {
	
	public Parameter_EBoolParParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEBoolParParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EBoolPar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEBoolParRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EBoolPar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EIntPar
protected class Parameter_EIntParParserRuleCall_6 extends RuleCallToken {
	
	public Parameter_EIntParParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParameterAccess().getEIntParParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EIntPar_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEIntParRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EIntPar_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Parameter ****************/


/************ begin Rule EReferencePar ****************
 *
 * EReferencePar returns ecore::EReference:
 * 	{EReferencePar} name=ID ":" "Reference";
 *
 **/

// {EReferencePar} name=ID ":" "Reference"
protected class EReferencePar_Group extends GroupToken {
	
	public EReferencePar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEReferenceParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferencePar_ReferenceKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEReferenceParAccess().getEReferenceParAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {EReferencePar}
protected class EReferencePar_EReferenceParAction_0 extends ActionToken  {

	public EReferencePar_EReferenceParAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEReferenceParAccess().getEReferenceParAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class EReferencePar_NameAssignment_1 extends AssignmentToken  {
	
	public EReferencePar_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEReferenceParAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferencePar_EReferenceParAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEReferenceParAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEReferenceParAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EReferencePar_ColonKeyword_2 extends KeywordToken  {
	
	public EReferencePar_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceParAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferencePar_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Reference"
protected class EReferencePar_ReferenceKeyword_3 extends KeywordToken  {
	
	public EReferencePar_ReferenceKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEReferenceParAccess().getReferenceKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EReferencePar_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EReferencePar ****************/


/************ begin Rule EAttributePar ****************
 *
 * EAttributePar returns ecore::EAttribute:
 * 	{EAttributePar} name=ID ":" "Attribute";
 *
 **/

// {EAttributePar} name=ID ":" "Attribute"
protected class EAttributePar_Group extends GroupToken {
	
	public EAttributePar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEAttributeParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributePar_AttributeKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEAttributeParAccess().getEAttributeParAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {EAttributePar}
protected class EAttributePar_EAttributeParAction_0 extends ActionToken  {

	public EAttributePar_EAttributeParAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEAttributeParAccess().getEAttributeParAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class EAttributePar_NameAssignment_1 extends AssignmentToken  {
	
	public EAttributePar_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEAttributeParAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributePar_EAttributeParAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEAttributeParAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEAttributeParAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EAttributePar_ColonKeyword_2 extends KeywordToken  {
	
	public EAttributePar_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeParAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributePar_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Attribute"
protected class EAttributePar_AttributeKeyword_3 extends KeywordToken  {
	
	public EAttributePar_AttributeKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEAttributeParAccess().getAttributeKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EAttributePar_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EAttributePar ****************/


/************ begin Rule EClassPar ****************
 *
 * EClassPar returns ecore::EClass:
 * 	{EClassPar} name=ID ":" "Class";
 *
 **/

// {EClassPar} name=ID ":" "Class"
protected class EClassPar_Group extends GroupToken {
	
	public EClassPar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEClassParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassPar_ClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEClassParAccess().getEClassParAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {EClassPar}
protected class EClassPar_EClassParAction_0 extends ActionToken  {

	public EClassPar_EClassParAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEClassParAccess().getEClassParAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class EClassPar_NameAssignment_1 extends AssignmentToken  {
	
	public EClassPar_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEClassParAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassPar_EClassParAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEClassParAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEClassParAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EClassPar_ColonKeyword_2 extends KeywordToken  {
	
	public EClassPar_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassParAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassPar_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Class"
protected class EClassPar_ClassKeyword_3 extends KeywordToken  {
	
	public EClassPar_ClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEClassParAccess().getClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EClassPar_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EClassPar ****************/


/************ begin Rule EPackagePar ****************
 *
 * EPackagePar returns ecore::EPackage:
 * 	{EPackagePar} name=ID ":" "Package";
 *
 **/

// {EPackagePar} name=ID ":" "Package"
protected class EPackagePar_Group extends GroupToken {
	
	public EPackagePar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEPackageParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackagePar_PackageKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEPackageParAccess().getEPackageParAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {EPackagePar}
protected class EPackagePar_EPackageParAction_0 extends ActionToken  {

	public EPackagePar_EPackageParAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEPackageParAccess().getEPackageParAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class EPackagePar_NameAssignment_1 extends AssignmentToken  {
	
	public EPackagePar_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEPackageParAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackagePar_EPackageParAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEPackageParAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEPackageParAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EPackagePar_ColonKeyword_2 extends KeywordToken  {
	
	public EPackagePar_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageParAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackagePar_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Package"
protected class EPackagePar_PackageKeyword_3 extends KeywordToken  {
	
	public EPackagePar_PackageKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEPackageParAccess().getPackageKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EPackagePar_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EPackagePar ****************/


/************ begin Rule EIntPar ****************
 *
 * EIntPar returns INT:
 * 	name=ID ":" "Int";
 *
 **/

// name=ID ":" "Int"
protected class EIntPar_Group extends GroupToken {
	
	public EIntPar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEIntParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EIntPar_IntKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEIntParRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class EIntPar_NameAssignment_0 extends AssignmentToken  {
	
	public EIntPar_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEIntParAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEIntParAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEIntParAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EIntPar_ColonKeyword_1 extends KeywordToken  {
	
	public EIntPar_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEIntParAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EIntPar_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Int"
protected class EIntPar_IntKeyword_2 extends KeywordToken  {
	
	public EIntPar_IntKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEIntParAccess().getIntKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EIntPar_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EIntPar ****************/


/************ begin Rule EStringPar ****************
 *
 * EStringPar returns STRING:
 * 	name=ID ":" "String";
 *
 **/

// name=ID ":" "String"
protected class EStringPar_Group extends GroupToken {
	
	public EStringPar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEStringParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EStringPar_StringKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEStringParRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class EStringPar_NameAssignment_0 extends AssignmentToken  {
	
	public EStringPar_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEStringParAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEStringParAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEStringParAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EStringPar_ColonKeyword_1 extends KeywordToken  {
	
	public EStringPar_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEStringParAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EStringPar_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "String"
protected class EStringPar_StringKeyword_2 extends KeywordToken  {
	
	public EStringPar_StringKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEStringParAccess().getStringKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EStringPar_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EStringPar ****************/


/************ begin Rule EBoolPar ****************
 *
 * EBoolPar:
 * 	name=ID ":" "Bool";
 *
 **/

// name=ID ":" "Bool"
protected class EBoolPar_Group extends GroupToken {
	
	public EBoolPar_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEBoolParAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EBoolPar_BoolKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEBoolParRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class EBoolPar_NameAssignment_0 extends AssignmentToken  {
	
	public EBoolPar_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEBoolParAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEBoolParAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEBoolParAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EBoolPar_ColonKeyword_1 extends KeywordToken  {
	
	public EBoolPar_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEBoolParAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EBoolPar_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Bool"
protected class EBoolPar_BoolKeyword_2 extends KeywordToken  {
	
	public EBoolPar_BoolKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEBoolParAccess().getBoolKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EBoolPar_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EBoolPar ****************/


/************ begin Rule CallOperator ****************
 *
 * /////////call complex operator//////////////////////
 * 
 * CallOperator:
 * 	fun=[ComplexOperator] "(" args+=Argument? ("," args+=Argument)* ");";
 *
 **/

// fun=[ComplexOperator] "(" args+=Argument? ("," args+=Argument)* ");"
protected class CallOperator_Group extends GroupToken {
	
	public CallOperator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_RightParenthesisSemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCallOperatorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// fun=[ComplexOperator]
protected class CallOperator_FunAssignment_0 extends AssignmentToken  {
	
	public CallOperator_FunAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getFunAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fun",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fun");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallOperatorAccess().getFunComplexOperatorCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCallOperatorAccess().getFunComplexOperatorCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "("
protected class CallOperator_LeftParenthesisKeyword_1 extends KeywordToken  {
	
	public CallOperator_LeftParenthesisKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getLeftParenthesisKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_FunAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// args+=Argument?
protected class CallOperator_ArgsAssignment_2 extends AssignmentToken  {
	
	public CallOperator_ArgsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getArgsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Argument_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("args",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("args");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArgumentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCallOperatorAccess().getArgsArgumentParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CallOperator_LeftParenthesisKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," args+=Argument)*
protected class CallOperator_Group_3 extends GroupToken {
	
	public CallOperator_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_ArgsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class CallOperator_CommaKeyword_3_0 extends KeywordToken  {
	
	public CallOperator_CommaKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getCommaKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CallOperator_ArgsAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new CallOperator_LeftParenthesisKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// args+=Argument
protected class CallOperator_ArgsAssignment_3_1 extends AssignmentToken  {
	
	public CallOperator_ArgsAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getArgsAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Argument_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("args",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("args");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArgumentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCallOperatorAccess().getArgsArgumentParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CallOperator_CommaKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ");"
protected class CallOperator_RightParenthesisSemicolonKeyword_4 extends KeywordToken  {
	
	public CallOperator_RightParenthesisSemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallOperatorAccess().getRightParenthesisSemicolonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallOperator_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CallOperator_ArgsAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new CallOperator_LeftParenthesisKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule CallOperator ****************/


/************ begin Rule Argument ****************
 *
 * Argument:
 * 	{Argument} arg=[ecore::EObject] | STRING | INT;
 *
 **/

// {Argument} arg=[ecore::EObject] | STRING | INT
protected class Argument_Alternatives extends AlternativesToken {

	public Argument_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getArgumentAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Argument_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Argument_STRINGTerminalRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArgumentAccess().getArgumentAction_0_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Argument} arg=[ecore::EObject]
protected class Argument_Group_0 extends GroupToken {
	
	public Argument_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArgumentAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Argument_ArgAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Argument}
protected class Argument_ArgumentAction_0_0 extends ActionToken  {

	public Argument_ArgumentAction_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getArgumentAccess().getArgumentAction_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// arg=[ecore::EObject]
protected class Argument_ArgAssignment_0_1 extends AssignmentToken  {
	
	public Argument_ArgAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArgumentAccess().getArgAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Argument_ArgumentAction_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arg",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arg");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArgumentAccess().getArgEObjectCrossReference_0_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getArgumentAccess().getArgEObjectCrossReference_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// STRING
protected class Argument_STRINGTerminalRuleCall_1 extends UnassignedTextToken {

	public Argument_STRINGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getArgumentAccess().getSTRINGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}


/************ end Rule Argument ****************/


/************ begin Rule MigrationProgram ****************
 *
 * //////////////////////////////ATLMigration////////////////////////////////
 * 
 * MigrationProgram:
 * 	("include" libs+=STRING ";")* migr="migrate" "transformation" path=STRING ":"
 * 	(transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{"
 * 	rules+=Rule* "}";
 *
 **/

// ("include" libs+=STRING ";")* migr="migrate" "transformation" path=STRING ":" (transformationPackage+=[ecore::EPackage]
// ("," transformationPackage+=[ecore::EPackage])) "with" delta=STRING "{" rules+=Rule* "}"
protected class MigrationProgram_Group extends GroupToken {
	
	public MigrationProgram_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_RightCurlyBracketKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigrationProgramRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ("include" libs+=STRING ";")*
protected class MigrationProgram_Group_0 extends GroupToken {
	
	public MigrationProgram_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_SemicolonKeyword_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "include"
protected class MigrationProgram_IncludeKeyword_0_0 extends KeywordToken  {
	
	public MigrationProgram_IncludeKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getIncludeKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

}

// libs+=STRING
protected class MigrationProgram_LibsAssignment_0_1 extends AssignmentToken  {
	
	public MigrationProgram_LibsAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getLibsAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_IncludeKeyword_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("libs",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("libs");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getLibsSTRINGTerminalRuleCall_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getLibsSTRINGTerminalRuleCall_0_1_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MigrationProgram_SemicolonKeyword_0_2 extends KeywordToken  {
	
	public MigrationProgram_SemicolonKeyword_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getSemicolonKeyword_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_LibsAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// migr="migrate"
protected class MigrationProgram_MigrAssignment_1 extends AssignmentToken  {
	
	public MigrationProgram_MigrAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getMigrAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migr");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getMigrMigrateKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMigrationProgramAccess().getMigrMigrateKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// "transformation"
protected class MigrationProgram_TransformationKeyword_2 extends KeywordToken  {
	
	public MigrationProgram_TransformationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTransformationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_MigrAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// path=STRING
protected class MigrationProgram_PathAssignment_3 extends AssignmentToken  {
	
	public MigrationProgram_PathAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getPathAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TransformationKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("path",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("path");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getPathSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getPathSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class MigrationProgram_ColonKeyword_4 extends KeywordToken  {
	
	public MigrationProgram_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_PathAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage] ("," transformationPackage+=[ecore::EPackage])
protected class MigrationProgram_Group_5 extends GroupToken {
	
	public MigrationProgram_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_TransformationPackageAssignment_5_0 extends AssignmentToken  {
	
	public MigrationProgram_TransformationPackageAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTransformationPackageAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("transformationPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("transformationPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "," transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_Group_5_1 extends GroupToken {
	
	public MigrationProgram_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TransformationPackageAssignment_5_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MigrationProgram_CommaKeyword_5_1_0 extends KeywordToken  {
	
	public MigrationProgram_CommaKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getCommaKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_TransformationPackageAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// transformationPackage+=[ecore::EPackage]
protected class MigrationProgram_TransformationPackageAssignment_5_1_1 extends AssignmentToken  {
	
	public MigrationProgram_TransformationPackageAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getTransformationPackageAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_CommaKeyword_5_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("transformationPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("transformationPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_1_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigrationProgramAccess().getTransformationPackageEPackageCrossReference_5_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



// "with"
protected class MigrationProgram_WithKeyword_6 extends KeywordToken  {
	
	public MigrationProgram_WithKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getWithKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_Group_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// delta=STRING
protected class MigrationProgram_DeltaAssignment_7 extends AssignmentToken  {
	
	public MigrationProgram_DeltaAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getDeltaAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_WithKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("delta",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("delta");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigrationProgramAccess().getDeltaSTRINGTerminalRuleCall_7_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigrationProgramAccess().getDeltaSTRINGTerminalRuleCall_7_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MigrationProgram_LeftCurlyBracketKeyword_8 extends KeywordToken  {
	
	public MigrationProgram_LeftCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getLeftCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_DeltaAssignment_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rules+=Rule*
protected class MigrationProgram_RulesAssignment_9 extends AssignmentToken  {
	
	public MigrationProgram_RulesAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getRulesAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rules",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rules");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigrationProgramAccess().getRulesRuleParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigrationProgram_RulesAssignment_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MigrationProgram_LeftCurlyBracketKeyword_8(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MigrationProgram_RightCurlyBracketKeyword_10 extends KeywordToken  {
	
	public MigrationProgram_RightCurlyBracketKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigrationProgramAccess().getRightCurlyBracketKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigrationProgram_RulesAssignment_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigrationProgram_LeftCurlyBracketKeyword_8(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MigrationProgram ****************/


/************ begin Rule Rule ****************
 *
 * Rule:
 * 	"rule" name=ID "[" filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}";
 *
 **/

// "rule" name=ID "[" filter=OpDef "]" "{" rewritingRules+=RewritingRule* "}"
protected class Rule_Group extends GroupToken {
	
	public Rule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "rule"
protected class Rule_RuleKeyword_0 extends KeywordToken  {
	
	public Rule_RuleKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRuleKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Rule_NameAssignment_1 extends AssignmentToken  {
	
	public Rule_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RuleKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "["
protected class Rule_LeftSquareBracketKeyword_2 extends KeywordToken  {
	
	public Rule_LeftSquareBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getLeftSquareBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filter=OpDef
protected class Rule_FilterAssignment_3 extends AssignmentToken  {
	
	public Rule_FilterAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getFilterAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OpDef_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filter",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filter");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOpDefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRuleAccess().getFilterOpDefParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Rule_LeftSquareBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "]"
protected class Rule_RightSquareBracketKeyword_4 extends KeywordToken  {
	
	public Rule_RightSquareBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRightSquareBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_FilterAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Rule_LeftCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Rule_LeftCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RightSquareBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rewritingRules+=RewritingRule*
protected class Rule_RewritingRulesAssignment_6 extends AssignmentToken  {
	
	public Rule_RewritingRulesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRuleAccess().getRewritingRulesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rewritingRules",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rewritingRules");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRewritingRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRuleAccess().getRewritingRulesRewritingRuleParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Rule_RewritingRulesAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Rule_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Rule_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Rule_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Rule_RewritingRulesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Rule_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Rule ****************/


/************ begin Rule RewritingRule ****************
 *
 * RewritingRule:
 * 	(migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)* ";";
 *
 **/

// (migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX) ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)* ";"
protected class RewritingRule_Group extends GroupToken {
	
	public RewritingRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_SemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRewritingRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// migratorsSX+=MigratorSX "->" migratorDX+=MigratorDX
protected class RewritingRule_Group_0 extends GroupToken {
	
	public RewritingRule_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorDXAssignment_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorsSX+=MigratorSX
protected class RewritingRule_MigratorsSXAssignment_0_0 extends AssignmentToken  {
	
	public RewritingRule_MigratorsSXAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorsSXAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorsSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorsSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorsSXMigratorSXParserRuleCall_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "->"
protected class RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1 extends KeywordToken  {
	
	public RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorsSXAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorDX+=MigratorDX
protected class RewritingRule_MigratorDXAssignment_0_2 extends AssignmentToken  {
	
	public RewritingRule_MigratorDXAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorDXAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_HyphenMinusGreaterThanSignKeyword_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("&" migratorSX+=MigratorSX "->" migratorDX+=MigratorDX)*
protected class RewritingRule_Group_1 extends GroupToken {
	
	public RewritingRule_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorDXAssignment_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class RewritingRule_AmpersandKeyword_1_0 extends KeywordToken  {
	
	public RewritingRule_AmpersandKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getAmpersandKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RewritingRule_Group_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// migratorSX+=MigratorSX
protected class RewritingRule_MigratorSXAssignment_1_1 extends AssignmentToken  {
	
	public RewritingRule_MigratorSXAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorSXAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorSXMigratorSXParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_AmpersandKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "->"
protected class RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2 extends KeywordToken  {
	
	public RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getHyphenMinusGreaterThanSignKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_MigratorSXAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// migratorDX+=MigratorDX
protected class RewritingRule_MigratorDXAssignment_1_3 extends AssignmentToken  {
	
	public RewritingRule_MigratorDXAssignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getMigratorDXAssignment_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("migratorDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("migratorDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRewritingRuleAccess().getMigratorDXMigratorDXParserRuleCall_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RewritingRule_HyphenMinusGreaterThanSignKeyword_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ";"
protected class RewritingRule_SemicolonKeyword_2 extends KeywordToken  {
	
	public RewritingRule_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRewritingRuleAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RewritingRule_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RewritingRule_Group_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule RewritingRule ****************/


/************ begin Rule MigratorSX ****************
 *
 * MigratorSX:
 * 	"<" elementSX=[ecore::EClass] name=ID ">" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)* "]";
 *
 **/

// "<" elementSX=[ecore::EClass] name=ID ">" "[" filterSX+=FilterMigrator ("&" filterSX+=FilterMigrator)* "]"
protected class MigratorSX_Group extends GroupToken {
	
	public MigratorSX_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_RightSquareBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorSXRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "<"
protected class MigratorSX_LessThanSignKeyword_0 extends KeywordToken  {
	
	public MigratorSX_LessThanSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getLessThanSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// elementSX=[ecore::EClass]
protected class MigratorSX_ElementSXAssignment_1 extends AssignmentToken  {
	
	public MigratorSX_ElementSXAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getElementSXAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_LessThanSignKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elementSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elementSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorSXAccess().getElementSXEClassCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigratorSXAccess().getElementSXEClassCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// name=ID
protected class MigratorSX_NameAssignment_2 extends AssignmentToken  {
	
	public MigratorSX_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_ElementSXAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigratorSXAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigratorSXAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class MigratorSX_GreaterThanSignKeyword_3 extends KeywordToken  {
	
	public MigratorSX_GreaterThanSignKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getGreaterThanSignKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class MigratorSX_LeftSquareBracketKeyword_4 extends KeywordToken  {
	
	public MigratorSX_LeftSquareBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getLeftSquareBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_GreaterThanSignKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filterSX+=FilterMigrator
protected class MigratorSX_FilterSXAssignment_5 extends AssignmentToken  {
	
	public MigratorSX_FilterSXAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getFilterSXAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterSX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorSX_LeftSquareBracketKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("&" filterSX+=FilterMigrator)*
protected class MigratorSX_Group_6 extends GroupToken {
	
	public MigratorSX_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_FilterSXAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class MigratorSX_AmpersandKeyword_6_0 extends KeywordToken  {
	
	public MigratorSX_AmpersandKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getAmpersandKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorSX_FilterSXAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// filterSX+=FilterMigrator
protected class MigratorSX_FilterSXAssignment_6_1 extends AssignmentToken  {
	
	public MigratorSX_FilterSXAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getFilterSXAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterSX",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterSX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorSXAccess().getFilterSXFilterMigratorParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorSX_AmpersandKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class MigratorSX_RightSquareBracketKeyword_7 extends KeywordToken  {
	
	public MigratorSX_RightSquareBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorSXAccess().getRightSquareBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorSX_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorSX_FilterSXAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MigratorSX ****************/


/************ begin Rule MigratorDX ****************
 *
 * MigratorDX:
 * 	"<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]" | "null";
 *
 **/

// "<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]" | "null"
protected class MigratorDX_Alternatives extends AlternativesToken {

	public MigratorDX_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_NullKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMigratorDXRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "<" elementDX=[ecore::EClass] name=ID ">" "[" filterDX+=FilterMigrator ("&" filterDX+=FilterMigrator)* "]"
protected class MigratorDX_Group_0 extends GroupToken {
	
	public MigratorDX_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_RightSquareBracketKeyword_0_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class MigratorDX_LessThanSignKeyword_0_0 extends KeywordToken  {
	
	public MigratorDX_LessThanSignKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getLessThanSignKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// elementDX=[ecore::EClass]
protected class MigratorDX_ElementDXAssignment_0_1 extends AssignmentToken  {
	
	public MigratorDX_ElementDXAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getElementDXAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_LessThanSignKeyword_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elementDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elementDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMigratorDXAccess().getElementDXEClassCrossReference_0_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMigratorDXAccess().getElementDXEClassCrossReference_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// name=ID
protected class MigratorDX_NameAssignment_0_2 extends AssignmentToken  {
	
	public MigratorDX_NameAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getNameAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_ElementDXAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMigratorDXAccess().getNameIDTerminalRuleCall_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMigratorDXAccess().getNameIDTerminalRuleCall_0_2_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class MigratorDX_GreaterThanSignKeyword_0_3 extends KeywordToken  {
	
	public MigratorDX_GreaterThanSignKeyword_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGreaterThanSignKeyword_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_NameAssignment_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class MigratorDX_LeftSquareBracketKeyword_0_4 extends KeywordToken  {
	
	public MigratorDX_LeftSquareBracketKeyword_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getLeftSquareBracketKeyword_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_GreaterThanSignKeyword_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filterDX+=FilterMigrator
protected class MigratorDX_FilterDXAssignment_0_5 extends AssignmentToken  {
	
	public MigratorDX_FilterDXAssignment_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getFilterDXAssignment_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterDX",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorDX_LeftSquareBracketKeyword_0_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("&" filterDX+=FilterMigrator)*
protected class MigratorDX_Group_0_6 extends GroupToken {
	
	public MigratorDX_Group_0_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getGroup_0_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_FilterDXAssignment_0_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "&"
protected class MigratorDX_AmpersandKeyword_0_6_0 extends KeywordToken  {
	
	public MigratorDX_AmpersandKeyword_0_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getAmpersandKeyword_0_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_FilterDXAssignment_0_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// filterDX+=FilterMigrator
protected class MigratorDX_FilterDXAssignment_0_6_1 extends AssignmentToken  {
	
	public MigratorDX_FilterDXAssignment_0_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getFilterDXAssignment_0_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filterDX",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filterDX");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMigratorDXAccess().getFilterDXFilterMigratorParserRuleCall_0_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MigratorDX_AmpersandKeyword_0_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class MigratorDX_RightSquareBracketKeyword_0_7 extends KeywordToken  {
	
	public MigratorDX_RightSquareBracketKeyword_0_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getRightSquareBracketKeyword_0_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MigratorDX_Group_0_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MigratorDX_FilterDXAssignment_0_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "null"
protected class MigratorDX_NullKeyword_1 extends KeywordToken  {
	
	public MigratorDX_NullKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMigratorDXAccess().getNullKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}


/************ end Rule MigratorDX ****************/


/************ begin Rule FilterMigrator ****************
 *
 * FilterMigrator:
 * 	"#" feature=[ecore::EStructuralFeature] ("." internalFeature=[ecore::EStructuralFeature])? op=filterOperation
 * 	dxobj=[ecore::EObject] ("." dxgetters=[ecore::EStructuralFeature])?;
 *
 **/

// "#" feature=[ecore::EStructuralFeature] ("." internalFeature=[ecore::EStructuralFeature])? op=filterOperation
// dxobj=[ecore::EObject] ("." dxgetters=[ecore::EStructuralFeature])?
protected class FilterMigrator_Group extends GroupToken {
	
	public FilterMigrator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FilterMigrator_DxobjAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFilterMigratorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#"
protected class FilterMigrator_NumberSignKeyword_0 extends KeywordToken  {
	
	public FilterMigrator_NumberSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getNumberSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// feature=[ecore::EStructuralFeature]
protected class FilterMigrator_FeatureAssignment_1 extends AssignmentToken  {
	
	public FilterMigrator_FeatureAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getFeatureAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_NumberSignKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("feature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("feature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorAccess().getFeatureEStructuralFeatureCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFilterMigratorAccess().getFeatureEStructuralFeatureCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("." internalFeature=[ecore::EStructuralFeature])?
protected class FilterMigrator_Group_2 extends GroupToken {
	
	public FilterMigrator_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_InternalFeatureAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class FilterMigrator_FullStopKeyword_2_0 extends KeywordToken  {
	
	public FilterMigrator_FullStopKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getFullStopKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_FeatureAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// internalFeature=[ecore::EStructuralFeature]
protected class FilterMigrator_InternalFeatureAssignment_2_1 extends AssignmentToken  {
	
	public FilterMigrator_InternalFeatureAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getInternalFeatureAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_FullStopKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("internalFeature",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("internalFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorAccess().getInternalFeatureEStructuralFeatureCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFilterMigratorAccess().getInternalFeatureEStructuralFeatureCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// op=filterOperation
protected class FilterMigrator_OpAssignment_3 extends AssignmentToken  {
	
	public FilterMigrator_OpAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getOpAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterOperation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("op",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("op");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterOperationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFilterMigratorAccess().getOpFilterOperationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FilterMigrator_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FilterMigrator_FeatureAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// dxobj=[ecore::EObject]
protected class FilterMigrator_DxobjAssignment_4 extends AssignmentToken  {
	
	public FilterMigrator_DxobjAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getDxobjAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_OpAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dxobj",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dxobj");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorAccess().getDxobjEObjectCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFilterMigratorAccess().getDxobjEObjectCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("." dxgetters=[ecore::EStructuralFeature])?
protected class FilterMigrator_Group_5 extends GroupToken {
	
	public FilterMigrator_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_DxgettersAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class FilterMigrator_FullStopKeyword_5_0 extends KeywordToken  {
	
	public FilterMigrator_FullStopKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getFullStopKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_DxobjAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dxgetters=[ecore::EStructuralFeature]
protected class FilterMigrator_DxgettersAssignment_5_1 extends AssignmentToken  {
	
	public FilterMigrator_DxgettersAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterMigratorAccess().getDxgettersAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterMigrator_FullStopKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dxgetters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dxgetters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFilterMigratorAccess().getDxgettersEStructuralFeatureCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFilterMigratorAccess().getDxgettersEStructuralFeatureCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule FilterMigrator ****************/


/************ begin Rule filterOperation ****************
 *
 * filterOperation returns STRING:
 * 	{STRING} operator=("=" | "<>" | ":=" | "contains:");
 *
 **/

// {STRING} operator=("=" | "<>" | ":=" | "contains:")
protected class FilterOperation_Group extends GroupToken {
	
	public FilterOperation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFilterOperationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterOperation_OperatorAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFilterOperationAccess().getSTRINGAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {STRING}
protected class FilterOperation_STRINGAction_0 extends ActionToken  {

	public FilterOperation_STRINGAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFilterOperationAccess().getSTRINGAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// operator=("=" | "<>" | ":=" | "contains:")
protected class FilterOperation_OperatorAssignment_1 extends AssignmentToken  {
	
	public FilterOperation_OperatorAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFilterOperationAccess().getOperatorAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FilterOperation_STRINGAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operator",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operator");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getFilterOperationAccess().getOperatorEqualsSignKeyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFilterOperationAccess().getOperatorEqualsSignKeyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getFilterOperationAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFilterOperationAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getFilterOperationAccess().getOperatorColonEqualsSignKeyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFilterOperationAccess().getOperatorColonEqualsSignKeyword_1_0_2();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getFilterOperationAccess().getOperatorContainsKeyword_1_0_3(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFilterOperationAccess().getOperatorContainsKeyword_1_0_3();
			return obj;
		}
		return null;
	}

}


/************ end Rule filterOperation ****************/

}
